--- Execution profile ---
Total samples       : 4344
unknown_Java        : 1 (0.02%)

--- 9930000000 ns (22.86%), 993 samples
  [ 0] java_lang_Throwable::fill_in_stack_trace
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 3940000000 ns (9.07%), 394 samples
  [ 0] BacktraceBuilder::push
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 2790000000 ns (6.42%), 279 samples
  [ 0] frame::sender_for_interpreter_frame
  [ 1] frame::sender_raw
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 2150000000 ns (4.95%), 215 samples
  [ 0] CodeHeap::find_blob
  [ 1] frame::sender_for_interpreter_frame
  [ 2] frame::sender_raw
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 1760000000 ns (4.05%), 176 samples
  [ 0] frame::sender_raw
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 1660000000 ns (3.82%), 166 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<2383974ull, G1BarrierSet>, (AccessInternal::BarrierType)1, 2383974ull>::oop_access_barrier
  [ 1] BacktraceBuilder::push
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 1350000000 ns (3.11%), 135 samples
  [ 0] ObjArrayKlass::allocate
  [ 1] BacktraceBuilder::expand
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 1200000000 ns (2.76%), 120 samples
  [ 0] CodeCache::find_blob
  [ 1] frame::sender_for_interpreter_frame
  [ 2] frame::sender_raw
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 950000000 ns (2.19%), 95 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ull, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ull>::oop_access_barrier
  [ 1] BacktraceBuilder::push
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 690000000 ns (1.59%), 69 samples
  [ 0] BacktraceBuilder::expand
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 690000000 ns (1.59%), 69 samples
  [ 0] MemAllocator::allocate
  [ 1] CollectedHeap::array_allocate
  [ 2] BacktraceBuilder::expand
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 650000000 ns (1.50%), 65 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<2383974ull, G1BarrierSet>, (AccessInternal::BarrierType)1, 2383974ull>::oop_access_barrier
  [ 1] BacktraceBuilder::expand
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 600000000 ns (1.38%), 60 samples
  [ 0] frame::sender_for_compiled_frame
  [ 1] frame::sender_raw
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 580000000 ns (1.34%), 58 samples
  [ 0] Method::bci_from
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 520000000 ns (1.20%), 52 samples
  [ 0] MemAllocator::Allocation::notify_allocation
  [ 1] MemAllocator::allocate
  [ 2] CollectedHeap::array_allocate
  [ 3] BacktraceBuilder::expand
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] java_lang_Throwable::fill_in_stack_trace
  [ 6] JVM_FillInStackTrace
  [ 7] Java_java_lang_Throwable_fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.fillInStackTrace
  [10] java.lang.Throwable.<init>
  [11] java.lang.Exception.<init>
  [12] java.lang.RuntimeException.<init>
  [13] com.panfutov.Service$BusinessException.<init>
  [14] com.panfutov.Service.doWithException
  [15] com.panfutov.Benchmark.exceptions
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [17] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [18] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [19] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [20] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [22] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.runWith
  [32] java.lang.Thread.run

--- 480000000 ns (1.10%), 48 samples
  [ 0] TypeArrayKlass::allocate_common
  [ 1] BacktraceBuilder::expand
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 480000000 ns (1.10%), 48 samples
  [ 0] _platform_bzero$VARIANT$Haswell
  [ 1] ObjArrayAllocator::initialize
  [ 2] MemAllocator::allocate
  [ 3] CollectedHeap::array_allocate
  [ 4] BacktraceBuilder::expand
  [ 5] java_lang_Throwable::fill_in_stack_trace
  [ 6] java_lang_Throwable::fill_in_stack_trace
  [ 7] JVM_FillInStackTrace
  [ 8] Java_java_lang_Throwable_fillInStackTrace
  [ 9] java.lang.Throwable.fillInStackTrace
  [10] java.lang.Throwable.fillInStackTrace
  [11] java.lang.Throwable.<init>
  [12] java.lang.Exception.<init>
  [13] java.lang.RuntimeException.<init>
  [14] com.panfutov.Service$BusinessException.<init>
  [15] com.panfutov.Service.doWithException
  [16] com.panfutov.Benchmark.exceptions
  [17] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [18] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [19] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [20] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [21] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [22] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [23] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [24] java.lang.reflect.Method.invoke
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.Executors$RunnableAdapter.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.ThreadPoolExecutor.runWorker
  [31] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [32] java.lang.Thread.runWith
  [33] java.lang.Thread.run

--- 480000000 ns (1.10%), 48 samples
  [ 0] JVM_FillInStackTrace
  [ 1] Java_java_lang_Throwable_fillInStackTrace
  [ 2] java.lang.Throwable.fillInStackTrace
  [ 3] java.lang.Throwable.fillInStackTrace
  [ 4] java.lang.Throwable.<init>
  [ 5] java.lang.Exception.<init>
  [ 6] java.lang.RuntimeException.<init>
  [ 7] com.panfutov.Service$BusinessException.<init>
  [ 8] com.panfutov.Service.doWithException
  [ 9] com.panfutov.Benchmark.exceptions
  [10] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [11] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [12] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [13] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [14] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [15] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [16] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [17] java.lang.reflect.Method.invoke
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.Executors$RunnableAdapter.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.ThreadPoolExecutor.runWorker
  [24] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [25] java.lang.Thread.runWith
  [26] java.lang.Thread.run

--- 400000000 ns (0.92%), 40 samples
  [ 0] java.lang.Throwable.fillInStackTrace
  [ 1] java.lang.Throwable.fillInStackTrace
  [ 2] java.lang.Throwable.<init>
  [ 3] java.lang.Exception.<init>
  [ 4] java.lang.RuntimeException.<init>
  [ 5] com.panfutov.Service$BusinessException.<init>
  [ 6] com.panfutov.Service.doWithException
  [ 7] com.panfutov.Benchmark.exceptions
  [ 8] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 9] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [10] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [11] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [12] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [13] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [14] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.runWith
  [24] java.lang.Thread.run

--- 390000000 ns (0.90%), 39 samples
  [ 0] Continuation::is_return_barrier_entry
  [ 1] frame::sender_for_interpreter_frame
  [ 2] frame::sender_raw
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 390000000 ns (0.90%), 39 samples
  [ 0] CodeHeap::find_blob
  [ 1] JavaThread::pd_last_frame
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 380000000 ns (0.87%), 38 samples
  [ 0] ObjArrayAllocator::initialize
  [ 1] MemAllocator::allocate
  [ 2] CollectedHeap::array_allocate
  [ 3] BacktraceBuilder::expand
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] java_lang_Throwable::fill_in_stack_trace
  [ 6] JVM_FillInStackTrace
  [ 7] Java_java_lang_Throwable_fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.fillInStackTrace
  [10] java.lang.Throwable.<init>
  [11] java.lang.Exception.<init>
  [12] java.lang.RuntimeException.<init>
  [13] com.panfutov.Service$BusinessException.<init>
  [14] com.panfutov.Service.doWithException
  [15] com.panfutov.Benchmark.exceptions
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [17] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [18] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [19] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [20] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [22] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.runWith
  [32] java.lang.Thread.run

--- 370000000 ns (0.85%), 37 samples
  [ 0] frame::interpreter_frame_bcp
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 370000000 ns (0.85%), 37 samples
  [ 0] CodeBlob::is_upcall_stub
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 340000000 ns (0.78%), 34 samples
  [ 0] JavaThread::pd_last_frame
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 340000000 ns (0.78%), 34 samples
  [ 0] CodeBlob::is_upcall_stub
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 300000000 ns (0.69%), 30 samples
  [ 0] java.lang.Throwable.fillInStackTrace
  [ 1] java.lang.Throwable.<init>
  [ 2] java.lang.Exception.<init>
  [ 3] java.lang.RuntimeException.<init>
  [ 4] com.panfutov.Service$BusinessException.<init>
  [ 5] com.panfutov.Service.doWithException
  [ 6] com.panfutov.Benchmark.exceptions
  [ 7] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 8] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 9] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [10] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [11] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [12] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [13] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.runWith
  [23] java.lang.Thread.run

--- 290000000 ns (0.67%), 29 samples
  [ 0] Universe::should_fill_in_stack_trace
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 290000000 ns (0.67%), 29 samples
  [ 0] java.util.concurrent.atomic.AtomicLong.compareAndSet
  [ 1] java.util.Random.next
  [ 2] java.util.Random.nextBoolean
  [ 3] com.panfutov.Service.doWithException
  [ 4] com.panfutov.Benchmark.exceptions
  [ 5] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 6] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 7] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 8] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [ 9] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [10] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [11] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.runWith
  [21] java.lang.Thread.run

--- 270000000 ns (0.62%), 27 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<287270ull, G1BarrierSet>, (AccessInternal::BarrierType)1, 287270ull>::oop_access_barrier
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 260000000 ns (0.60%), 26 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<2383974ull, G1BarrierSet>, (AccessInternal::BarrierType)3, 2383974ull>::oop_access_barrier
  [ 1] Universe::should_fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 250000000 ns (0.58%), 25 samples
  [ 0] Continuation::is_continuation_enterSpecial
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 240000000 ns (0.55%), 24 samples
  [ 0] Method::bcp_from
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 230000000 ns (0.53%), 23 samples
  [ 0] java.lang.Throwable.<init>
  [ 1] java.lang.Exception.<init>
  [ 2] java.lang.RuntimeException.<init>
  [ 3] com.panfutov.Service$BusinessException.<init>
  [ 4] com.panfutov.Service.doWithException
  [ 5] com.panfutov.Benchmark.exceptions
  [ 6] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 7] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 8] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 9] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [10] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [11] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [12] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [13] java.lang.reflect.Method.invoke
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.Executors$RunnableAdapter.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.ThreadPoolExecutor.runWorker
  [20] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [21] java.lang.Thread.runWith
  [22] java.lang.Thread.run

--- 210000000 ns (0.48%), 21 samples
  [ 0] frame::sender_for_interpreter_frame
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 210000000 ns (0.48%), 21 samples
  [ 0] MemAllocator::Allocation::notify_allocation_jvmti_sampler
  [ 1] MemAllocator::allocate
  [ 2] CollectedHeap::array_allocate
  [ 3] BacktraceBuilder::expand
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] java_lang_Throwable::fill_in_stack_trace
  [ 6] JVM_FillInStackTrace
  [ 7] Java_java_lang_Throwable_fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.fillInStackTrace
  [10] java.lang.Throwable.<init>
  [11] java.lang.Exception.<init>
  [12] java.lang.RuntimeException.<init>
  [13] com.panfutov.Service$BusinessException.<init>
  [14] com.panfutov.Service.doWithException
  [15] com.panfutov.Benchmark.exceptions
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [17] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [18] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [19] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [20] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [22] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.runWith
  [32] java.lang.Thread.run

--- 210000000 ns (0.48%), 21 samples
  [ 0] CodeCache::find_blob
  [ 1] JavaThread::pd_last_frame
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 210000000 ns (0.48%), 21 samples
  [ 0] BacktraceBuilder::push
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 200000000 ns (0.46%), 20 samples
  [ 0] java_lang_Throwable::fill_in_stack_trace
  [ 1] JVM_FillInStackTrace
  [ 2] Java_java_lang_Throwable_fillInStackTrace
  [ 3] java.lang.Throwable.fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.<init>
  [ 6] java.lang.Exception.<init>
  [ 7] java.lang.RuntimeException.<init>
  [ 8] com.panfutov.Service$BusinessException.<init>
  [ 9] com.panfutov.Service.doWithException
  [10] com.panfutov.Benchmark.exceptions
  [11] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [13] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [14] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [16] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.runWith
  [27] java.lang.Thread.run

--- 200000000 ns (0.46%), 20 samples
  [ 0] frame::interpreter_frame_method
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 180000000 ns (0.41%), 18 samples
  [ 0] CodeCache::find_blob
  [ 1] frame::sender_raw
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 180000000 ns (0.41%), 18 samples
  [ 0] nmethod::metadata_at
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 180000000 ns (0.41%), 18 samples
  [ 0] Method::bci_from
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 180000000 ns (0.41%), 18 samples
  [ 0] nmethod::metadata_addr_at
  [ 1] nmethod::metadata_at
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 170000000 ns (0.39%), 17 samples
  [ 0] MemAllocator::Allocation::check_out_of_memory
  [ 1] MemAllocator::allocate
  [ 2] CollectedHeap::array_allocate
  [ 3] BacktraceBuilder::expand
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] java_lang_Throwable::fill_in_stack_trace
  [ 6] JVM_FillInStackTrace
  [ 7] Java_java_lang_Throwable_fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.fillInStackTrace
  [10] java.lang.Throwable.<init>
  [11] java.lang.Exception.<init>
  [12] java.lang.RuntimeException.<init>
  [13] com.panfutov.Service$BusinessException.<init>
  [14] com.panfutov.Service.doWithException
  [15] com.panfutov.Benchmark.exceptions
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [17] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [18] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [19] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [20] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [22] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.runWith
  [32] java.lang.Thread.run

--- 170000000 ns (0.39%), 17 samples
  [ 0] Continuation::is_continuation_enterSpecial
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 170000000 ns (0.39%), 17 samples
  [ 0] frame::interpreter_frame_method
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 160000000 ns (0.37%), 16 samples
  [ 0] _platform_bzero$VARIANT$Haswell
  [ 1] MemAllocator::allocate
  [ 2] CollectedHeap::array_allocate
  [ 3] BacktraceBuilder::expand
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] java_lang_Throwable::fill_in_stack_trace
  [ 6] JVM_FillInStackTrace
  [ 7] Java_java_lang_Throwable_fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.fillInStackTrace
  [10] java.lang.Throwable.<init>
  [11] java.lang.Exception.<init>
  [12] java.lang.RuntimeException.<init>
  [13] com.panfutov.Service$BusinessException.<init>
  [14] com.panfutov.Service.doWithException
  [15] com.panfutov.Benchmark.exceptions
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [17] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [18] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [19] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [20] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [22] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.runWith
  [32] java.lang.Thread.run

--- 160000000 ns (0.37%), 16 samples
  [ 0] Method::bcp_from
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 150000000 ns (0.35%), 15 samples
  [ 0] CodeBlob::is_upcall_stub
  [ 1] frame::sender_raw
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 150000000 ns (0.35%), 15 samples
  [ 0] Klass::check_array_allocation_length
  [ 1] TypeArrayKlass::allocate_common
  [ 2] BacktraceBuilder::expand
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 150000000 ns (0.35%), 15 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<2383974ull, G1BarrierSet>, (AccessInternal::BarrierType)1, 2383974ull>::oop_access_barrier
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 150000000 ns (0.35%), 15 samples
  [ 0] ThreadShadow::clear_pending_exception
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 140000000 ns (0.32%), 14 samples
  [ 0] CollectedHeap::array_allocate
  [ 1] BacktraceBuilder::expand
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 140000000 ns (0.32%), 14 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ull, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ull>::oop_access_barrier
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 130000000 ns (0.30%), 13 samples
  [ 0] semaphore_wait_trap
  [ 1] WorkerThread::run
  [ 2] Thread::call_run
  [ 3] thread_native_entry
  [ 4] _pthread_start
  [ 5] thread_start

--- 130000000 ns (0.30%), 13 samples
  [ 0] Continuation::is_return_barrier_entry
  [ 1] frame::sender_raw
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 120000000 ns (0.28%), 12 samples
  [ 0] java.util.Random.next
  [ 1] java.util.Random.nextBoolean
  [ 2] com.panfutov.Service.doWithException
  [ 3] com.panfutov.Benchmark.exceptions
  [ 4] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 5] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 6] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 7] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [ 8] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [ 9] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [10] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.runWith
  [20] java.lang.Thread.run

--- 120000000 ns (0.28%), 12 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<286822ull, G1BarrierSet>, (AccessInternal::BarrierType)1, 286822ull>::oop_access_barrier
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 120000000 ns (0.28%), 12 samples
  [ 0] nmethod::metadata_at
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 110000000 ns (0.25%), 11 samples
  [ 0] CodeHeap::find_blob
  [ 1] frame::sender_for_compiled_frame
  [ 2] frame::sender_raw
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 110000000 ns (0.25%), 11 samples
  [ 0] tlv_get_addr
  [ 1] CollectedHeap::array_allocate
  [ 2] BacktraceBuilder::expand
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 110000000 ns (0.25%), 11 samples
  [ 0] com.panfutov.Service.doWithException
  [ 1] com.panfutov.Benchmark.exceptions
  [ 2] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 3] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 4] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 5] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [ 6] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [ 7] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 8] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.runWith
  [18] java.lang.Thread.run

--- 100000000 ns (0.23%), 10 samples
  [ 0] nmethod::metadata_addr_at
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 90000000 ns (0.21%), 9 samples
  [ 0] Klass::check_array_allocation_length
  [ 1] ObjArrayKlass::allocate
  [ 2] BacktraceBuilder::expand
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 80000000 ns (0.18%), 8 samples
  [ 0] frame::sender_raw
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 80000000 ns (0.18%), 8 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<2383974ull, G1BarrierSet>, (AccessInternal::BarrierType)3, 2383974ull>::oop_access_barrier
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 80000000 ns (0.18%), 8 samples
  [ 0] Continuation::is_return_barrier_entry
  [ 1] frame::sender_for_compiled_frame
  [ 2] frame::sender_raw
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 70000000 ns (0.16%), 7 samples
  [ 0] frame::entry_frame_is_first
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 70000000 ns (0.16%), 7 samples
  [ 0] RegisterMap::RegisterMap
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 60000000 ns (0.14%), 6 samples
  [ 0] java.util.Random.next
  [ 1] java.util.Random.nextBoolean
  [ 2] com.panfutov.Service.doWithException
  [ 3] com.panfutov.Benchmark.exceptions
  [ 4] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 5] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 6] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 7] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [ 8] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [ 9] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [10] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.runWith
  [20] java.lang.Thread.run

--- 60000000 ns (0.14%), 6 samples
  [ 0] nmethod::scopes_pcs_begin
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 60000000 ns (0.14%), 6 samples
  [ 0] MemAllocator::allocate
  [ 1] BacktraceBuilder::expand
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 60000000 ns (0.14%), 6 samples
  [ 0] ObjArrayAllocator::initialize
  [ 1] CollectedHeap::array_allocate
  [ 2] BacktraceBuilder::expand
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 60000000 ns (0.14%), 6 samples
  [ 0] java.lang.Throwable.<init>
  [ 1] java.lang.Exception.<init>
  [ 2] java.lang.RuntimeException.<init>
  [ 3] com.panfutov.Service$BusinessException.<init>
  [ 4] com.panfutov.Service.doWithException
  [ 5] com.panfutov.Benchmark.exceptions
  [ 6] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 7] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 8] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 9] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [10] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [11] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [12] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [13] java.lang.reflect.Method.invoke
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.Executors$RunnableAdapter.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.ThreadPoolExecutor.runWorker
  [20] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [21] java.lang.Thread.runWith
  [22] java.lang.Thread.run

--- 60000000 ns (0.14%), 6 samples
  [ 0] Klass::check_array_allocation_length
  [ 1] BacktraceBuilder::expand
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 60000000 ns (0.14%), 6 samples
  [ 0] PreserveExceptionMark::PreserveExceptionMark
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 50000000 ns (0.12%), 5 samples
  [ 0] oopDesc::release_obj_field_put
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 50000000 ns (0.12%), 5 samples
  [ 0] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 1] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 2] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 3] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [ 4] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [ 5] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 6] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 7] java.lang.reflect.Method.invoke
  [ 8] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.Executors$RunnableAdapter.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.ThreadPoolExecutor.runWorker
  [14] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [15] java.lang.Thread.runWith
  [16] java.lang.Thread.run

--- 50000000 ns (0.12%), 5 samples
  [ 0] frame::sender_for_compiled_frame
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 50000000 ns (0.12%), 5 samples
  [ 0] ThreadShadow::clear_pending_exception
  [ 1] JVM_FillInStackTrace
  [ 2] Java_java_lang_Throwable_fillInStackTrace
  [ 3] java.lang.Throwable.fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.<init>
  [ 6] java.lang.Exception.<init>
  [ 7] java.lang.RuntimeException.<init>
  [ 8] com.panfutov.Service$BusinessException.<init>
  [ 9] com.panfutov.Service.doWithException
  [10] com.panfutov.Benchmark.exceptions
  [11] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [13] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [14] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [16] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.runWith
  [27] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] java.lang.Throwable.<init>
  [ 1] java.lang.Exception.<init>
  [ 2] java.lang.RuntimeException.<init>
  [ 3] com.panfutov.Service$BusinessException.<init>
  [ 4] com.panfutov.Service.doWithException
  [ 5] com.panfutov.Benchmark.exceptions
  [ 6] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 7] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 8] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 9] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [10] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [11] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [12] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [13] java.lang.reflect.Method.invoke
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.Executors$RunnableAdapter.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.ThreadPoolExecutor.runWorker
  [20] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [21] java.lang.Thread.runWith
  [22] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<287270ull, G1BarrierSet>, (AccessInternal::BarrierType)1, 287270ull>::oop_access_barrier
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] CodeHeap::find_blob
  [ 1] frame::sender_raw
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] tlv_get_addr
  [ 1] JVM_FillInStackTrace
  [ 2] Java_java_lang_Throwable_fillInStackTrace
  [ 3] java.lang.Throwable.fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.<init>
  [ 6] java.lang.Exception.<init>
  [ 7] java.lang.RuntimeException.<init>
  [ 8] com.panfutov.Service$BusinessException.<init>
  [ 9] com.panfutov.Service.doWithException
  [10] com.panfutov.Benchmark.exceptions
  [11] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [13] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [14] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [16] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.runWith
  [27] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] PreserveExceptionMark::~PreserveExceptionMark
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] PcDescCache::find_pc_desc
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] JVM_FillInStackTrace
  [ 1] java.lang.Throwable.fillInStackTrace
  [ 2] java.lang.Throwable.fillInStackTrace
  [ 3] java.lang.Throwable.<init>
  [ 4] java.lang.Exception.<init>
  [ 5] java.lang.RuntimeException.<init>
  [ 6] com.panfutov.Service$BusinessException.<init>
  [ 7] com.panfutov.Service.doWithException
  [ 8] com.panfutov.Benchmark.exceptions
  [ 9] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [10] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [11] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [12] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [13] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [14] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [15] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.runWith
  [25] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] ObjArrayKlass::allocate
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] MemAllocator::Allocation::check_out_of_memory
  [ 1] CollectedHeap::array_allocate
  [ 2] BacktraceBuilder::expand
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] __psynch_cvwait
  [ 1] PlatformMonitor::wait
  [ 2] Monitor::wait_without_safepoint_check
  [ 3] WatcherThread::sleep
  [ 4] WatcherThread::run
  [ 5] Thread::call_run
  [ 6] thread_native_entry
  [ 7] _pthread_start
  [ 8] thread_start

--- 30000000 ns (0.07%), 3 samples
  [ 0] CodeCache::find_blob
  [ 1] frame::sender_for_compiled_frame
  [ 2] frame::sender_raw
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] CodeCache::find_blob
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] nmethod::scopes_pcs_end
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] JavaFrameAnchor::make_walkable
  [ 1] Java_java_lang_Throwable_fillInStackTrace
  [ 2] java.lang.Throwable.fillInStackTrace
  [ 3] java.lang.Throwable.fillInStackTrace
  [ 4] java.lang.Throwable.<init>
  [ 5] java.lang.Exception.<init>
  [ 6] java.lang.RuntimeException.<init>
  [ 7] com.panfutov.Service$BusinessException.<init>
  [ 8] com.panfutov.Service.doWithException
  [ 9] com.panfutov.Benchmark.exceptions
  [10] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [11] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [12] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [13] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [14] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [15] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [16] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [17] java.lang.reflect.Method.invoke
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.Executors$RunnableAdapter.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.ThreadPoolExecutor.runWorker
  [24] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [25] java.lang.Thread.runWith
  [26] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] frame::entry_frame_is_first
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] MemAllocator::Allocation::notify_allocation
  [ 1] CollectedHeap::array_allocate
  [ 2] BacktraceBuilder::expand
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] frame::interpreter_frame_bcp
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] com.panfutov.Service.doWithException
  [ 1] com.panfutov.Benchmark.exceptions
  [ 2] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 3] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 4] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 5] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [ 6] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [ 7] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 8] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.runWith
  [18] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] JavaFrameAnchor::make_walkable
  [ 1] JVM_FillInStackTrace
  [ 2] Java_java_lang_Throwable_fillInStackTrace
  [ 3] java.lang.Throwable.fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.<init>
  [ 6] java.lang.Exception.<init>
  [ 7] java.lang.RuntimeException.<init>
  [ 8] com.panfutov.Service$BusinessException.<init>
  [ 9] com.panfutov.Service.doWithException
  [10] com.panfutov.Benchmark.exceptions
  [11] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [13] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [14] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [16] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.runWith
  [27] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 1] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 2] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 3] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [ 4] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [ 5] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 6] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 7] java.lang.reflect.Method.invoke
  [ 8] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.Executors$RunnableAdapter.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.ThreadPoolExecutor.runWorker
  [14] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [15] java.lang.Thread.runWith
  [16] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ull, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ull>::oop_access_barrier
  [ 1] Universe::should_fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] PcDescCache::find_pc_desc
  [ 1] PcDescContainer::find_pc_desc_internal
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] java.lang.Throwable.getMessage
  [ 1] com.panfutov.Benchmark.exceptions
  [ 2] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 3] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 4] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 5] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [ 6] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [ 7] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 8] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.runWith
  [18] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] semaphore_wait_trap
  [ 1] WorkerThread::run
  [ 2] Thread::call_run
  [ 3] thread_native_entry
  [ 4] _pthread_start
  [ 5] thread_start

--- 30000000 ns (0.07%), 3 samples
  [ 0] java.lang.Throwable.getMessage
  [ 1] com.panfutov.Benchmark.exceptions
  [ 2] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 3] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 4] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 5] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [ 6] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [ 7] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 8] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.runWith
  [18] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] nmethod::scopes_pcs_end
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] com.panfutov.Service$BusinessException.<init>
  [ 1] com.panfutov.Service.doWithException
  [ 2] com.panfutov.Benchmark.exceptions
  [ 3] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 4] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 5] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 6] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [ 7] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [ 8] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 9] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [10] java.lang.reflect.Method.invoke
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.Executors$RunnableAdapter.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.ThreadPoolExecutor.runWorker
  [17] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [18] java.lang.Thread.runWith
  [19] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] _os_semaphore_wait.cold.1
  [ 1] MemAllocator::allocate
  [ 2] CollectedHeap::array_allocate
  [ 3] BacktraceBuilder::expand
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] java_lang_Throwable::fill_in_stack_trace
  [ 6] JVM_FillInStackTrace
  [ 7] Java_java_lang_Throwable_fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.fillInStackTrace
  [10] java.lang.Throwable.<init>
  [11] java.lang.Exception.<init>
  [12] java.lang.RuntimeException.<init>
  [13] com.panfutov.Service$BusinessException.<init>
  [14] com.panfutov.Service.doWithException
  [15] com.panfutov.Benchmark.exceptions
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [17] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [18] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [19] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [20] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [22] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.runWith
  [32] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] oopFactory::new_objectArray
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] methodHandle::~methodHandle
  [ 1] Java_java_lang_Throwable_fillInStackTrace
  [ 2] java.lang.Throwable.fillInStackTrace
  [ 3] java.lang.Throwable.fillInStackTrace
  [ 4] java.lang.Throwable.<init>
  [ 5] java.lang.Exception.<init>
  [ 6] java.lang.RuntimeException.<init>
  [ 7] com.panfutov.Service$BusinessException.<init>
  [ 8] com.panfutov.Service.doWithException
  [ 9] com.panfutov.Benchmark.exceptions
  [10] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [11] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [12] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [13] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [14] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [15] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [16] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [17] java.lang.reflect.Method.invoke
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.Executors$RunnableAdapter.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.ThreadPoolExecutor.runWorker
  [24] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [25] java.lang.Thread.runWith
  [26] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] BacktraceBuilder::expand
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] CollectedHeap::array_allocate
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] PcDescContainer::find_pc_desc_internal
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] methodHandle::~methodHandle
  [ 1] JVM_FillInStackTrace
  [ 2] Java_java_lang_Throwable_fillInStackTrace
  [ 3] java.lang.Throwable.fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.<init>
  [ 6] java.lang.Exception.<init>
  [ 7] java.lang.RuntimeException.<init>
  [ 8] com.panfutov.Service$BusinessException.<init>
  [ 9] com.panfutov.Service.doWithException
  [10] com.panfutov.Benchmark.exceptions
  [11] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [13] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [14] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [16] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.runWith
  [27] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ull, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ull>::oop_access_barrier
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] oopFactory::new_intArray
  [ 1] BacktraceBuilder::expand
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] pthread_mutex_lock
  [ 1] _pthread_cond_wait
  [ 2] PlatformMonitor::wait
  [ 3] Monitor::wait_without_safepoint_check
  [ 4] WatcherThread::sleep
  [ 5] WatcherThread::run
  [ 6] Thread::call_run
  [ 7] thread_native_entry
  [ 8] _pthread_start
  [ 9] thread_start

--- 20000000 ns (0.05%), 2 samples
  [ 0] oopFactory::new_symbolArray
  [ 1] BacktraceBuilder::expand
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<286822ull, G1BarrierSet>, (AccessInternal::BarrierType)1, 286822ull>::oop_access_barrier
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] com.panfutov.Benchmark.exceptions
  [ 1] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 2] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 3] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 4] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [ 5] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [ 6] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 7] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 8] java.lang.reflect.Method.invoke
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] java.util.concurrent.FutureTask.run
  [12] java.util.concurrent.Executors$RunnableAdapter.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.ThreadPoolExecutor.runWorker
  [15] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [16] java.lang.Thread.runWith
  [17] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] com.panfutov.Service.doWithException
  [ 1] com.panfutov.Benchmark.exceptions
  [ 2] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 3] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 4] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 5] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [ 6] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [ 7] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 8] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.runWith
  [18] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] pthread_mutex_trylock
  [ 1] G1CollectedHeap::attempt_allocation_slow
  [ 2] G1CollectedHeap::attempt_allocation
  [ 3] MemAllocator::mem_allocate_inside_tlab_slow
  [ 4] MemAllocator::allocate
  [ 5] CollectedHeap::array_allocate
  [ 6] BacktraceBuilder::expand
  [ 7] java_lang_Throwable::fill_in_stack_trace
  [ 8] java_lang_Throwable::fill_in_stack_trace
  [ 9] JVM_FillInStackTrace
  [10] Java_java_lang_Throwable_fillInStackTrace
  [11] java.lang.Throwable.fillInStackTrace
  [12] java.lang.Throwable.fillInStackTrace
  [13] java.lang.Throwable.<init>
  [14] java.lang.Exception.<init>
  [15] java.lang.RuntimeException.<init>
  [16] com.panfutov.Service$BusinessException.<init>
  [17] com.panfutov.Service.doWithException
  [18] com.panfutov.Benchmark.exceptions
  [19] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [20] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [21] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [22] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [23] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [24] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [25] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.runWith
  [35] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] JavaFrameAnchor::make_walkable
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] java_lang_Throwable::fill_in_stack_trace
  [ 1] JVM_FillInStackTrace
  [ 2] Java_java_lang_Throwable_fillInStackTrace
  [ 3] java.lang.Throwable.fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.<init>
  [ 6] java.lang.Exception.<init>
  [ 7] java.lang.RuntimeException.<init>
  [ 8] com.panfutov.Service$BusinessException.<init>
  [ 9] com.panfutov.Service.doWithException
  [10] com.panfutov.Benchmark.exceptions
  [11] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [13] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [14] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [16] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.runWith
  [27] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] nmethod::scopes_pcs_begin
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] oopFactory::new_shortArray
  [ 1] BacktraceBuilder::expand
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] MasterFreeRegionListChecker::check_mt_safety
  [ 1] G1CollectedHeap::new_mutator_alloc_region
  [ 2] G1AllocRegion::new_alloc_region_and_allocate
  [ 3] G1CollectedHeap::attempt_allocation_slow
  [ 4] G1CollectedHeap::attempt_allocation
  [ 5] MemAllocator::mem_allocate_inside_tlab_slow
  [ 6] MemAllocator::allocate
  [ 7] CollectedHeap::array_allocate
  [ 8] BacktraceBuilder::expand
  [ 9] java_lang_Throwable::fill_in_stack_trace
  [10] java_lang_Throwable::fill_in_stack_trace
  [11] JVM_FillInStackTrace
  [12] Java_java_lang_Throwable_fillInStackTrace
  [13] java.lang.Throwable.fillInStackTrace
  [14] java.lang.Throwable.fillInStackTrace
  [15] java.lang.Throwable.<init>
  [16] java.lang.Exception.<init>
  [17] java.lang.RuntimeException.<init>
  [18] com.panfutov.Service$BusinessException.<init>
  [19] com.panfutov.Service.doWithException
  [20] com.panfutov.Benchmark.exceptions
  [21] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [22] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [23] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [24] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [25] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [26] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [27] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [28] java.lang.reflect.Method.invoke
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.Executors$RunnableAdapter.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.ThreadPoolExecutor.runWorker
  [35] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [36] java.lang.Thread.runWith
  [37] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.util.concurrent.ConcurrentHashMap.replaceNode
  [ 1] java.util.concurrent.ConcurrentHashMap.remove
  [ 2] org.openjdk.jmh.runner.BenchmarkHandler.getWorkerData
  [ 3] org.openjdk.jmh.runner.BenchmarkHandler.access$300
  [ 4] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 5] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 6] java.util.concurrent.FutureTask.run
  [ 7] java.util.concurrent.Executors$RunnableAdapter.call
  [ 8] java.util.concurrent.FutureTask.run
  [ 9] java.util.concurrent.ThreadPoolExecutor.runWorker
  [10] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [11] java.lang.Thread.runWith
  [12] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] HeapRegionManager::allocate_free_region
  [ 1] G1CollectedHeap::new_mutator_alloc_region
  [ 2] G1AllocRegion::new_alloc_region_and_allocate
  [ 3] G1CollectedHeap::attempt_allocation_slow
  [ 4] G1CollectedHeap::attempt_allocation
  [ 5] MemAllocator::mem_allocate_inside_tlab_slow
  [ 6] MemAllocator::allocate
  [ 7] CollectedHeap::array_allocate
  [ 8] BacktraceBuilder::expand
  [ 9] java_lang_Throwable::fill_in_stack_trace
  [10] java_lang_Throwable::fill_in_stack_trace
  [11] JVM_FillInStackTrace
  [12] Java_java_lang_Throwable_fillInStackTrace
  [13] java.lang.Throwable.fillInStackTrace
  [14] java.lang.Throwable.fillInStackTrace
  [15] java.lang.Throwable.<init>
  [16] java.lang.Exception.<init>
  [17] java.lang.RuntimeException.<init>
  [18] com.panfutov.Service$BusinessException.<init>
  [19] com.panfutov.Service.doWithException
  [20] com.panfutov.Benchmark.exceptions
  [21] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [22] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [23] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [24] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [25] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [26] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [27] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [28] java.lang.reflect.Method.invoke
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.Executors$RunnableAdapter.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.ThreadPoolExecutor.runWorker
  [35] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [36] java.lang.Thread.runWith
  [37] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] com.panfutov.Service.doWithException
  [ 1] com.panfutov.Benchmark.exceptions
  [ 2] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 3] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 4] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 5] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [ 6] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [ 7] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 8] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.runWith
  [18] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] SpinPause
  [ 1] G1ParEvacuateFollowersClosure::do_void
  [ 2] G1EvacuateRegionsBaseTask::evacuate_live_objects
  [ 3] G1EvacuateRegionsBaseTask::work
  [ 4] WorkerThread::run
  [ 5] Thread::call_run
  [ 6] thread_native_entry
  [ 7] _pthread_start
  [ 8] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] semaphore_signal_trap
  [ 1] WorkerThreads::run_task
  [ 2] void WeakProcessor::weak_oops_do<G1STWIsAliveClosure, G1KeepAliveClosure>
  [ 3] G1YoungCollector::post_evacuate_collection_set
  [ 4] G1YoungCollector::collect
  [ 5] G1CollectedHeap::do_collection_pause_at_safepoint_helper
  [ 6] G1CollectedHeap::do_collection_pause_at_safepoint
  [ 7] VM_G1CollectForAllocation::doit
  [ 8] VM_Operation::evaluate
  [ 9] VMThread::evaluate_operation
  [10] VMThread::inner_execute
  [11] VMThread::run
  [12] Thread::call_run
  [13] thread_native_entry
  [14] _pthread_start
  [15] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] oopFactory::new_intArray
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] JavaThread::pd_last_frame
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] collapse
  [ 1] java.lang.Throwable.fillInStackTrace
  [ 2] java.lang.Throwable.fillInStackTrace
  [ 3] java.lang.Throwable.<init>
  [ 4] java.lang.Exception.<init>
  [ 5] java.lang.RuntimeException.<init>
  [ 6] com.panfutov.Service$BusinessException.<init>
  [ 7] com.panfutov.Service.doWithException
  [ 8] com.panfutov.Benchmark.exceptions
  [ 9] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [10] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [11] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [12] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [13] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [14] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [15] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.runWith
  [25] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.util.Random.next
  [ 1] java.util.Random.nextBoolean
  [ 2] com.panfutov.Service.doWithException
  [ 3] com.panfutov.Benchmark.exceptions
  [ 4] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 5] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 6] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 7] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [ 8] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [ 9] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [10] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.runWith
  [20] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] G1MonitoringSupport::recalculate_sizes
  [ 1] G1AllocRegion::retire_internal
  [ 2] MutatorAllocRegion::retire
  [ 3] G1CollectedHeap::attempt_allocation_slow
  [ 4] G1CollectedHeap::attempt_allocation
  [ 5] MemAllocator::mem_allocate_inside_tlab_slow
  [ 6] MemAllocator::allocate
  [ 7] CollectedHeap::array_allocate
  [ 8] BacktraceBuilder::expand
  [ 9] java_lang_Throwable::fill_in_stack_trace
  [10] java_lang_Throwable::fill_in_stack_trace
  [11] JVM_FillInStackTrace
  [12] Java_java_lang_Throwable_fillInStackTrace
  [13] java.lang.Throwable.fillInStackTrace
  [14] java.lang.Throwable.fillInStackTrace
  [15] java.lang.Throwable.<init>
  [16] java.lang.Exception.<init>
  [17] java.lang.RuntimeException.<init>
  [18] com.panfutov.Service$BusinessException.<init>
  [19] com.panfutov.Service.doWithException
  [20] com.panfutov.Benchmark.exceptions
  [21] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [22] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [23] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [24] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [25] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [26] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [27] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [28] java.lang.reflect.Method.invoke
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.Executors$RunnableAdapter.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.ThreadPoolExecutor.runWorker
  [35] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [36] java.lang.Thread.runWith
  [37] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] MemAllocator::Allocation::notify_allocation_jvmti_sampler
  [ 1] CollectedHeap::array_allocate
  [ 2] BacktraceBuilder::expand
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] oopDesc::release_obj_field_put
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] G1MergeHeapRootsTask::G1ClearBitmapClosure::do_heap_region
  [ 1] G1CollectedHeap::par_iterate_regions_array
  [ 2] G1MergeHeapRootsTask::work
  [ 3] WorkerThread::run
  [ 4] Thread::call_run
  [ 5] thread_native_entry
  [ 6] _pthread_start
  [ 7] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] pthread_mutex_lock
  [ 1] Mutex::lock_without_safepoint_check
  [ 2] OopStorage::trigger_cleanup_if_needed
  [ 3] ParallelCleanupTask::work
  [ 4] SafepointSynchronize::do_cleanup_tasks
  [ 5] SafepointSynchronize::begin
  [ 6] VMThread::inner_execute
  [ 7] VMThread::run
  [ 8] Thread::call_run
  [ 9] thread_native_entry
  [10] _pthread_start
  [11] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] Universe::should_fill_in_stack_trace
  [ 1] JVM_FillInStackTrace
  [ 2] Java_java_lang_Throwable_fillInStackTrace
  [ 3] java.lang.Throwable.fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.<init>
  [ 6] java.lang.Exception.<init>
  [ 7] java.lang.RuntimeException.<init>
  [ 8] com.panfutov.Service$BusinessException.<init>
  [ 9] com.panfutov.Service.doWithException
  [10] com.panfutov.Benchmark.exceptions
  [11] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [13] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [14] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [16] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.runWith
  [27] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] Java_java_lang_Throwable_fillInStackTrace
  [ 1] java.lang.Throwable.fillInStackTrace
  [ 2] java.lang.Throwable.fillInStackTrace
  [ 3] java.lang.Throwable.<init>
  [ 4] java.lang.Exception.<init>
  [ 5] java.lang.RuntimeException.<init>
  [ 6] com.panfutov.Service$BusinessException.<init>
  [ 7] com.panfutov.Service.doWithException
  [ 8] com.panfutov.Benchmark.exceptions
  [ 9] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [10] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [11] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [12] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [13] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [14] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [15] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.runWith
  [25] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] __psynch_cvwait
  [ 1] Parker::park
  [ 2] Unsafe_Park
  [ 3] jdk.internal.misc.Unsafe.park
  [ 4] java.util.concurrent.locks.LockSupport.park
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire
  [ 6] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly
  [ 7] java.util.concurrent.CountDownLatch.await
  [ 8] org.openjdk.jmh.runner.InfraControlL2.awaitWarmupReady
  [ 9] org.openjdk.jmh.runner.InfraControl.awaitWarmupReady
  [10] org.openjdk.jmh.runner.BenchmarkHandler.runIteration
  [11] org.openjdk.jmh.runner.BaseRunner.runBenchmark
  [12] org.openjdk.jmh.runner.BaseRunner.runBenchmark
  [13] org.openjdk.jmh.runner.BaseRunner.doSingle
  [14] org.openjdk.jmh.runner.BaseRunner.runBenchmarksForked
  [15] org.openjdk.jmh.runner.ForkedRunner.run
  [16] org.openjdk.jmh.runner.ForkedMain.main

--- 10000000 ns (0.02%), 1 sample
  [ 0] oopFactory::new_objectArray
  [ 1] BacktraceBuilder::expand
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] G1YoungGCTraceTime::G1YoungGCTraceTime
  [ 1] G1YoungCollector::collect
  [ 2] G1CollectedHeap::do_collection_pause_at_safepoint_helper
  [ 3] G1CollectedHeap::do_collection_pause_at_safepoint
  [ 4] VM_G1CollectForAllocation::doit
  [ 5] VM_Operation::evaluate
  [ 6] VMThread::evaluate_operation
  [ 7] VMThread::inner_execute
  [ 8] VMThread::run
  [ 9] Thread::call_run
  [10] thread_native_entry
  [11] _pthread_start
  [12] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] OopMapCache::lookup
  [ 1] Method::mask_for
  [ 2] frame::oops_interpreted_do
  [ 3] JavaThread::oops_do_frames
  [ 4] Thread::oops_do
  [ 5] Threads::possibly_parallel_threads_do
  [ 6] Threads::possibly_parallel_oops_do
  [ 7] G1RootProcessor::process_java_roots
  [ 8] G1RootProcessor::evacuate_roots
  [ 9] G1EvacuateRegionsTask::scan_roots
  [10] G1EvacuateRegionsBaseTask::work
  [11] WorkerThread::run
  [12] Thread::call_run
  [13] thread_native_entry
  [14] _pthread_start
  [15] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] CodeHeap::find_blob
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] __gettimeofday
  [ 1] PlatformMonitor::wait
  [ 2] Monitor::wait_without_safepoint_check
  [ 3] TaskTerminator::offer_termination
  [ 4] G1ParEvacuateFollowersClosure::do_void
  [ 5] G1EvacuateRegionsBaseTask::evacuate_live_objects
  [ 6] G1EvacuateRegionsBaseTask::work
  [ 7] WorkerThread::run
  [ 8] Thread::call_run
  [ 9] thread_native_entry
  [10] _pthread_start
  [11] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] OopStorage::BasicParState::BasicParState
  [ 1] G1RootProcessor::G1RootProcessor
  [ 2] G1YoungCollector::evacuate_initial_collection_set
  [ 3] G1YoungCollector::collect
  [ 4] G1CollectedHeap::do_collection_pause_at_safepoint_helper
  [ 5] G1CollectedHeap::do_collection_pause_at_safepoint
  [ 6] VM_G1CollectForAllocation::doit
  [ 7] VM_Operation::evaluate
  [ 8] VMThread::evaluate_operation
  [ 9] VMThread::inner_execute
  [10] VMThread::run
  [11] Thread::call_run
  [12] thread_native_entry
  [13] _pthread_start
  [14] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] _nanov2_free
  [ 1] G1RemSetScanState::G1ClearCardTableTask::~G1ClearCardTableTask
  [ 2] G1BatchedTask::~G1BatchedTask
  [ 3] G1YoungCollector::post_evacuate_collection_set
  [ 4] G1YoungCollector::collect
  [ 5] G1CollectedHeap::do_collection_pause_at_safepoint_helper
  [ 6] G1CollectedHeap::do_collection_pause_at_safepoint
  [ 7] VM_G1CollectForAllocation::doit
  [ 8] VM_Operation::evaluate
  [ 9] VMThread::evaluate_operation
  [10] VMThread::inner_execute
  [11] VMThread::run
  [12] Thread::call_run
  [13] thread_native_entry
  [14] _pthread_start
  [15] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] szone_try_free_default
  [ 1] G1YoungCollector::collect
  [ 2] G1CollectedHeap::do_collection_pause_at_safepoint_helper
  [ 3] G1CollectedHeap::do_collection_pause_at_safepoint
  [ 4] VM_G1CollectForAllocation::doit
  [ 5] VM_Operation::evaluate
  [ 6] VMThread::evaluate_operation
  [ 7] VMThread::inner_execute
  [ 8] VMThread::run
  [ 9] Thread::call_run
  [10] thread_native_entry
  [11] _pthread_start
  [12] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] HeapRegionManager::par_iterate
  [ 1] G1PrepareEvacuationTask::work
  [ 2] WorkerThread::run
  [ 3] Thread::call_run
  [ 4] thread_native_entry
  [ 5] _pthread_start
  [ 6] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] LIR_List::branch
  [ 1] LIRGenerator::increment_event_counter_impl
  [ 2] LIRGenerator::do_ProfileInvoke
  [ 3] LIRGenerator::block_do
  [ 4] BlockList::iterate_forward
  [ 5] Compilation::emit_lir
  [ 6] Compilation::compile_java_method
  [ 7] Compilation::compile_method
  [ 8] Compilation::Compilation
  [ 9] Compiler::compile_method
  [10] CompileBroker::invoke_compiler_on_method
  [11] CompileBroker::compiler_thread_loop
  [12] JavaThread::thread_main_inner
  [13] Thread::call_run
  [14] thread_native_entry
  [15] _pthread_start
  [16] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.lang.Throwable.fillInStackTrace
  [ 1] [unknown_Java]

--- 10000000 ns (0.02%), 1 sample
  [ 0] MemAllocator::mem_allocate_inside_tlab_slow
  [ 1] MemAllocator::allocate
  [ 2] CollectedHeap::array_allocate
  [ 3] BacktraceBuilder::expand
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] java_lang_Throwable::fill_in_stack_trace
  [ 6] JVM_FillInStackTrace
  [ 7] Java_java_lang_Throwable_fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.fillInStackTrace
  [10] java.lang.Throwable.<init>
  [11] java.lang.Exception.<init>
  [12] java.lang.RuntimeException.<init>
  [13] com.panfutov.Service$BusinessException.<init>
  [14] com.panfutov.Service.doWithException
  [15] com.panfutov.Benchmark.exceptions
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [17] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [18] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [19] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [20] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [22] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.runWith
  [32] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] ZThread::~ZThread
  [ 1] MemAllocator::allocate
  [ 2] CollectedHeap::array_allocate
  [ 3] BacktraceBuilder::expand
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] java_lang_Throwable::fill_in_stack_trace
  [ 6] JVM_FillInStackTrace
  [ 7] Java_java_lang_Throwable_fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.fillInStackTrace
  [10] java.lang.Throwable.<init>
  [11] java.lang.Exception.<init>
  [12] java.lang.RuntimeException.<init>
  [13] com.panfutov.Service$BusinessException.<init>
  [14] com.panfutov.Service.doWithException
  [15] com.panfutov.Benchmark.exceptions
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [17] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [18] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [19] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [20] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [22] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.runWith
  [32] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] HeapRegionClaimer::claim_region
  [ 1] G1CollectedHeap::par_iterate_regions_array
  [ 2] G1PostEvacuateCollectionSetCleanupTask2::FreeCollectionSetTask::do_work
  [ 3] G1BatchedTask::work
  [ 4] WorkerThread::run
  [ 5] Thread::call_run
  [ 6] thread_native_entry
  [ 7] _pthread_start
  [ 8] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] G1MergeHeapRootsTask::G1MergeLogBufferCardsClosure::do_card_ptr
  [ 1] G1MergeHeapRootsTask::work
  [ 2] WorkerThread::run
  [ 3] Thread::call_run
  [ 4] thread_native_entry
  [ 5] _pthread_start
  [ 6] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] PhaseChaitin::build_ifg_virtual
  [ 1] PhaseChaitin::Register_Allocate
  [ 2] Compile::Code_Gen
  [ 3] Compile::Compile
  [ 4] C2Compiler::compile_method
  [ 5] CompileBroker::invoke_compiler_on_method
  [ 6] CompileBroker::compiler_thread_loop
  [ 7] JavaThread::thread_main_inner
  [ 8] Thread::call_run
  [ 9] thread_native_entry
  [10] _pthread_start
  [11] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] __gettimeofday
  [ 1] PlatformMonitor::wait
  [ 2] Monitor::wait_without_safepoint_check
  [ 3] WatcherThread::sleep
  [ 4] WatcherThread::run
  [ 5] Thread::call_run
  [ 6] thread_native_entry
  [ 7] _pthread_start
  [ 8] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] semaphore_wait_trap
  [ 1] WorkerThreads::run_task
  [ 2] HeapRegionManager::rebuild_free_list
  [ 3] G1CollectedHeap::rebuild_free_region_list
  [ 4] G1YoungCollector::post_evacuate_collection_set
  [ 5] G1YoungCollector::collect
  [ 6] G1CollectedHeap::do_collection_pause_at_safepoint_helper
  [ 7] G1CollectedHeap::do_collection_pause_at_safepoint
  [ 8] VM_G1CollectForAllocation::doit
  [ 9] VM_Operation::evaluate
  [10] VMThread::evaluate_operation
  [11] VMThread::inner_execute
  [12] VMThread::run
  [13] Thread::call_run
  [14] thread_native_entry
  [15] _pthread_start
  [16] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] semaphore_wait_trap
  [ 1] WorkerThreads::run_task
  [ 2] G1YoungCollector::evacuate_initial_collection_set
  [ 3] G1YoungCollector::collect
  [ 4] G1CollectedHeap::do_collection_pause_at_safepoint_helper
  [ 5] G1CollectedHeap::do_collection_pause_at_safepoint
  [ 6] VM_G1CollectForAllocation::doit
  [ 7] VM_Operation::evaluate
  [ 8] VMThread::evaluate_operation
  [ 9] VMThread::inner_execute
  [10] VMThread::run
  [11] Thread::call_run
  [12] thread_native_entry
  [13] _pthread_start
  [14] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] CompositeElapsedCounterSource::now
  [ 1] G1RootProcessor::process_vm_roots
  [ 2] G1RootProcessor::evacuate_roots
  [ 3] G1EvacuateRegionsTask::scan_roots
  [ 4] G1EvacuateRegionsBaseTask::work
  [ 5] WorkerThread::run
  [ 6] Thread::call_run
  [ 7] thread_native_entry
  [ 8] _pthread_start
  [ 9] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] semaphore_signal_trap
  [ 1] WorkerThreads::run_task
  [ 2] G1YoungCollector::pre_evacuate_collection_set
  [ 3] G1YoungCollector::collect
  [ 4] G1CollectedHeap::do_collection_pause_at_safepoint_helper
  [ 5] G1CollectedHeap::do_collection_pause_at_safepoint
  [ 6] VM_G1CollectForAllocation::doit
  [ 7] VM_Operation::evaluate
  [ 8] VMThread::evaluate_operation
  [ 9] VMThread::inner_execute
  [10] VMThread::run
  [11] Thread::call_run
  [12] thread_native_entry
  [13] _pthread_start
  [14] thread_start

          ns  percent  samples  top
  ----------  -------  -------  ---
 10150000000   23.37%     1015  java_lang_Throwable::fill_in_stack_trace
  4150000000    9.55%      415  BacktraceBuilder::push
  3000000000    6.91%      300  frame::sender_for_interpreter_frame
  2700000000    6.22%      270  CodeHeap::find_blob
  2460000000    5.66%      246  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<2383974ull, G1BarrierSet>, (AccessInternal::BarrierType)1, 2383974ull>::oop_access_barrier
  1840000000    4.24%      184  frame::sender_raw
  1650000000    3.80%      165  CodeCache::find_blob
  1390000000    3.20%      139  ObjArrayKlass::allocate
  1140000000    2.62%      114  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ull, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ull>::oop_access_barrier
   860000000    1.98%       86  CodeBlob::is_upcall_stub
   760000000    1.75%       76  Method::bci_from
   750000000    1.73%       75  MemAllocator::allocate
   710000000    1.63%       71  BacktraceBuilder::expand
   710000000    1.63%       71  java.lang.Throwable.fillInStackTrace
   650000000    1.50%       65  frame::sender_for_compiled_frame
   640000000    1.47%       64  _platform_bzero$VARIANT$Haswell
   600000000    1.38%       60  Continuation::is_return_barrier_entry
   550000000    1.27%       55  MemAllocator::Allocation::notify_allocation
   520000000    1.20%       52  JVM_FillInStackTrace
   480000000    1.10%       48  TypeArrayKlass::allocate_common
   440000000    1.01%       44  ObjArrayAllocator::initialize
   420000000    0.97%       42  Continuation::is_continuation_enterSpecial
   400000000    0.92%       40  frame::interpreter_frame_bcp
   400000000    0.92%       40  Method::bcp_from
   370000000    0.85%       37  frame::interpreter_frame_method
   350000000    0.81%       35  JavaThread::pd_last_frame
   340000000    0.78%       34  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<2383974ull, G1BarrierSet>, (AccessInternal::BarrierType)3, 2383974ull>::oop_access_barrier
   330000000    0.76%       33  java.lang.Throwable.<init>
   310000000    0.71%       31  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<287270ull, G1BarrierSet>, (AccessInternal::BarrierType)1, 287270ull>::oop_access_barrier
   300000000    0.69%       30  Klass::check_array_allocation_length
   300000000    0.69%       30  Universe::should_fill_in_stack_trace
   300000000    0.69%       30  nmethod::metadata_at
   290000000    0.67%       29  java.util.concurrent.atomic.AtomicLong.compareAndSet
   280000000    0.64%       28  nmethod::metadata_addr_at
   220000000    0.51%       22  MemAllocator::Allocation::notify_allocation_jvmti_sampler
   200000000    0.46%       20  ThreadShadow::clear_pending_exception
   200000000    0.46%       20  MemAllocator::Allocation::check_out_of_memory
   190000000    0.44%       19  java.util.Random.next
   180000000    0.41%       18  semaphore_wait_trap
   170000000    0.39%       17  com.panfutov.Service.doWithException
   160000000    0.37%       16  CollectedHeap::array_allocate
   150000000    0.35%       15  tlv_get_addr
   140000000    0.32%       14  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<286822ull, G1BarrierSet>, (AccessInternal::BarrierType)1, 286822ull>::oop_access_barrier
   100000000    0.23%       10  frame::entry_frame_is_first
    80000000    0.18%        8  com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
    80000000    0.18%        8  JavaFrameAnchor::make_walkable
    70000000    0.16%        7  nmethod::scopes_pcs_begin
    70000000    0.16%        7  PcDescCache::find_pc_desc
    70000000    0.16%        7  RegisterMap::RegisterMap
    60000000    0.14%        6  PreserveExceptionMark::PreserveExceptionMark
    60000000    0.14%        6  java.lang.Throwable.getMessage
    60000000    0.14%        6  oopDesc::release_obj_field_put
    50000000    0.12%        5  nmethod::scopes_pcs_end
    40000000    0.09%        4  __psynch_cvwait
    40000000    0.09%        4  PreserveExceptionMark::~PreserveExceptionMark
    40000000    0.09%        4  methodHandle::~methodHandle
    30000000    0.07%        3  pthread_mutex_lock
    30000000    0.07%        3  oopFactory::new_intArray
    30000000    0.07%        3  oopFactory::new_objectArray
    20000000    0.05%        2  oopFactory::new_symbolArray
    20000000    0.05%        2  PcDescContainer::find_pc_desc_internal
    20000000    0.05%        2  com.panfutov.Benchmark.exceptions
    20000000    0.05%        2  com.panfutov.Service$BusinessException.<init>
    20000000    0.05%        2  pthread_mutex_trylock
    20000000    0.05%        2  semaphore_signal_trap
    20000000    0.05%        2  _os_semaphore_wait.cold.1
    20000000    0.05%        2  __gettimeofday
    10000000    0.02%        1  HeapRegionClaimer::claim_region
    10000000    0.02%        1  HeapRegionManager::allocate_free_region
    10000000    0.02%        1  G1YoungGCTraceTime::G1YoungGCTraceTime
    10000000    0.02%        1  java.util.concurrent.ConcurrentHashMap.replaceNode
    10000000    0.02%        1  G1MonitoringSupport::recalculate_sizes
    10000000    0.02%        1  G1MergeHeapRootsTask::G1MergeLogBufferCardsClosure::do_card_ptr
    10000000    0.02%        1  ZThread::~ZThread
    10000000    0.02%        1  G1MergeHeapRootsTask::G1ClearBitmapClosure::do_heap_region
    10000000    0.02%        1  CompositeElapsedCounterSource::now
    10000000    0.02%        1  PhaseChaitin::build_ifg_virtual
    10000000    0.02%        1  SpinPause
    10000000    0.02%        1  Java_java_lang_Throwable_fillInStackTrace
    10000000    0.02%        1  LIR_List::branch
    10000000    0.02%        1  MasterFreeRegionListChecker::check_mt_safety
    10000000    0.02%        1  oopFactory::new_shortArray
    10000000    0.02%        1  OopStorage::BasicParState::BasicParState
    10000000    0.02%        1  MemAllocator::mem_allocate_inside_tlab_slow
    10000000    0.02%        1  collapse
    10000000    0.02%        1  OopMapCache::lookup
    10000000    0.02%        1  _nanov2_free
    10000000    0.02%        1  szone_try_free_default
    10000000    0.02%        1  HeapRegionManager::par_iterate
