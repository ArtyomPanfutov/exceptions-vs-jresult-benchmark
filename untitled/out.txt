Set
   300000000    0.68%       30  nmethod::metadata_addr_at
   290000000    0.66%       29  MemAllocator::Allocation::check_out_of_memory
   280000000    0.64%       28  Klass::check_array_allocation_length
   270000000    0.62%       27  JavaThread::pd_last_frame
   260000000    0.59%       26  MemAllocator::Allocation::notify_allocation_jvmti_sampler
   260000000    0.59%       26  __psynch_cvwait
   250000000    0.57%       25  ThreadShadow::clear_pending_exception
   230000000    0.52%       23  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<287270ull, G1BarrierSet>, (AccessInternal::BarrierType)1, 287270ull>::oop_access_barrier
   210000000    0.48%       21  java.util.Random.next
   180000000    0.41%       18  tlv_get_addr
   180000000    0.41%       18  nmethod::metadata_at
   160000000    0.36%       16  RegisterMap::RegisterMap
   160000000    0.36%       16  semaphore_wait_trap
   150000000    0.34%       15  com.panfutov.Service.doWithException
   140000000    0.32%       14  CollectedHeap::array_allocate
   140000000    0.32%       14  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<286822ull, G1BarrierSet>, (AccessInternal::BarrierType)1, 286822ull>::oop_access_barrier
   110000000    0.25%       11  PcDescCache::find_pc_desc
   100000000    0.23%       10  PreserveExceptionMark::PreserveExceptionMark
   100000000    0.23%       10  frame::entry_frame_is_first
    90000000    0.21%        9  _os_semaphore_wait.cold.1
    90000000    0.21%        9  PreserveExceptionMark::~PreserveExceptionMark
    80000000    0.18%        8  com.panfutov.Service$BusinessException.<init>
    70000000    0.16%        7  nmethod::scopes_pcs_begin
    60000000    0.14%        6  PcDescContainer::find_pc_desc_internal
    60000000    0.14%        6  Java_java_lang_Throwable_fillInStackTrace
    50000000    0.11%        5  oopFactory::new_objectArray
    40000000    0.09%        4  java.lang.Throwable.getMessage
    40000000    0.09%        4  JavaFrameAnchor::make_walkable
    40000000    0.09%        4  oopDesc::release_obj_field_put
    40000000    0.09%        4  com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
    30000000    0.07%        3  nmethod::scopes_pcs_end
    30000000    0.07%        3  oopFactory::new_shortArray
    30000000    0.07%        3  oopFactory::new_symbolArray
    30000000    0.07%        3  com.panfutov.Benchmark.exceptions
    20000000    0.05%        2  G1MergeHeapRootsTask::work
    20000000    0.05%        2  pthread_mutex_lock
    20000000    0.05%        2  semaphore_signal_trap
    20000000    0.05%        2  methodHandle::~methodHandle
    20000000    0.05%        2  HeapRegionManager::par_iterate
    20000000    0.05%        2  __gettimeofday
    20000000    0.05%        2  oopFactory::new_intArray
    10000000    0.02%        1  __psynch_cvbroad
    10000000    0.02%        1  java.util.concurrent.locks.AbstractQueuedSynchronizer.releaseShared
    10000000    0.02%        1  TruncatedSeq::add
    10000000    0.02%        1  mach_absolute_time
    10000000    0.02%        1  StringDedup::Requests::Requests
    10000000    0.02%        1  StatSamplerTask::task
    10000000    0.02%        1  Mutex::lock_without_safepoint_check
    10000000    0.02%        1  MasterFreeRegionListChecker::check_mt_safety
    10000000    0.02%        1  HandleMark::~HandleMark
    10000000    0.02%        1  HSpaceCounters::update_used
    10000000    0.02%        1  G1ScanCollectionSetRegionClosure::do_heap_region
    10000000    0.02%        1  G1PrepareEvacuationTask::work
    10000000    0.02%        1  G1PrepareEvacuationTask::G1PrepareRegionsClosure::do_heap_region
    10000000    0.02%        1  G1ParScanThreadState::flush_stats
    10000000    0.02%        1  org.openjdk.jmh.infra.Blackhole.consume
    10000000    0.02%        1  G1NUMA::index_of_current_thread
    10000000    0.02%        1  pthread_testcancel
    10000000    0.02%        1  G1CommittedRegionMap::num_active
    10000000    0.02%        1  G1CollectedHeap::par_iterate_regions_array
    10000000    0.02%        1  FormatBuffer<256ul>::append
    10000000    0.02%        1  void G1ParCopyClosure<(G1Barrier)0, false>::do_oop_work<oopDesc*>
    10000000    0.02%        1  void WeakProcessor::Task::work<G1STWIsAliveClosure, G1KeepAliveClosure>
Async profiler results:
  /Users/artyom/git/exceptions-vs-jresult-benchmark/exceptions-vs-jresult-benchmark/untitled/com.panfutov.Benchmark.exceptions-AverageTime/summary-cpu.txt
--- Execution profile ---
Total samples       : 4365
unknown_Java        : 2 (0.05%)

--- 9590000000 ns (21.97%), 959 samples
  [ 0] java_lang_Throwable::fill_in_stack_trace
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 3860000000 ns (8.84%), 386 samples
  [ 0] BacktraceBuilder::push
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 3070000000 ns (7.03%), 307 samples
  [ 0] frame::sender_for_interpreter_frame
  [ 1] frame::sender_raw
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 2390000000 ns (5.48%), 239 samples
  [ 0] CodeHeap::find_blob
  [ 1] frame::sender_for_interpreter_frame
  [ 2] frame::sender_raw
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 1850000000 ns (4.24%), 185 samples
  [ 0] frame::sender_raw
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 1540000000 ns (3.53%), 154 samples
  [ 0] ObjArrayKlass::allocate
  [ 1] BacktraceBuilder::expand
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 1280000000 ns (2.93%), 128 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ull, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ull>::oop_access_barrier
  [ 1] BacktraceBuilder::push
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 1160000000 ns (2.66%), 116 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<2383974ull, G1BarrierSet>, (AccessInternal::BarrierType)1, 2383974ull>::oop_access_barrier
  [ 1] BacktraceBuilder::push
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 960000000 ns (2.20%), 96 samples
  [ 0] CodeCache::find_blob
  [ 1] frame::sender_for_interpreter_frame
  [ 2] frame::sender_raw
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 700000000 ns (1.60%), 70 samples
  [ 0] frame::sender_for_compiled_frame
  [ 1] frame::sender_raw
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 690000000 ns (1.58%), 69 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<2383974ull, G1BarrierSet>, (AccessInternal::BarrierType)1, 2383974ull>::oop_access_barrier
  [ 1] BacktraceBuilder::expand
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 610000000 ns (1.40%), 61 samples
  [ 0] MemAllocator::allocate
  [ 1] CollectedHeap::array_allocate
  [ 2] BacktraceBuilder::expand
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 570000000 ns (1.31%), 57 samples
  [ 0] ObjArrayAllocator::initialize
  [ 1] MemAllocator::allocate
  [ 2] CollectedHeap::array_allocate
  [ 3] BacktraceBuilder::expand
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] java_lang_Throwable::fill_in_stack_trace
  [ 6] JVM_FillInStackTrace
  [ 7] Java_java_lang_Throwable_fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.fillInStackTrace
  [10] java.lang.Throwable.<init>
  [11] java.lang.Exception.<init>
  [12] java.lang.RuntimeException.<init>
  [13] com.panfutov.Service$BusinessException.<init>
  [14] com.panfutov.Service.doWithException
  [15] com.panfutov.Benchmark.exceptions
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [17] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [18] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [19] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [20] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [22] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.runWith
  [32] java.lang.Thread.run

--- 520000000 ns (1.19%), 52 samples
  [ 0] Method::bci_from
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 510000000 ns (1.17%), 51 samples
  [ 0] _platform_bzero$VARIANT$Haswell
  [ 1] ObjArrayAllocator::initialize
  [ 2] MemAllocator::allocate
  [ 3] CollectedHeap::array_allocate
  [ 4] BacktraceBuilder::expand
  [ 5] java_lang_Throwable::fill_in_stack_trace
  [ 6] java_lang_Throwable::fill_in_stack_trace
  [ 7] JVM_FillInStackTrace
  [ 8] Java_java_lang_Throwable_fillInStackTrace
  [ 9] java.lang.Throwable.fillInStackTrace
  [10] java.lang.Throwable.fillInStackTrace
  [11] java.lang.Throwable.<init>
  [12] java.lang.Exception.<init>
  [13] java.lang.RuntimeException.<init>
  [14] com.panfutov.Service$BusinessException.<init>
  [15] com.panfutov.Service.doWithException
  [16] com.panfutov.Benchmark.exceptions
  [17] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [18] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [19] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [20] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [21] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [22] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [23] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [24] java.lang.reflect.Method.invoke
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.Executors$RunnableAdapter.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.ThreadPoolExecutor.runWorker
  [31] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [32] java.lang.Thread.runWith
  [33] java.lang.Thread.run

--- 500000000 ns (1.15%), 50 samples
  [ 0] JVM_FillInStackTrace
  [ 1] Java_java_lang_Throwable_fillInStackTrace
  [ 2] java.lang.Throwable.fillInStackTrace
  [ 3] java.lang.Throwable.fillInStackTrace
  [ 4] java.lang.Throwable.<init>
  [ 5] java.lang.Exception.<init>
  [ 6] java.lang.RuntimeException.<init>
  [ 7] com.panfutov.Service$BusinessException.<init>
  [ 8] com.panfutov.Service.doWithException
  [ 9] com.panfutov.Benchmark.exceptions
  [10] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [11] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [12] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [13] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [14] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [15] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [16] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [17] java.lang.reflect.Method.invoke
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.Executors$RunnableAdapter.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.ThreadPoolExecutor.runWorker
  [24] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [25] java.lang.Thread.runWith
  [26] java.lang.Thread.run

--- 500000000 ns (1.15%), 50 samples
  [ 0] BacktraceBuilder::expand
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 490000000 ns (1.12%), 49 samples
  [ 0] Continuation::is_continuation_enterSpecial
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 470000000 ns (1.08%), 47 samples
  [ 0] CodeBlob::is_upcall_stub
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 450000000 ns (1.03%), 45 samples
  [ 0] MemAllocator::Allocation::notify_allocation
  [ 1] MemAllocator::allocate
  [ 2] CollectedHeap::array_allocate
  [ 3] BacktraceBuilder::expand
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] java_lang_Throwable::fill_in_stack_trace
  [ 6] JVM_FillInStackTrace
  [ 7] Java_java_lang_Throwable_fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.fillInStackTrace
  [10] java.lang.Throwable.<init>
  [11] java.lang.Exception.<init>
  [12] java.lang.RuntimeException.<init>
  [13] com.panfutov.Service$BusinessException.<init>
  [14] com.panfutov.Service.doWithException
  [15] com.panfutov.Benchmark.exceptions
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [17] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [18] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [19] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [20] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [22] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.runWith
  [32] java.lang.Thread.run

--- 410000000 ns (0.94%), 41 samples
  [ 0] CodeHeap::find_blob
  [ 1] JavaThread::pd_last_frame
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 340000000 ns (0.78%), 34 samples
  [ 0] java.lang.Throwable.<init>
  [ 1] java.lang.Exception.<init>
  [ 2] java.lang.RuntimeException.<init>
  [ 3] com.panfutov.Service$BusinessException.<init>
  [ 4] com.panfutov.Service.doWithException
  [ 5] com.panfutov.Benchmark.exceptions
  [ 6] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 7] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 8] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 9] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [10] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [11] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [12] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [13] java.lang.reflect.Method.invoke
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.Executors$RunnableAdapter.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.ThreadPoolExecutor.runWorker
  [20] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [21] java.lang.Thread.runWith
  [22] java.lang.Thread.run

--- 340000000 ns (0.78%), 34 samples
  [ 0] TypeArrayKlass::allocate_common
  [ 1] BacktraceBuilder::expand
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 340000000 ns (0.78%), 34 samples
  [ 0] CodeCache::find_blob
  [ 1] frame::sender_raw
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 340000000 ns (0.78%), 34 samples
  [ 0] frame::interpreter_frame_bcp
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 300000000 ns (0.69%), 30 samples
  [ 0] java.util.concurrent.atomic.AtomicLong.compareAndSet
  [ 1] java.util.Random.next
  [ 2] java.util.Random.nextBoolean
  [ 3] com.panfutov.Service.doWithException
  [ 4] com.panfutov.Benchmark.exceptions
  [ 5] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 6] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 7] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 8] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [ 9] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [10] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [11] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.runWith
  [21] java.lang.Thread.run

--- 300000000 ns (0.69%), 30 samples
  [ 0] java.lang.Throwable.fillInStackTrace
  [ 1] java.lang.Throwable.fillInStackTrace
  [ 2] java.lang.Throwable.<init>
  [ 3] java.lang.Exception.<init>
  [ 4] java.lang.RuntimeException.<init>
  [ 5] com.panfutov.Service$BusinessException.<init>
  [ 6] com.panfutov.Service.doWithException
  [ 7] com.panfutov.Benchmark.exceptions
  [ 8] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 9] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [10] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [11] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [12] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [13] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [14] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.runWith
  [24] java.lang.Thread.run

--- 280000000 ns (0.64%), 28 samples
  [ 0] Continuation::is_return_barrier_entry
  [ 1] frame::sender_for_interpreter_frame
  [ 2] frame::sender_raw
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 260000000 ns (0.60%), 26 samples
  [ 0] MemAllocator::Allocation::check_out_of_memory
  [ 1] MemAllocator::allocate
  [ 2] CollectedHeap::array_allocate
  [ 3] BacktraceBuilder::expand
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] java_lang_Throwable::fill_in_stack_trace
  [ 6] JVM_FillInStackTrace
  [ 7] Java_java_lang_Throwable_fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.fillInStackTrace
  [10] java.lang.Throwable.<init>
  [11] java.lang.Exception.<init>
  [12] java.lang.RuntimeException.<init>
  [13] com.panfutov.Service$BusinessException.<init>
  [14] com.panfutov.Service.doWithException
  [15] com.panfutov.Benchmark.exceptions
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [17] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [18] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [19] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [20] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [22] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.runWith
  [32] java.lang.Thread.run

--- 240000000 ns (0.55%), 24 samples
  [ 0] frame::interpreter_frame_method
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 240000000 ns (0.55%), 24 samples
  [ 0] JavaThread::pd_last_frame
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 220000000 ns (0.50%), 22 samples
  [ 0] MemAllocator::Allocation::notify_allocation_jvmti_sampler
  [ 1] MemAllocator::allocate
  [ 2] CollectedHeap::array_allocate
  [ 3] BacktraceBuilder::expand
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] java_lang_Throwable::fill_in_stack_trace
  [ 6] JVM_FillInStackTrace
  [ 7] Java_java_lang_Throwable_fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.fillInStackTrace
  [10] java.lang.Throwable.<init>
  [11] java.lang.Exception.<init>
  [12] java.lang.RuntimeException.<init>
  [13] com.panfutov.Service$BusinessException.<init>
  [14] com.panfutov.Service.doWithException
  [15] com.panfutov.Benchmark.exceptions
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [17] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [18] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [19] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [20] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [22] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.runWith
  [32] java.lang.Thread.run

--- 220000000 ns (0.50%), 22 samples
  [ 0] CodeBlob::is_upcall_stub
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 220000000 ns (0.50%), 22 samples
  [ 0] Continuation::is_return_barrier_entry
  [ 1] frame::sender_raw
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 210000000 ns (0.48%), 21 samples
  [ 0] Method::bcp_from
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 210000000 ns (0.48%), 21 samples
  [ 0] Universe::should_fill_in_stack_trace
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 210000000 ns (0.48%), 21 samples
  [ 0] java.lang.Throwable.fillInStackTrace
  [ 1] java.lang.Throwable.<init>
  [ 2] java.lang.Exception.<init>
  [ 3] java.lang.RuntimeException.<init>
  [ 4] com.panfutov.Service$BusinessException.<init>
  [ 5] com.panfutov.Service.doWithException
  [ 6] com.panfutov.Benchmark.exceptions
  [ 7] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 8] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 9] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [10] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [11] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [12] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [13] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.runWith
  [23] java.lang.Thread.run

--- 210000000 ns (0.48%), 21 samples
  [ 0] java_lang_Throwable::fill_in_stack_trace
  [ 1] JVM_FillInStackTrace
  [ 2] Java_java_lang_Throwable_fillInStackTrace
  [ 3] java.lang.Throwable.fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.<init>
  [ 6] java.lang.Exception.<init>
  [ 7] java.lang.RuntimeException.<init>
  [ 8] com.panfutov.Service$BusinessException.<init>
  [ 9] com.panfutov.Service.doWithException
  [10] com.panfutov.Benchmark.exceptions
  [11] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [13] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [14] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [15] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [16] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.runWith
  [27] java.lang.Thread.run

--- 200000000 ns (0.46%), 20 samples
  [ 0] CodeHeap::find_blob
  [ 1] frame::sender_for_compiled_frame
  [ 2] frame::sender_raw
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 190000000 ns (0.44%), 19 samples
  [ 0] __psynch_cvwait
  [ 1] PlatformMonitor::wait
  [ 2] Monitor::wait_without_safepoint_check
  [ 3] WatcherThread::sleep
  [ 4] WatcherThread::run
  [ 5] Thread::call_run
  [ 6] thread_native_entry
  [ 7] _pthread_start
  [ 8] thread_start

--- 190000000 ns (0.44%), 19 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<287270ull, G1BarrierSet>, (AccessInternal::BarrierType)1, 287270ull>::oop_access_barrier
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 190000000 ns (0.44%), 19 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<2383974ull, G1BarrierSet>, (AccessInternal::BarrierType)1, 2383974ull>::oop_access_barrier
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 180000000 ns (0.41%), 18 samples
  [ 0] ThreadShadow::clear_pending_exception
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 180000000 ns (0.41%), 18 samples
  [ 0] CodeCache::find_blob
  [ 1] JavaThread::pd_last_frame
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 180000000 ns (0.41%), 18 samples
  [ 0] Klass::check_array_allocation_length
  [ 1] TypeArrayKlass::allocate_common
  [ 2] BacktraceBuilder::expand
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 170000000 ns (0.39%), 17 samples
  [ 0] BacktraceBuilder::push
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 170000000 ns (0.39%), 17 samples
  [ 0] CodeBlob::is_upcall_stub
  [ 1] frame::sender_raw
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 170000000 ns (0.39%), 17 samples
  [ 0] Continuation::is_continuation_enterSpecial
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 160000000 ns (0.37%), 16 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ull, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ull>::oop_access_barrier
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 160000000 ns (0.37%), 16 samples
  [ 0] CollectedHeap::array_allocate
  [ 1] BacktraceBuilder::expand
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 160000000 ns (0.37%), 16 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<2383974ull, G1BarrierSet>, (AccessInternal::BarrierType)3, 2383974ull>::oop_access_barrier
  [ 1] Universe::should_fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 160000000 ns (0.37%), 16 samples
  [ 0] frame::sender_for_interpreter_frame
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 140000000 ns (0.32%), 14 samples
  [ 0] nmethod::metadata_addr_at
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 140000000 ns (0.32%), 14 samples
  [ 0] nmethod::metadata_at
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 130000000 ns (0.30%), 13 samples
  [ 0] nmethod::metadata_addr_at
  [ 1] nmethod::metadata_at
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 130000000 ns (0.30%), 13 samples
  [ 0] MemAllocator::allocate
  [ 1] BacktraceBuilder::expand
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 130000000 ns (0.30%), 13 samples
  [ 0] Method::bcp_from
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 130000000 ns (0.30%), 13 samples
  [ 0] frame::interpreter_frame_method
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 120000000 ns (0.27%), 12 samples
  [ 0] semaphore_wait_trap
  [ 1] WorkerThread::run
  [ 2] Thread::call_run
  [ 3] thread_native_entry
  [ 4] _pthread_start
  [ 5] thread_start

--- 120000000 ns (0.27%), 12 samples
  [ 0] Method::bci_from
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 110000000 ns (0.25%), 11 samples
  [ 0] _platform_bzero$VARIANT$Haswell
  [ 1] MemAllocator::allocate
  [ 2] CollectedHeap::array_allocate
  [ 3] BacktraceBuilder::expand
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] java_lang_Throwable::fill_in_stack_trace
  [ 6] JVM_FillInStackTrace
  [ 7] Java_java_lang_Throwable_fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.fillInStackTrace
  [10] java.lang.Throwable.<init>
  [11] java.lang.Exception.<init>
  [12] java.lang.RuntimeException.<init>
  [13] com.panfutov.Service$BusinessException.<init>
  [14] com.panfutov.Service.doWithException
  [15] com.panfutov.Benchmark.exceptions
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [17] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [18] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [19] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [20] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [22] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.runWith
  [32] java.lang.Thread.run

--- 110000000 ns (0.25%), 11 samples
  [ 0] Klass::check_array_allocation_length
  [ 1] ObjArrayKlass::allocate
  [ 2] BacktraceBuilder::expand
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 110000000 ns (0.25%), 11 samples
  [ 0] RegisterMap::RegisterMap
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 110000000 ns (0.25%), 11 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<286822ull, G1BarrierSet>, (AccessInternal::BarrierType)1, 286822ull>::oop_access_barrier
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 100000000 ns (0.23%), 10 samples
  [ 0] frame::entry_frame_is_first
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 100000000 ns (0.23%), 10 samples
  [ 0] Continuation::is_return_barrier_entry
  [ 1] frame::sender_for_compiled_frame
  [ 2] frame::sender_raw
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 90000000 ns (0.21%), 9 samples
  [ 0] frame::entry_frame_is_first
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 90000000 ns (0.21%), 9 samples
  [ 0] com.panfutov.Service.doWithException
  [ 1] com.panfutov.Benchmark.exceptions
  [ 2] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 3] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 4] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 5] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [ 6] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [ 7] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 8] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.runWith
  [18] java.lang.Thread.run

--- 80000000 ns (0.18%), 8 samples
  [ 0] semaphore_wait_trap
  [ 1] WorkerThread::run
  [ 2] Thread::call_run
  [ 3] thread_native_entry
  [ 4] _pthread_start
  [ 5] thread_start

--- 80000000 ns (0.18%), 8 samples
  [ 0] PreserveExceptionMark::PreserveExceptionMark
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 80000000 ns (0.18%), 8 samples
  [ 0] frame::sender_raw
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 80000000 ns (0.18%), 8 samples
  [ 0] ObjArrayAllocator::initialize
  [ 1] CollectedHeap::array_allocate
  [ 2] BacktraceBuilder::expand
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 70000000 ns (0.16%), 7 samples
  [ 0] nmethod::metadata_at
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 70000000 ns (0.16%), 7 samples
  [ 0] PcDescCache::find_pc_desc
  [ 1] PcDescContainer::find_pc_desc_internal
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 70000000 ns (0.16%), 7 samples
  [ 0] java.util.Random.next
  [ 1] java.util.Random.nextBoolean
  [ 2] com.panfutov.Service.doWithException
  [ 3] com.panfutov.Benchmark.exceptions
  [ 4] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 5] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 6] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 7] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [ 8] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [ 9] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [10] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.runWith
  [20] java.lang.Thread.run

--- 70000000 ns (0.16%), 7 samples
  [ 0] Klass::check_array_allocation_length
  [ 1] BacktraceBuilder::expand
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 60000000 ns (0.14%), 6 samples
  [ 0] PcDescContainer::find_pc_desc_internal
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 60000000 ns (0.14%), 6 samples
  [ 0] tlv_get_addr
  [ 1] CollectedHeap::array_allocate
  [ 2] BacktraceBuilder::expand
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 60000000 ns (0.14%), 6 samples
  [ 0] java.lang.Throwable.<init>
  [ 1] java.lang.Exception.<init>
  [ 2] java.lang.RuntimeException.<init>
  [ 3] com.panfutov.Service$BusinessException.<init>
  [ 4] com.panfutov.Service.doWithException
  [ 5] com.panfutov.Benchmark.exceptions
  [ 6] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 7] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 8] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 9] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [10] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [11] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [12] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [13] java.lang.reflect.Method.invoke
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.Executors$RunnableAdapter.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.ThreadPoolExecutor.runWorker
  [20] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [21] java.lang.Thread.runWith
  [22] java.lang.Thread.run

--- 60000000 ns (0.14%), 6 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<2383974ull, G1BarrierSet>, (AccessInternal::BarrierType)3, 2383974ull>::oop_access_barrier
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 50000000 ns (0.11%), 5 samples
  [ 0] nmethod::scopes_pcs_end
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 50000000 ns (0.11%), 5 samples
  [ 0] frame::interpreter_frame_bcp
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 50000000 ns (0.11%), 5 samples
  [ 0] CodeCache::find_blob
  [ 1] frame::sender_for_compiled_frame
  [ 2] frame::sender_raw
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 50000000 ns (0.11%), 5 samples
  [ 0] oopDesc::release_obj_field_put
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 50000000 ns (0.11%), 5 samples
  [ 0] MemAllocator::Allocation::check_out_of_memory
  [ 1] CollectedHeap::array_allocate
  [ 2] BacktraceBuilder::expand
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 50000000 ns (0.11%), 5 samples
  [ 0] oopDesc::release_obj_field_put
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 50000000 ns (0.11%), 5 samples
  [ 0] com.panfutov.Service$BusinessException.<init>
  [ 1] com.panfutov.Service.doWithException
  [ 2] com.panfutov.Benchmark.exceptions
  [ 3] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 4] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 5] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 6] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [ 7] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [ 8] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 9] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [10] java.lang.reflect.Method.invoke
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.Executors$RunnableAdapter.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.ThreadPoolExecutor.runWorker
  [17] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [18] java.lang.Thread.runWith
  [19] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] com.panfutov.Benchmark.exceptions
  [ 1] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 2] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 3] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 4] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [ 5] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [ 6] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 7] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 8] java.lang.reflect.Method.invoke
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] java.util.concurrent.FutureTask.run
  [12] java.util.concurrent.Executors$RunnableAdapter.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.ThreadPoolExecutor.runWorker
  [15] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [16] java.lang.Thread.runWith
  [17] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] tlv_get_addr
  [ 1] JVM_FillInStackTrace
  [ 2] Java_java_lang_Throwable_fillInStackTrace
  [ 3] java.lang.Throwable.fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.<init>
  [ 6] java.lang.Exception.<init>
  [ 7] java.lang.RuntimeException.<init>
  [ 8] com.panfutov.Service$BusinessException.<init>
  [ 9] com.panfutov.Service.doWithException
  [10] com.panfutov.Benchmark.exceptions
  [11] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [13] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [14] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [15] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [16] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.runWith
  [27] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] java.util.Random.next
  [ 1] java.util.Random.nextBoolean
  [ 2] com.panfutov.Service.doWithException
  [ 3] com.panfutov.Benchmark.exceptions
  [ 4] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 5] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 6] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 7] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [ 8] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [ 9] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [10] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.runWith
  [20] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] oopFactory::new_objectArray
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] MemAllocator::Allocation::notify_allocation_jvmti_sampler
  [ 1] CollectedHeap::array_allocate
  [ 2] BacktraceBuilder::expand
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] ObjArrayKlass::allocate
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] nmethod::scopes_pcs_begin
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 1] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 2] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 3] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [ 4] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [ 5] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 6] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 7] java.lang.reflect.Method.invoke
  [ 8] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.Executors$RunnableAdapter.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.ThreadPoolExecutor.runWorker
  [14] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [15] java.lang.Thread.runWith
  [16] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] com.panfutov.Service.doWithException
  [ 1] com.panfutov.Benchmark.exceptions
  [ 2] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 3] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 4] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 5] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [ 6] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [ 7] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 8] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.runWith
  [18] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] oopFactory::new_intArray
  [ 1] BacktraceBuilder::expand
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] MemAllocator::Allocation::notify_allocation
  [ 1] CollectedHeap::array_allocate
  [ 2] BacktraceBuilder::expand
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] oopFactory::new_shortArray
  [ 1] BacktraceBuilder::expand
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] JavaFrameAnchor::make_walkable
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] TypeArrayKlass::allocate_common
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] frame::sender_for_compiled_frame
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] oopFactory::new_intArray
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] PreserveExceptionMark::~PreserveExceptionMark
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] semaphore_wait_trap
  [ 1] WorkerThread::run
  [ 2] Thread::call_run
  [ 3] thread_native_entry
  [ 4] _pthread_start
  [ 5] thread_start

--- 30000000 ns (0.07%), 3 samples
  [ 0] oopFactory::new_shortArray
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] java.lang.Throwable.<init>
  [ 1] java.lang.Exception.<init>
  [ 2] java.lang.RuntimeException.<init>
  [ 3] com.panfutov.Service$BusinessException.<init>
  [ 4] com.panfutov.Service.doWithException
  [ 5] com.panfutov.Benchmark.exceptions
  [ 6] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 7] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 8] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 9] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [10] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [11] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [12] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [13] java.lang.reflect.Method.invoke
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.Executors$RunnableAdapter.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.ThreadPoolExecutor.runWorker
  [20] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [21] java.lang.Thread.runWith
  [22] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] PcDescCache::find_pc_desc
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] _os_semaphore_wait.cold.1
  [ 1] MemAllocator::allocate
  [ 2] CollectedHeap::array_allocate
  [ 3] BacktraceBuilder::expand
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] java_lang_Throwable::fill_in_stack_trace
  [ 6] JVM_FillInStackTrace
  [ 7] Java_java_lang_Throwable_fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.fillInStackTrace
  [10] java.lang.Throwable.<init>
  [11] java.lang.Exception.<init>
  [12] java.lang.RuntimeException.<init>
  [13] com.panfutov.Service$BusinessException.<init>
  [14] com.panfutov.Service.doWithException
  [15] com.panfutov.Benchmark.exceptions
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [17] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [18] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [19] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [20] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [22] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.runWith
  [32] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] Java_java_lang_Throwable_fillInStackTrace
  [ 1] java.lang.Throwable.fillInStackTrace
  [ 2] java.lang.Throwable.fillInStackTrace
  [ 3] java.lang.Throwable.<init>
  [ 4] java.lang.Exception.<init>
  [ 5] java.lang.RuntimeException.<init>
  [ 6] com.panfutov.Service$BusinessException.<init>
  [ 7] com.panfutov.Service.doWithException
  [ 8] com.panfutov.Benchmark.exceptions
  [ 9] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [10] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [11] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [12] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [13] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [14] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [15] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.runWith
  [25] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] methodHandle::~methodHandle
  [ 1] Java_java_lang_Throwable_fillInStackTrace
  [ 2] java.lang.Throwable.fillInStackTrace
  [ 3] java.lang.Throwable.fillInStackTrace
  [ 4] java.lang.Throwable.<init>
  [ 5] java.lang.Exception.<init>
  [ 6] java.lang.RuntimeException.<init>
  [ 7] com.panfutov.Service$BusinessException.<init>
  [ 8] com.panfutov.Service.doWithException
  [ 9] com.panfutov.Benchmark.exceptions
  [10] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [11] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [12] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [13] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [14] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [15] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [16] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [17] java.lang.reflect.Method.invoke
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.Executors$RunnableAdapter.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.ThreadPoolExecutor.runWorker
  [24] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [25] java.lang.Thread.runWith
  [26] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] ZThread::~ZThread
  [ 1] MemAllocator::allocate
  [ 2] CollectedHeap::array_allocate
  [ 3] BacktraceBuilder::expand
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] java_lang_Throwable::fill_in_stack_trace
  [ 6] JVM_FillInStackTrace
  [ 7] Java_java_lang_Throwable_fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.fillInStackTrace
  [10] java.lang.Throwable.<init>
  [11] java.lang.Exception.<init>
  [12] java.lang.RuntimeException.<init>
  [13] com.panfutov.Service$BusinessException.<init>
  [14] com.panfutov.Service.doWithException
  [15] com.panfutov.Benchmark.exceptions
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [17] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [18] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [19] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [20] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [22] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.runWith
  [32] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] __psynch_cvwait
  [ 1] PlatformMonitor::wait
  [ 2] Monitor::wait_without_safepoint_check
  [ 3] MonitorDeflationThread::monitor_deflation_thread_entry
  [ 4] JavaThread::thread_main_inner
  [ 5] Thread::call_run
  [ 6] thread_native_entry
  [ 7] _pthread_start
  [ 8] thread_start

--- 20000000 ns (0.05%), 2 samples
  [ 0] java.lang.Throwable.fillInStackTrace
  [ 1] java.lang.Throwable.<init>
  [ 2] java.lang.Exception.<init>
  [ 3] java.lang.RuntimeException.<init>
  [ 4] com.panfutov.Service$BusinessException.<init>
  [ 5] com.panfutov.Service.doWithException
  [ 6] com.panfutov.Benchmark.exceptions
  [ 7] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 8] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 9] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [10] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [11] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [12] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [13] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.runWith
  [23] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ull, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ull>::oop_access_barrier
  [ 1] Universe::should_fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] CompositeElapsedCounterSource::seconds
  [ 1] G1GCParPhaseTimesTracker::~G1GCParPhaseTimesTracker
  [ 2] G1MergeHeapRootsTask::work
  [ 3] WorkerThread::run
  [ 4] Thread::call_run
  [ 5] thread_native_entry
  [ 6] _pthread_start
  [ 7] thread_start

--- 20000000 ns (0.05%), 2 samples
  [ 0] java.lang.Throwable.getMessage
  [ 1] com.panfutov.Benchmark.exceptions
  [ 2] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 3] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 4] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 5] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [ 6] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [ 7] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 8] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.runWith
  [18] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] CodeCache::find_blob
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] Method::bci_from
  [ 1] frame::oops_interpreted_do
  [ 2] JavaThread::oops_do_frames
  [ 3] Thread::oops_do
  [ 4] Threads::possibly_parallel_threads_do
  [ 5] Threads::possibly_parallel_oops_do
  [ 6] G1RootProcessor::process_java_roots
  [ 7] G1RootProcessor::evacuate_roots
  [ 8] G1EvacuateRegionsTask::scan_roots
  [ 9] G1EvacuateRegionsBaseTask::work
  [10] WorkerThread::run
  [11] Thread::call_run
  [12] thread_native_entry
  [13] _pthread_start
  [14] thread_start

--- 20000000 ns (0.05%), 2 samples
  [ 0] java.lang.Throwable.fillInStackTrace
  [ 1] [unknown_Java]

--- 20000000 ns (0.05%), 2 samples
  [ 0] PreserveExceptionMark::PreserveExceptionMark
  [ 1] JVM_FillInStackTrace
  [ 2] Java_java_lang_Throwable_fillInStackTrace
  [ 3] java.lang.Throwable.fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.<init>
  [ 6] java.lang.Exception.<init>
  [ 7] java.lang.RuntimeException.<init>
  [ 8] com.panfutov.Service$BusinessException.<init>
  [ 9] com.panfutov.Service.doWithException
  [10] com.panfutov.Benchmark.exceptions
  [11] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [13] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [14] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [15] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [16] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.runWith
  [27] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 1] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 2] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 3] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [ 4] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [ 5] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 6] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 7] java.lang.reflect.Method.invoke
  [ 8] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.Executors$RunnableAdapter.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.ThreadPoolExecutor.runWorker
  [14] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [15] java.lang.Thread.runWith
  [16] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] small_malloc_from_free_list
  [ 1] small_malloc_should_clear
  [ 2] szone_malloc_should_clear
  [ 3] os::malloc
  [ 4] AllocateHeap
  [ 5] HeapRegionClaimer::HeapRegionClaimer
  [ 6] G1PostEvacuateCollectionSetCleanupTask2::G1PostEvacuateCollectionSetCleanupTask2
  [ 7] G1YoungCollector::post_evacuate_collection_set
  [ 8] G1YoungCollector::collect
  [ 9] G1CollectedHeap::do_collection_pause_at_safepoint_helper
  [10] G1CollectedHeap::do_collection_pause_at_safepoint
  [11] VM_G1CollectForAllocation::doit
  [12] VM_Operation::evaluate
  [13] VMThread::evaluate_operation
  [14] VMThread::inner_execute
  [15] VMThread::run
  [16] Thread::call_run
  [17] thread_native_entry
  [18] _pthread_start
  [19] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] semaphore_wait_trap
  [ 1] WorkerThreads::run_task
  [ 2] G1RemSet::merge_heap_roots
  [ 3] G1YoungCollector::evacuate_initial_collection_set
  [ 4] G1YoungCollector::collect
  [ 5] G1CollectedHeap::do_collection_pause_at_safepoint_helper
  [ 6] G1CollectedHeap::do_collection_pause_at_safepoint
  [ 7] VM_G1CollectForAllocation::doit
  [ 8] VM_Operation::evaluate
  [ 9] VMThread::evaluate_operation
  [10] VMThread::inner_execute
  [11] VMThread::run
  [12] Thread::call_run
  [13] thread_native_entry
  [14] _pthread_start
  [15] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] collapse
  [ 1] java.lang.Throwable.fillInStackTrace
  [ 2] java.lang.Throwable.fillInStackTrace
  [ 3] java.lang.Throwable.<init>
  [ 4] java.lang.Exception.<init>
  [ 5] java.lang.RuntimeException.<init>
  [ 6] com.panfutov.Service$BusinessException.<init>
  [ 7] com.panfutov.Service.doWithException
  [ 8] com.panfutov.Benchmark.exceptions
  [ 9] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [10] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [11] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [12] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [13] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [14] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [15] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.runWith
  [25] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] PreserveExceptionMark::~PreserveExceptionMark
  [ 1] JVM_FillInStackTrace
  [ 2] Java_java_lang_Throwable_fillInStackTrace
  [ 3] java.lang.Throwable.fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.<init>
  [ 6] java.lang.Exception.<init>
  [ 7] java.lang.RuntimeException.<init>
  [ 8] com.panfutov.Service$BusinessException.<init>
  [ 9] com.panfutov.Service.doWithException
  [10] com.panfutov.Benchmark.exceptions
  [11] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [13] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [14] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [15] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [16] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.runWith
  [27] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] G1MonitoringSupport::recalculate_sizes
  [ 1] G1MonitoringSupport::update_eden_size
  [ 2] G1AllocRegion::retire_internal
  [ 3] MutatorAllocRegion::retire
  [ 4] G1CollectedHeap::attempt_allocation_slow
  [ 5] G1CollectedHeap::attempt_allocation
  [ 6] MemAllocator::mem_allocate_inside_tlab_slow
  [ 7] MemAllocator::allocate
  [ 8] CollectedHeap::array_allocate
  [ 9] BacktraceBuilder::expand
  [10] java_lang_Throwable::fill_in_stack_trace
  [11] java_lang_Throwable::fill_in_stack_trace
  [12] JVM_FillInStackTrace
  [13] Java_java_lang_Throwable_fillInStackTrace
  [14] java.lang.Throwable.fillInStackTrace
  [15] java.lang.Throwable.fillInStackTrace
  [16] java.lang.Throwable.<init>
  [17] java.lang.Exception.<init>
  [18] java.lang.RuntimeException.<init>
  [19] com.panfutov.Service$BusinessException.<init>
  [20] com.panfutov.Service.doWithException
  [21] com.panfutov.Benchmark.exceptions
  [22] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [23] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [24] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [25] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [26] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [27] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [28] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [29] java.lang.reflect.Method.invoke
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.Executors$RunnableAdapter.call
  [34] java.util.concurrent.FutureTask.run
  [35] java.util.concurrent.ThreadPoolExecutor.runWorker
  [36] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [37] java.lang.Thread.runWith
  [38] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] semaphore_wait_trap
  [ 1] WorkerThread::run
  [ 2] Thread::call_run
  [ 3] thread_native_entry
  [ 4] _pthread_start
  [ 5] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] semaphore_wait_trap
  [ 1] WorkerThreads::run_task
  [ 2] G1YoungCollector::pre_evacuate_collection_set
  [ 3] G1YoungCollector::collect
  [ 4] G1CollectedHeap::do_collection_pause_at_safepoint_helper
  [ 5] G1CollectedHeap::do_collection_pause_at_safepoint
  [ 6] VM_G1CollectForAllocation::doit
  [ 7] VM_Operation::evaluate
  [ 8] VMThread::evaluate_operation
  [ 9] VMThread::inner_execute
  [10] VMThread::run
  [11] Thread::call_run
  [12] thread_native_entry
  [13] _pthread_start
  [14] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] G1ParScanThreadState::G1ParScanThreadState
  [ 1] G1ParScanThreadStateSet::state_for_worker
  [ 2] G1EvacuateRegionsBaseTask::work
  [ 3] WorkerThread::run
  [ 4] Thread::call_run
  [ 5] thread_native_entry
  [ 6] _pthread_start
  [ 7] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] ClassLoaderDataGraph::roots_cld_do
  [ 1] G1RootProcessor::process_java_roots
  [ 2] G1RootProcessor::evacuate_roots
  [ 3] G1EvacuateRegionsTask::scan_roots
  [ 4] G1EvacuateRegionsBaseTask::work
  [ 5] WorkerThread::run
  [ 6] Thread::call_run
  [ 7] thread_native_entry
  [ 8] _pthread_start
  [ 9] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] __psynch_cvwait
  [ 1] PlatformMonitor::wait
  [ 2] Monitor::wait_without_safepoint_check
  [ 3] G1ServiceThread::wait_for_task
  [ 4] G1ServiceThread::run_service
  [ 5] ConcurrentGCThread::run
  [ 6] Thread::call_run
  [ 7] thread_native_entry
  [ 8] _pthread_start
  [ 9] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] ClassLoaderDataGraph::roots_cld_do
  [ 1] G1RootProcessor::process_java_roots
  [ 2] G1RootProcessor::evacuate_roots
  [ 3] G1EvacuateRegionsTask::scan_roots
  [ 4] G1EvacuateRegionsBaseTask::work
  [ 5] WorkerThread::run
  [ 6] Thread::call_run
  [ 7] thread_native_entry
  [ 8] _pthread_start
  [ 9] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] void G1ParCopyClosure<(G1Barrier)0, false>::do_oop_work<oopDesc*>
  [ 1] G1RootProcessor::process_vm_roots
  [ 2] G1RootProcessor::evacuate_roots
  [ 3] G1EvacuateRegionsTask::scan_roots
  [ 4] G1EvacuateRegionsBaseTask::work
  [ 5] WorkerThread::run
  [ 6] Thread::call_run
  [ 7] thread_native_entry
  [ 8] _pthread_start
  [ 9] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] G1ScanCollectionSetRegionClosure::do_heap_region
  [ 1] G1CollectedHeap::par_iterate_regions_array
  [ 2] G1RemSet::scan_collection_set_regions
  [ 3] G1EvacuateRegionsBaseTask::work
  [ 4] WorkerThread::run
  [ 5] Thread::call_run
  [ 6] thread_native_entry
  [ 7] _pthread_start
  [ 8] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<286822ull, G1BarrierSet>, (AccessInternal::BarrierType)1, 286822ull>::oop_access_barrier
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] G1FromCardCache::clear
  [ 1] HeapRegionRemSet::clear_locked
  [ 2] HeapRegion::hr_clear
  [ 3] G1CollectedHeap::free_region
  [ 4] FreeCSetClosure::do_heap_region
  [ 5] G1CollectedHeap::par_iterate_regions_array
  [ 6] G1PostEvacuateCollectionSetCleanupTask2::FreeCollectionSetTask::do_work
  [ 7] G1BatchedTask::work
  [ 8] WorkerThread::run
  [ 9] Thread::call_run
  [10] thread_native_entry
  [11] _pthread_start
  [12] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] __gettimeofday
  [ 1] PlatformMonitor::wait
  [ 2] Monitor::wait_without_safepoint_check
  [ 3] WatcherThread::sleep
  [ 4] WatcherThread::run
  [ 5] Thread::call_run
  [ 6] thread_native_entry
  [ 7] _pthread_start
  [ 8] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] Thread::oops_do
  [ 1] Threads::possibly_parallel_threads_do
  [ 2] Threads::possibly_parallel_oops_do
  [ 3] G1RootProcessor::process_java_roots
  [ 4] G1RootProcessor::evacuate_roots
  [ 5] G1EvacuateRegionsTask::scan_roots
  [ 6] G1EvacuateRegionsBaseTask::work
  [ 7] WorkerThread::run
  [ 8] Thread::call_run
  [ 9] thread_native_entry
  [10] _pthread_start
  [11] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] oopFactory::new_symbolArray
  [ 1] BacktraceBuilder::expand
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] com.panfutov.Service.doWithException
  [ 1] com.panfutov.Benchmark.exceptions
  [ 2] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 3] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 4] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 5] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [ 6] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [ 7] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 8] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.runWith
  [18] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] Mutex::lock
  [ 1] G1CollectedHeap::attempt_allocation_slow
  [ 2] G1CollectedHeap::attempt_allocation
  [ 3] MemAllocator::mem_allocate_inside_tlab_slow
  [ 4] MemAllocator::allocate
  [ 5] CollectedHeap::array_allocate
  [ 6] BacktraceBuilder::expand
  [ 7] java_lang_Throwable::fill_in_stack_trace
  [ 8] java_lang_Throwable::fill_in_stack_trace
  [ 9] JVM_FillInStackTrace
  [10] Java_java_lang_Throwable_fillInStackTrace
  [11] java.lang.Throwable.fillInStackTrace
  [12] java.lang.Throwable.fillInStackTrace
  [13] java.lang.Throwable.<init>
  [14] java.lang.Exception.<init>
  [15] java.lang.RuntimeException.<init>
  [16] com.panfutov.Service$BusinessException.<init>
  [17] com.panfutov.Service.doWithException
  [18] com.panfutov.Benchmark.exceptions
  [19] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [20] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [21] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [22] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [23] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [24] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [25] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.runWith
  [35] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] JavaFrameAnchor::make_walkable
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.lang.Throwable.getMessage
  [ 1] com.panfutov.Benchmark.exceptions
  [ 2] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 3] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 4] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 5] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [ 6] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [ 7] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 8] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.runWith
  [18] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] JVM_FillInStackTrace
  [ 1] java.lang.Throwable.fillInStackTrace
  [ 2] java.lang.Throwable.fillInStackTrace
  [ 3] java.lang.Throwable.<init>
  [ 4] java.lang.Exception.<init>
  [ 5] java.lang.RuntimeException.<init>
  [ 6] com.panfutov.Service$BusinessException.<init>
  [ 7] com.panfutov.Service.doWithException
  [ 8] com.panfutov.Benchmark.exceptions
  [ 9] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [10] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [11] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [12] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [13] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [14] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [15] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.runWith
  [25] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] __gettimeofday
  [ 1] PlatformMonitor::wait
  [ 2] Monitor::wait_without_safepoint_check
  [ 3] G1ServiceThread::wait_for_task
  [ 4] G1ServiceThread::run_service
  [ 5] ConcurrentGCThread::run
  [ 6] Thread::call_run
  [ 7] thread_native_entry
  [ 8] _pthread_start
  [ 9] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] CodeHeap::find_blob
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] com.panfutov.Benchmark.exceptions
  [ 1] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 2] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 3] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 4] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [ 5] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [ 6] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 7] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 8] java.lang.reflect.Method.invoke
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] java.util.concurrent.FutureTask.run
  [12] java.util.concurrent.Executors$RunnableAdapter.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.ThreadPoolExecutor.runWorker
  [15] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [16] java.lang.Thread.runWith
  [17] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] nmethod::scopes_pcs_begin
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] Thread::oops_do_no_frames
  [ 1] Thread::oops_do
  [ 2] Threads::possibly_parallel_threads_do
  [ 3] Threads::possibly_parallel_oops_do
  [ 4] G1RootProcessor::process_java_roots
  [ 5] G1RootProcessor::evacuate_roots
  [ 6] G1EvacuateRegionsTask::scan_roots
  [ 7] G1EvacuateRegionsBaseTask::work
  [ 8] WorkerThread::run
  [ 9] Thread::call_run
  [10] thread_native_entry
  [11] _pthread_start
  [12] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] CompositeElapsedCounterSource::seconds
  [ 1] G1EvacuateRegionsTask::start_work
  [ 2] G1EvacuateRegionsBaseTask::work
  [ 3] WorkerThread::run
  [ 4] Thread::call_run
  [ 5] thread_native_entry
  [ 6] _pthread_start
  [ 7] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] GCMemoryManager::gc_begin
  [ 1] TraceMemoryManagerStats::TraceMemoryManagerStats
  [ 2] G1YoungGCMonitoringScope::G1YoungGCMonitoringScope
  [ 3] G1YoungCollector::collect
  [ 4] G1CollectedHeap::do_collection_pause_at_safepoint_helper
  [ 5] G1CollectedHeap::do_collection_pause_at_safepoint
  [ 6] VM_G1CollectForAllocation::doit
  [ 7] VM_Operation::evaluate
  [ 8] VMThread::evaluate_operation
  [ 9] VMThread::inner_execute
  [10] VMThread::run
  [11] Thread::call_run
  [12] thread_native_entry
  [13] _pthread_start
  [14] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] StatSamplerTask::task
  [ 1] PeriodicTask::real_time_tick
  [ 2] WatcherThread::run
  [ 3] Thread::call_run
  [ 4] thread_native_entry
  [ 5] _pthread_start
  [ 6] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] com.panfutov.Service.doWithException
  [ 1] com.panfutov.Benchmark.exceptions
  [ 2] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 3] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 4] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 5] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [ 6] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [ 7] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 8] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.runWith
  [18] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] G1Allocator::unsafe_max_tlab_alloc
  [ 1] MemAllocator::mem_allocate_inside_tlab_slow
  [ 2] MemAllocator::allocate
  [ 3] CollectedHeap::array_allocate
  [ 4] BacktraceBuilder::expand
  [ 5] java_lang_Throwable::fill_in_stack_trace
  [ 6] java_lang_Throwable::fill_in_stack_trace
  [ 7] JVM_FillInStackTrace
  [ 8] Java_java_lang_Throwable_fillInStackTrace
  [ 9] java.lang.Throwable.fillInStackTrace
  [10] java.lang.Throwable.fillInStackTrace
  [11] java.lang.Throwable.<init>
  [12] java.lang.Exception.<init>
  [13] java.lang.RuntimeException.<init>
  [14] com.panfutov.Service$BusinessException.<init>
  [15] com.panfutov.Service.doWithException
  [16] com.panfutov.Benchmark.exceptions
  [17] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [18] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [19] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [20] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [21] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [22] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [23] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [24] java.lang.reflect.Method.invoke
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.Executors$RunnableAdapter.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.ThreadPoolExecutor.runWorker
  [31] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [32] java.lang.Thread.runWith
  [33] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] __psynch_cvwait
  [ 1] Parker::park
  [ 2] Unsafe_Park
  [ 3] jdk.internal.misc.Unsafe.park
  [ 4] java.util.concurrent.locks.LockSupport.park
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire
  [ 6] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly
  [ 7] java.util.concurrent.CountDownLatch.await
  [ 8] org.openjdk.jmh.runner.InfraControlL2.awaitWarmupReady
  [ 9] org.openjdk.jmh.runner.InfraControl.awaitWarmupReady
  [10] org.openjdk.jmh.runner.BenchmarkHandler.runIteration
  [11] org.openjdk.jmh.runner.BaseRunner.runBenchmark
  [12] org.openjdk.jmh.runner.BaseRunner.runBenchmark
  [13] org.openjdk.jmh.runner.BaseRunner.doSingle
  [14] org.openjdk.jmh.runner.BaseRunner.runBenchmarksForked
  [15] org.openjdk.jmh.runner.ForkedRunner.run
  [16] org.openjdk.jmh.runner.ForkedMain.main

--- 10000000 ns (0.02%), 1 sample
  [ 0] JavaThread::pd_last_frame
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] _pthread_mutex_droplock
  [ 1] _pthread_cond_wait
  [ 2] PlatformMonitor::wait
  [ 3] Monitor::wait_without_safepoint_check
  [ 4] WatcherThread::sleep
  [ 5] WatcherThread::run
  [ 6] Thread::call_run
  [ 7] thread_native_entry
  [ 8] _pthread_start
  [ 9] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] semaphore_wait_trap
  [ 1] WorkerThreads::run_task
  [ 2] G1YoungCollector::pre_evacuate_collection_set
  [ 3] G1YoungCollector::collect
  [ 4] G1CollectedHeap::do_collection_pause_at_safepoint_helper
  [ 5] G1CollectedHeap::do_collection_pause_at_safepoint
  [ 6] VM_G1CollectForAllocation::doit
  [ 7] VM_Operation::evaluate
  [ 8] VMThread::evaluate_operation
  [ 9] VMThread::inner_execute
  [10] VMThread::run
  [11] Thread::call_run
  [12] thread_native_entry
  [13] _pthread_start
  [14] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] PcDescContainer::find_pc_desc_internal
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] AllocTracer::send_allocation_in_new_tlab
  [ 1] MemAllocator::Allocation::notify_allocation
  [ 2] MemAllocator::allocate
  [ 3] CollectedHeap::array_allocate
  [ 4] BacktraceBuilder::expand
  [ 5] java_lang_Throwable::fill_in_stack_trace
  [ 6] java_lang_Throwable::fill_in_stack_trace
  [ 7] JVM_FillInStackTrace
  [ 8] Java_java_lang_Throwable_fillInStackTrace
  [ 9] java.lang.Throwable.fillInStackTrace
  [10] java.lang.Throwable.fillInStackTrace
  [11] java.lang.Throwable.<init>
  [12] java.lang.Exception.<init>
  [13] java.lang.RuntimeException.<init>
  [14] com.panfutov.Service$BusinessException.<init>
  [15] com.panfutov.Service.doWithException
  [16] com.panfutov.Benchmark.exceptions
  [17] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [18] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [19] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [20] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [21] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [22] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [23] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [24] java.lang.reflect.Method.invoke
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.Executors$RunnableAdapter.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.ThreadPoolExecutor.runWorker
  [31] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [32] java.lang.Thread.runWith
  [33] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] PartialArrayTaskStepper::PartialArrayTaskStepper
  [ 1] G1ParScanThreadStateSet::state_for_worker
  [ 2] G1EvacuateRegionsBaseTask::work
  [ 3] WorkerThread::run
  [ 4] Thread::call_run
  [ 5] thread_native_entry
  [ 6] _pthread_start
  [ 7] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] stringStream::write
  [ 1] outputStream::print_cr
  [ 2] GCHeapLog::log_heap
  [ 3] CollectedHeap::print_heap_before_gc
  [ 4] G1HeapPrinterMark::G1HeapPrinterMark
  [ 5] G1YoungCollector::collect
  [ 6] G1CollectedHeap::do_collection_pause_at_safepoint_helper
  [ 7] G1CollectedHeap::do_collection_pause_at_safepoint
  [ 8] VM_G1CollectForAllocation::doit
  [ 9] VM_Operation::evaluate
  [10] VMThread::evaluate_operation
  [11] VMThread::inner_execute
  [12] VMThread::run
  [13] Thread::call_run
  [14] thread_native_entry
  [15] _pthread_start
  [16] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] JavaFrameAnchor::make_walkable
  [ 1] Java_java_lang_Throwable_fillInStackTrace
  [ 2] java.lang.Throwable.fillInStackTrace
  [ 3] java.lang.Throwable.fillInStackTrace
  [ 4] java.lang.Throwable.<init>
  [ 5] java.lang.Exception.<init>
  [ 6] java.lang.RuntimeException.<init>
  [ 7] com.panfutov.Service$BusinessException.<init>
  [ 8] com.panfutov.Service.doWithException
  [ 9] com.panfutov.Benchmark.exceptions
  [10] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [11] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [12] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [13] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [14] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [15] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [16] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [17] java.lang.reflect.Method.invoke
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.Executors$RunnableAdapter.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.ThreadPoolExecutor.runWorker
  [24] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [25] java.lang.Thread.runWith
  [26] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] small_free_list_remove_ptr_no_clear
  [ 1] free_small
  [ 2] ChunkPool::clean
  [ 3] PeriodicTask::real_time_tick
  [ 4] WatcherThread::run
  [ 5] Thread::call_run
  [ 6] thread_native_entry
  [ 7] _pthread_start
  [ 8] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] G1MergeHeapRootsTask::work
  [ 1] WorkerThread::run
  [ 2] Thread::call_run
  [ 3] thread_native_entry
  [ 4] _pthread_start
  [ 5] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] nanov2_malloc
  [ 1] os::malloc
  [ 2] AllocateHeap
  [ 3] G1PLABAllocator::G1PLABAllocator
  [ 4] G1ParScanThreadState::G1ParScanThreadState
  [ 5] G1ParScanThreadStateSet::state_for_worker
  [ 6] G1EvacuateRegionsBaseTask::work
  [ 7] WorkerThread::run
  [ 8] Thread::call_run
  [ 9] thread_native_entry
  [10] _pthread_start
  [11] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] _pthread_cond_updateval
  [ 1] _pthread_cond_wait
  [ 2] PlatformMonitor::wait
  [ 3] Monitor::wait_without_safepoint_check
  [ 4] WatcherThread::sleep
  [ 5] WatcherThread::run
  [ 6] Thread::call_run
  [ 7] thread_native_entry
  [ 8] _pthread_start
  [ 9] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] mach_absolute_time
  [ 1] os::elapsed_counter
  [ 2] PerfLongVariant::sample
  [ 3] StatSamplerTask::task
  [ 4] PeriodicTask::real_time_tick
  [ 5] WatcherThread::run
  [ 6] Thread::call_run
  [ 7] thread_native_entry
  [ 8] _pthread_start
  [ 9] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] ThreadLocalAllocBuffer::fill
  [ 1] MemAllocator::mem_allocate_inside_tlab_slow
  [ 2] MemAllocator::allocate
  [ 3] CollectedHeap::array_allocate
  [ 4] BacktraceBuilder::expand
  [ 5] java_lang_Throwable::fill_in_stack_trace
  [ 6] java_lang_Throwable::fill_in_stack_trace
  [ 7] JVM_FillInStackTrace
  [ 8] Java_java_lang_Throwable_fillInStackTrace
  [ 9] java.lang.Throwable.fillInStackTrace
  [10] java.lang.Throwable.fillInStackTrace
  [11] java.lang.Throwable.<init>
  [12] java.lang.Exception.<init>
  [13] java.lang.RuntimeException.<init>
  [14] com.panfutov.Service$BusinessException.<init>
  [15] com.panfutov.Service.doWithException
  [16] com.panfutov.Benchmark.exceptions
  [17] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [18] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [19] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [20] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [21] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [22] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [23] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [24] java.lang.reflect.Method.invoke
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.Executors$RunnableAdapter.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.ThreadPoolExecutor.runWorker
  [31] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [32] java.lang.Thread.runWith
  [33] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] BacktraceBuilder::expand
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] PeriodicTask::real_time_tick
  [ 1] Thread::call_run
  [ 2] thread_native_entry
  [ 3] _pthread_start
  [ 4] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] org.openjdk.jmh.runner.BenchmarkHandler.getWorkerData
  [ 1] org.openjdk.jmh.runner.BenchmarkHandler.access$300
  [ 2] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 3] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 4] java.util.concurrent.FutureTask.run
  [ 5] java.util.concurrent.Executors$RunnableAdapter.call
  [ 6] java.util.concurrent.FutureTask.run
  [ 7] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 8] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 9] java.lang.Thread.runWith
  [10] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] com.panfutov.Benchmark.exceptions
  [ 1] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 2] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 3] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 4] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [ 5] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [ 6] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 7] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 8] java.lang.reflect.Method.invoke
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] java.util.concurrent.FutureTask.run
  [12] java.util.concurrent.Executors$RunnableAdapter.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.ThreadPoolExecutor.runWorker
  [15] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [16] java.lang.Thread.runWith
  [17] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<287270ull, G1BarrierSet>, (AccessInternal::BarrierType)1, 287270ull>::oop_access_barrier
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] methodHandle::~methodHandle
  [ 1] JVM_FillInStackTrace
  [ 2] Java_java_lang_Throwable_fillInStackTrace
  [ 3] java.lang.Throwable.fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.<init>
  [ 6] java.lang.Exception.<init>
  [ 7] java.lang.RuntimeException.<init>
  [ 8] com.panfutov.Service$BusinessException.<init>
  [ 9] com.panfutov.Service.doWithException
  [10] com.panfutov.Benchmark.exceptions
  [11] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [13] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [14] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [15] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [16] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.runWith
  [27] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] JavaFrameAnchor::make_walkable
  [ 1] JVM_FillInStackTrace
  [ 2] Java_java_lang_Throwable_fillInStackTrace
  [ 3] java.lang.Throwable.fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.<init>
  [ 6] java.lang.Exception.<init>
  [ 7] java.lang.RuntimeException.<init>
  [ 8] com.panfutov.Service$BusinessException.<init>
  [ 9] com.panfutov.Service.doWithException
  [10] com.panfutov.Benchmark.exceptions
  [11] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [13] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [14] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [15] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [16] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.runWith
  [27] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.lang.Throwable.<init>
  [ 1] java.lang.Exception.<init>
  [ 2] java.lang.RuntimeException.<init>
  [ 3] com.panfutov.Service$BusinessException.<init>
  [ 4] com.panfutov.Service.doWithException
  [ 5] com.panfutov.Benchmark.exceptions
  [ 6] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 7] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 8] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 9] java.lang.invoke.LambdaForm$MH.0x000000012602d800.invoke
  [10] java.lang.invoke.LambdaForm$MH.0x0000000126002800.invokeExact_MT
  [11] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [12] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [13] java.lang.reflect.Method.invoke
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.Executors$RunnableAdapter.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.ThreadPoolExecutor.runWorker
  [20] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [21] java.lang.Thread.runWith
  [22] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] PerfLongVariant::sample
  [ 1] PeriodicTask::real_time_tick
  [ 2] WatcherThread::run
  [ 3] Thread::call_run
  [ 4] thread_native_entry
  [ 5] _pthread_start
  [ 6] thread_start

          ns  percent  samples  top
  ----------  -------  -------  ---
  9800000000   22.45%      980  java_lang_Throwable::fill_in_stack_trace
  4030000000    9.23%      403  BacktraceBuilder::push
  3230000000    7.40%      323  frame::sender_for_interpreter_frame
  3010000000    6.90%      301  CodeHeap::find_blob
  2040000000    4.67%      204  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<2383974ull, G1BarrierSet>, (AccessInternal::BarrierType)1, 2383974ull>::oop_access_barrier
  1930000000    4.42%      193  frame::sender_raw
  1580000000    3.62%      158  ObjArrayKlass::allocate
  1550000000    3.55%      155  CodeCache::find_blob
  1460000000    3.34%      146  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ull, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ull>::oop_access_barrier
   860000000    1.97%       86  CodeBlob::is_upcall_stub
   740000000    1.70%       74  MemAllocator::allocate
   730000000    1.67%       73  frame::sender_for_compiled_frame
   660000000    1.51%       66  Method::bci_from
   660000000    1.51%       66  Continuation::is_continuation_enterSpecial
   650000000    1.49%       65  ObjArrayAllocator::initialize
   620000000    1.42%       62  _platform_bzero$VARIANT$Haswell
   600000000    1.37%       60  Continuation::is_return_barrier_entry
   550000000    1.26%       55  java.lang.Throwable.fillInStackTrace
   510000000    1.17%       51  JVM_FillInStackTrace
   510000000    1.17%       51  BacktraceBuilder::expand
   480000000    1.10%       48  MemAllocator::Allocation::notify_allocation
   430000000    0.99%       43  java.lang.Throwable.<init>
   390000000    0.89%       39  frame::interpreter_frame_bcp
   370000000    0.85%       37  TypeArrayKlass::allocate_common
   370000000    0.85%       37  frame::interpreter_frame_method
   360000000    0.82%       36  Klass::check_array_allocation_length
   340000000    0.78%       34  Method::bcp_from
   310000000    0.71%       31  MemAllocator::Allocation::check_out_of_memory
   300000000    0.69%       30  java.util.concurrent.atomic.AtomicLong.compareAndSet
   270000000    0.62%       27  semaphore_wait_trap
   270000000    0.62%       27  nmethod::metadata_addr_at
   260000000    0.60%       26  MemAllocator::Allocation::notify_allocation_jvmti_sampler
   250000000    0.57%       25  JavaThread::pd_last_frame
   230000000    0.53%       23  __psynch_cvwait
   220000000    0.50%       22  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<2383974ull, G1BarrierSet>, (AccessInternal::BarrierType)3, 2383974ull>::oop_access_barrier
   210000000    0.48%       21  nmethod::metadata_at
   210000000    0.48%       21  Universe::should_fill_in_stack_trace
   200000000    0.46%       20  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<287270ull, G1BarrierSet>, (AccessInternal::BarrierType)1, 287270ull>::oop_access_barrier
   190000000    0.44%       19  frame::entry_frame_is_first
   180000000    0.41%       18  ThreadShadow::clear_pending_exception
   160000000    0.37%       16  CollectedHeap::array_allocate
   140000000    0.32%       14  com.panfutov.Service.doWithException
   120000000    0.27%       12  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<286822ull, G1BarrierSet>, (AccessInternal::BarrierType)1, 286822ull>::oop_access_barrier
   110000000    0.25%       11  java.util.Random.next
   110000000    0.25%       11  RegisterMap::RegisterMap
   100000000    0.23%       10  oopDesc::release_obj_field_put
   100000000    0.23%       10  tlv_get_addr
   100000000    0.23%       10  PreserveExceptionMark::PreserveExceptionMark
    90000000    0.21%        9  PcDescCache::find_pc_desc
    70000000    0.16%        7  PcDescContainer::find_pc_desc_internal
    60000000    0.14%        6  oopFactory::new_shortArray
    60000000    0.14%        6  JavaFrameAnchor::make_walkable
    60000000    0.14%        6  oopFactory::new_intArray
    60000000    0.14%        6  com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
    60000000    0.14%        6  com.panfutov.Benchmark.exceptions
    50000000    0.11%        5  nmethod::scopes_pcs_begin
    50000000    0.11%        5  nmethod::scopes_pcs_end
    50000000    0.11%        5  com.panfutov.Service$BusinessException.<init>
    40000000    0.09%        4  PreserveExceptionMark::~PreserveExceptionMark
    40000000    0.09%        4  oopFactory::new_objectArray
    30000000    0.07%        3  methodHandle::~methodHandle
    30000000    0.07%        3  CompositeElapsedCounterSource::seconds
    30000000    0.07%        3  java.lang.Throwable.getMessage
    20000000    0.05%        2  Java_java_lang_Throwable_fillInStackTrace
    20000000    0.05%        2  __gettimeofday
    20000000    0.05%        2  _os_semaphore_wait.cold.1
    20000000    0.05%        2  ZThread::~ZThread
    20000000    0.05%        2  ClassLoaderDataGraph::roots_cld_do
    10000000    0.02%        1  collapse
    10000000    0.02%        1  _pthread_mutex_droplock
    10000000    0.02%        1  _pthread_cond_updateval
    10000000    0.02%        1  ThreadLocalAllocBuffer::fill
    10000000    0.02%        1  Thread::oops_do_no_frames
    10000000    0.02%        1  Thread::oops_do
    10000000    0.02%        1  StatSamplerTask::task
    10000000    0.02%        1  PeriodicTask::real_time_tick
    10000000    0.02%        1  mach_absolute_time
    10000000    0.02%        1  PerfLongVariant::sample
    10000000    0.02%        1  nanov2_malloc
    10000000    0.02%        1  PartialArrayTaskStepper::PartialArrayTaskStepper
    10000000    0.02%        1  Mutex::lock
    10000000    0.02%        1  GCMemoryManager::gc_begin
    10000000    0.02%        1  G1ScanCollectionSetRegionClosure::do_heap_region
    10000000    0.02%        1  G1ParScanThreadState::G1ParScanThreadState
    10000000    0.02%        1  G1MonitoringSupport::recalculate_sizes
    10000000    0.02%        1  G1MergeHeapRootsTask::work
    10000000    0.02%        1  G1FromCardCache::clear
    10000000    0.02%        1  oopFactory::new_symbolArray
    10000000    0.02%        1  org.openjdk.jmh.runner.BenchmarkHandler.getWorkerData
    10000000    0.02%        1  G1Allocator::unsafe_max_tlab_alloc
    10000000    0.02%        1  small_free_list_remove_ptr_no_clear
    10000000    0.02%        1  small_malloc_from_free_list
    10000000    0.02%        1  stringStream::write
    10000000    0.02%        1  AllocTracer::send_allocation_in_new_tlab
    10000000    0.02%        1  void G1ParCopyClosure<(G1Barrier)0, false>::do_oop_work<oopDesc*>
Async profiler results:
  /Users/artyom/git/exceptions-vs-jresult-benchmark/exceptions-vs-jresult-benchmark/untitled/com.panfutov.Benchmark.exceptions-AverageTime/summary-cpu.txt
--- Execution profile ---
Total samples       : 4344
unknown_Java        : 2 (0.05%)

--- 9030000000 ns (20.79%), 903 samples
  [ 0] java_lang_Throwable::fill_in_stack_trace
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 3080000000 ns (7.09%), 308 samples
  [ 0] BacktraceBuilder::push
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 3000000000 ns (6.91%), 300 samples
  [ 0] frame::sender_for_interpreter_frame
  [ 1] frame::sender_raw
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 2720000000 ns (6.26%), 272 samples
  [ 0] CodeCache::find_blob
  [ 1] frame::sender_for_interpreter_frame
  [ 2] frame::sender_raw
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 2330000000 ns (5.36%), 233 samples
  [ 0] CodeHeap::find_blob
  [ 1] frame::sender_for_interpreter_frame
  [ 2] frame::sender_raw
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 1970000000 ns (4.53%), 197 samples
  [ 0] frame::sender_raw
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 1430000000 ns (3.29%), 143 samples
  [ 0] ObjArrayKlass::allocate
  [ 1] BacktraceBuilder::expand
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 1230000000 ns (2.83%), 123 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<2383974ull, G1BarrierSet>, (AccessInternal::BarrierType)1, 2383974ull>::oop_access_barrier
  [ 1] BacktraceBuilder::push
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 650000000 ns (1.50%), 65 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<2383974ull, G1BarrierSet>, (AccessInternal::BarrierType)1, 2383974ull>::oop_access_barrier
  [ 1] BacktraceBuilder::expand
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 630000000 ns (1.45%), 63 samples
  [ 0] MemAllocator::allocate
  [ 1] CollectedHeap::array_allocate
  [ 2] BacktraceBuilder::expand
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 610000000 ns (1.40%), 61 samples
  [ 0] MemAllocator::Allocation::notify_allocation
  [ 1] MemAllocator::allocate
  [ 2] CollectedHeap::array_allocate
  [ 3] BacktraceBuilder::expand
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] java_lang_Throwable::fill_in_stack_trace
  [ 6] JVM_FillInStackTrace
  [ 7] Java_java_lang_Throwable_fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.fillInStackTrace
  [10] java.lang.Throwable.<init>
  [11] java.lang.Exception.<init>
  [12] java.lang.RuntimeException.<init>
  [13] com.panfutov.Service$BusinessException.<init>
  [14] com.panfutov.Service.doWithException
  [15] com.panfutov.Benchmark.exceptions
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [17] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [18] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [19] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [20] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [22] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.runWith
  [32] java.lang.Thread.run

--- 600000000 ns (1.38%), 60 samples
  [ 0] JVM_FillInStackTrace
  [ 1] Java_java_lang_Throwable_fillInStackTrace
  [ 2] java.lang.Throwable.fillInStackTrace
  [ 3] java.lang.Throwable.fillInStackTrace
  [ 4] java.lang.Throwable.<init>
  [ 5] java.lang.Exception.<init>
  [ 6] java.lang.RuntimeException.<init>
  [ 7] com.panfutov.Service$BusinessException.<init>
  [ 8] com.panfutov.Service.doWithException
  [ 9] com.panfutov.Benchmark.exceptions
  [10] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [11] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [12] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [13] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [14] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [15] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [16] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [17] java.lang.reflect.Method.invoke
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.Executors$RunnableAdapter.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.ThreadPoolExecutor.runWorker
  [24] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [25] java.lang.Thread.runWith
  [26] java.lang.Thread.run

--- 520000000 ns (1.20%), 52 samples
  [ 0] Method::bci_from
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 520000000 ns (1.20%), 52 samples
  [ 0] ObjArrayAllocator::initialize
  [ 1] MemAllocator::allocate
  [ 2] CollectedHeap::array_allocate
  [ 3] BacktraceBuilder::expand
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] java_lang_Throwable::fill_in_stack_trace
  [ 6] JVM_FillInStackTrace
  [ 7] Java_java_lang_Throwable_fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.fillInStackTrace
  [10] java.lang.Throwable.<init>
  [11] java.lang.Exception.<init>
  [12] java.lang.RuntimeException.<init>
  [13] com.panfutov.Service$BusinessException.<init>
  [14] com.panfutov.Service.doWithException
  [15] com.panfutov.Benchmark.exceptions
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [17] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [18] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [19] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [20] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [22] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.runWith
  [32] java.lang.Thread.run

--- 500000000 ns (1.15%), 50 samples
  [ 0] BacktraceBuilder::expand
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 490000000 ns (1.13%), 49 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ull, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ull>::oop_access_barrier
  [ 1] BacktraceBuilder::push
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 460000000 ns (1.06%), 46 samples
  [ 0] frame::sender_for_compiled_frame
  [ 1] frame::sender_raw
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 450000000 ns (1.04%), 45 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<2383974ull, G1BarrierSet>, (AccessInternal::BarrierType)3, 2383974ull>::oop_access_barrier
  [ 1] Universe::should_fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 440000000 ns (1.01%), 44 samples
  [ 0] frame::interpreter_frame_bcp
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 400000000 ns (0.92%), 40 samples
  [ 0] _platform_bzero$VARIANT$Haswell
  [ 1] ObjArrayAllocator::initialize
  [ 2] MemAllocator::allocate
  [ 3] CollectedHeap::array_allocate
  [ 4] BacktraceBuilder::expand
  [ 5] java_lang_Throwable::fill_in_stack_trace
  [ 6] java_lang_Throwable::fill_in_stack_trace
  [ 7] JVM_FillInStackTrace
  [ 8] Java_java_lang_Throwable_fillInStackTrace
  [ 9] java.lang.Throwable.fillInStackTrace
  [10] java.lang.Throwable.fillInStackTrace
  [11] java.lang.Throwable.<init>
  [12] java.lang.Exception.<init>
  [13] java.lang.RuntimeException.<init>
  [14] com.panfutov.Service$BusinessException.<init>
  [15] com.panfutov.Service.doWithException
  [16] com.panfutov.Benchmark.exceptions
  [17] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [18] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [19] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [20] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [21] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [22] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [23] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [24] java.lang.reflect.Method.invoke
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.Executors$RunnableAdapter.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.ThreadPoolExecutor.runWorker
  [31] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [32] java.lang.Thread.runWith
  [33] java.lang.Thread.run

--- 400000000 ns (0.92%), 40 samples
  [ 0] CodeBlob::is_upcall_stub
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 380000000 ns (0.87%), 38 samples
  [ 0] TypeArrayKlass::allocate_common
  [ 1] BacktraceBuilder::expand
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 370000000 ns (0.85%), 37 samples
  [ 0] Continuation::is_continuation_enterSpecial
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 370000000 ns (0.85%), 37 samples
  [ 0] java.util.concurrent.atomic.AtomicLong.compareAndSet
  [ 1] java.util.Random.next
  [ 2] java.util.Random.nextBoolean
  [ 3] com.panfutov.Service.doWithException
  [ 4] com.panfutov.Benchmark.exceptions
  [ 5] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 6] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 7] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 8] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [ 9] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [10] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [11] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.runWith
  [21] java.lang.Thread.run

--- 340000000 ns (0.78%), 34 samples
  [ 0] CodeBlob::is_upcall_stub
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 330000000 ns (0.76%), 33 samples
  [ 0] CodeHeap::find_blob
  [ 1] JavaThread::pd_last_frame
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 330000000 ns (0.76%), 33 samples
  [ 0] CodeHeap::find_blob
  [ 1] frame::sender_for_compiled_frame
  [ 2] frame::sender_raw
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 330000000 ns (0.76%), 33 samples
  [ 0] Method::bcp_from
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 280000000 ns (0.64%), 28 samples
  [ 0] java.lang.Throwable.fillInStackTrace
  [ 1] java.lang.Throwable.fillInStackTrace
  [ 2] java.lang.Throwable.<init>
  [ 3] java.lang.Exception.<init>
  [ 4] java.lang.RuntimeException.<init>
  [ 5] com.panfutov.Service$BusinessException.<init>
  [ 6] com.panfutov.Service.doWithException
  [ 7] com.panfutov.Benchmark.exceptions
  [ 8] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 9] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [10] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [11] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [12] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [13] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [14] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.runWith
  [24] java.lang.Thread.run

--- 280000000 ns (0.64%), 28 samples
  [ 0] java.lang.Throwable.<init>
  [ 1] java.lang.Exception.<init>
  [ 2] java.lang.RuntimeException.<init>
  [ 3] com.panfutov.Service$BusinessException.<init>
  [ 4] com.panfutov.Service.doWithException
  [ 5] com.panfutov.Benchmark.exceptions
  [ 6] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 7] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 8] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 9] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [10] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [11] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [12] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [13] java.lang.reflect.Method.invoke
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.Executors$RunnableAdapter.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.ThreadPoolExecutor.runWorker
  [20] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [21] java.lang.Thread.runWith
  [22] java.lang.Thread.run

--- 240000000 ns (0.55%), 24 samples
  [ 0] MemAllocator::Allocation::notify_allocation_jvmti_sampler
  [ 1] MemAllocator::allocate
  [ 2] CollectedHeap::array_allocate
  [ 3] BacktraceBuilder::expand
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] java_lang_Throwable::fill_in_stack_trace
  [ 6] JVM_FillInStackTrace
  [ 7] Java_java_lang_Throwable_fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.fillInStackTrace
  [10] java.lang.Throwable.<init>
  [11] java.lang.Exception.<init>
  [12] java.lang.RuntimeException.<init>
  [13] com.panfutov.Service$BusinessException.<init>
  [14] com.panfutov.Service.doWithException
  [15] com.panfutov.Benchmark.exceptions
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [17] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [18] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [19] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [20] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [22] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.runWith
  [32] java.lang.Thread.run

--- 240000000 ns (0.55%), 24 samples
  [ 0] Continuation::is_return_barrier_entry
  [ 1] frame::sender_for_interpreter_frame
  [ 2] frame::sender_raw
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 240000000 ns (0.55%), 24 samples
  [ 0] java.lang.Throwable.fillInStackTrace
  [ 1] java.lang.Throwable.<init>
  [ 2] java.lang.Exception.<init>
  [ 3] java.lang.RuntimeException.<init>
  [ 4] com.panfutov.Service$BusinessException.<init>
  [ 5] com.panfutov.Service.doWithException
  [ 6] com.panfutov.Benchmark.exceptions
  [ 7] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 8] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 9] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [10] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [11] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [12] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [13] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.runWith
  [23] java.lang.Thread.run

--- 230000000 ns (0.53%), 23 samples
  [ 0] CodeCache::find_blob
  [ 1] JavaThread::pd_last_frame
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 220000000 ns (0.51%), 22 samples
  [ 0] frame::interpreter_frame_method
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 220000000 ns (0.51%), 22 samples
  [ 0] Universe::should_fill_in_stack_trace
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 210000000 ns (0.48%), 21 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<287270ull, G1BarrierSet>, (AccessInternal::BarrierType)1, 287270ull>::oop_access_barrier
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 210000000 ns (0.48%), 21 samples
  [ 0] java.util.Random.next
  [ 1] java.util.Random.nextBoolean
  [ 2] com.panfutov.Service.doWithException
  [ 3] com.panfutov.Benchmark.exceptions
  [ 4] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 5] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 6] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 7] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [ 8] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [ 9] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [10] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.runWith
  [20] java.lang.Thread.run

--- 200000000 ns (0.46%), 20 samples
  [ 0] frame::interpreter_frame_method
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 200000000 ns (0.46%), 20 samples
  [ 0] CodeCache::find_blob
  [ 1] frame::sender_raw
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 200000000 ns (0.46%), 20 samples
  [ 0] CollectedHeap::array_allocate
  [ 1] BacktraceBuilder::expand
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 190000000 ns (0.44%), 19 samples
  [ 0] JavaThread::pd_last_frame
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 190000000 ns (0.44%), 19 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ull, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ull>::oop_access_barrier
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 190000000 ns (0.44%), 19 samples
  [ 0] CodeBlob::is_upcall_stub
  [ 1] frame::sender_raw
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 190000000 ns (0.44%), 19 samples
  [ 0] MemAllocator::Allocation::check_out_of_memory
  [ 1] MemAllocator::allocate
  [ 2] CollectedHeap::array_allocate
  [ 3] BacktraceBuilder::expand
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] java_lang_Throwable::fill_in_stack_trace
  [ 6] JVM_FillInStackTrace
  [ 7] Java_java_lang_Throwable_fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.fillInStackTrace
  [10] java.lang.Throwable.<init>
  [11] java.lang.Exception.<init>
  [12] java.lang.RuntimeException.<init>
  [13] com.panfutov.Service$BusinessException.<init>
  [14] com.panfutov.Service.doWithException
  [15] com.panfutov.Benchmark.exceptions
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [17] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [18] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [19] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [20] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [22] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.runWith
  [32] java.lang.Thread.run

--- 180000000 ns (0.41%), 18 samples
  [ 0] Continuation::is_return_barrier_entry
  [ 1] frame::sender_raw
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 170000000 ns (0.39%), 17 samples
  [ 0] java_lang_Throwable::fill_in_stack_trace
  [ 1] JVM_FillInStackTrace
  [ 2] Java_java_lang_Throwable_fillInStackTrace
  [ 3] java.lang.Throwable.fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.<init>
  [ 6] java.lang.Exception.<init>
  [ 7] java.lang.RuntimeException.<init>
  [ 8] com.panfutov.Service$BusinessException.<init>
  [ 9] com.panfutov.Service.doWithException
  [10] com.panfutov.Benchmark.exceptions
  [11] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [13] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [14] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [15] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [16] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.runWith
  [27] java.lang.Thread.run

--- 170000000 ns (0.39%), 17 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<2383974ull, G1BarrierSet>, (AccessInternal::BarrierType)1, 2383974ull>::oop_access_barrier
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 170000000 ns (0.39%), 17 samples
  [ 0] Continuation::is_continuation_enterSpecial
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 160000000 ns (0.37%), 16 samples
  [ 0] tlv_get_addr
  [ 1] CollectedHeap::array_allocate
  [ 2] BacktraceBuilder::expand
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 160000000 ns (0.37%), 16 samples
  [ 0] ThreadShadow::clear_pending_exception
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 150000000 ns (0.35%), 15 samples
  [ 0] nmethod::metadata_addr_at
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 150000000 ns (0.35%), 15 samples
  [ 0] Method::bcp_from
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 150000000 ns (0.35%), 15 samples
  [ 0] frame::interpreter_frame_bcp
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 140000000 ns (0.32%), 14 samples
  [ 0] semaphore_wait_trap
  [ 1] WorkerThread::run
  [ 2] Thread::call_run
  [ 3] thread_native_entry
  [ 4] _pthread_start
  [ 5] thread_start

--- 130000000 ns (0.30%), 13 samples
  [ 0] _os_semaphore_wait.cold.1
  [ 1] MemAllocator::allocate
  [ 2] CollectedHeap::array_allocate
  [ 3] BacktraceBuilder::expand
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] java_lang_Throwable::fill_in_stack_trace
  [ 6] JVM_FillInStackTrace
  [ 7] Java_java_lang_Throwable_fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.fillInStackTrace
  [10] java.lang.Throwable.<init>
  [11] java.lang.Exception.<init>
  [12] java.lang.RuntimeException.<init>
  [13] com.panfutov.Service$BusinessException.<init>
  [14] com.panfutov.Service.doWithException
  [15] com.panfutov.Benchmark.exceptions
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [17] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [18] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [19] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [20] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [22] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.runWith
  [32] java.lang.Thread.run

--- 130000000 ns (0.30%), 13 samples
  [ 0] BacktraceBuilder::push
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 130000000 ns (0.30%), 13 samples
  [ 0] Klass::check_array_allocation_length
  [ 1] BacktraceBuilder::expand
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 130000000 ns (0.30%), 13 samples
  [ 0] PcDescContainer::find_pc_desc_internal
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 120000000 ns (0.28%), 12 samples
  [ 0] Method::bci_from
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 120000000 ns (0.28%), 12 samples
  [ 0] JVM_FillInStackTrace
  [ 1] java.lang.Throwable.fillInStackTrace
  [ 2] java.lang.Throwable.fillInStackTrace
  [ 3] java.lang.Throwable.<init>
  [ 4] java.lang.Exception.<init>
  [ 5] java.lang.RuntimeException.<init>
  [ 6] com.panfutov.Service$BusinessException.<init>
  [ 7] com.panfutov.Service.doWithException
  [ 8] com.panfutov.Benchmark.exceptions
  [ 9] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [10] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [11] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [12] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [13] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [14] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [15] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.runWith
  [25] java.lang.Thread.run

--- 120000000 ns (0.28%), 12 samples
  [ 0] __psynch_cvwait
  [ 1] PlatformMonitor::wait
  [ 2] Monitor::wait_without_safepoint_check
  [ 3] WatcherThread::sleep
  [ 4] WatcherThread::run
  [ 5] Thread::call_run
  [ 6] thread_native_entry
  [ 7] _pthread_start
  [ 8] thread_start

--- 110000000 ns (0.25%), 11 samples
  [ 0] tlv_get_addr
  [ 1] JVM_FillInStackTrace
  [ 2] Java_java_lang_Throwable_fillInStackTrace
  [ 3] java.lang.Throwable.fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.<init>
  [ 6] java.lang.Exception.<init>
  [ 7] java.lang.RuntimeException.<init>
  [ 8] com.panfutov.Service$BusinessException.<init>
  [ 9] com.panfutov.Service.doWithException
  [10] com.panfutov.Benchmark.exceptions
  [11] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [13] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [14] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [15] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [16] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.runWith
  [27] java.lang.Thread.run

--- 110000000 ns (0.25%), 11 samples
  [ 0] frame::entry_frame_is_first
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 100000000 ns (0.23%), 10 samples
  [ 0] nmethod::metadata_at
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 100000000 ns (0.23%), 10 samples
  [ 0] frame::sender_for_interpreter_frame
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 100000000 ns (0.23%), 10 samples
  [ 0] _platform_bzero$VARIANT$Haswell
  [ 1] MemAllocator::allocate
  [ 2] CollectedHeap::array_allocate
  [ 3] BacktraceBuilder::expand
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] java_lang_Throwable::fill_in_stack_trace
  [ 6] JVM_FillInStackTrace
  [ 7] Java_java_lang_Throwable_fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.fillInStackTrace
  [10] java.lang.Throwable.<init>
  [11] java.lang.Exception.<init>
  [12] java.lang.RuntimeException.<init>
  [13] com.panfutov.Service$BusinessException.<init>
  [14] com.panfutov.Service.doWithException
  [15] com.panfutov.Benchmark.exceptions
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [17] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [18] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [19] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [20] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [22] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.runWith
  [32] java.lang.Thread.run

--- 100000000 ns (0.23%), 10 samples
  [ 0] CodeCache::find_blob
  [ 1] frame::sender_for_compiled_frame
  [ 2] frame::sender_raw
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 90000000 ns (0.21%), 9 samples
  [ 0] com.panfutov.Service.doWithException
  [ 1] com.panfutov.Benchmark.exceptions
  [ 2] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 3] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 4] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 5] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [ 6] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [ 7] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 8] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.runWith
  [18] java.lang.Thread.run

--- 90000000 ns (0.21%), 9 samples
  [ 0] nmethod::metadata_addr_at
  [ 1] nmethod::metadata_at
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 80000000 ns (0.18%), 8 samples
  [ 0] CodeHeap::find_blob
  [ 1] frame::sender_raw
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 80000000 ns (0.18%), 8 samples
  [ 0] ObjArrayAllocator::initialize
  [ 1] CollectedHeap::array_allocate
  [ 2] BacktraceBuilder::expand
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 80000000 ns (0.18%), 8 samples
  [ 0] Klass::check_array_allocation_length
  [ 1] TypeArrayKlass::allocate_common
  [ 2] BacktraceBuilder::expand
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 80000000 ns (0.18%), 8 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ull, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ull>::oop_access_barrier
  [ 1] Universe::should_fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 80000000 ns (0.18%), 8 samples
  [ 0] Klass::check_array_allocation_length
  [ 1] ObjArrayKlass::allocate
  [ 2] BacktraceBuilder::expand
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 80000000 ns (0.18%), 8 samples
  [ 0] frame::sender_raw
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 70000000 ns (0.16%), 7 samples
  [ 0] PreserveExceptionMark::~PreserveExceptionMark
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 70000000 ns (0.16%), 7 samples
  [ 0] RegisterMap::RegisterMap
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 60000000 ns (0.14%), 6 samples
  [ 0] frame::entry_frame_is_first
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 60000000 ns (0.14%), 6 samples
  [ 0] Continuation::is_return_barrier_entry
  [ 1] frame::sender_for_compiled_frame
  [ 2] frame::sender_raw
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 50000000 ns (0.12%), 5 samples
  [ 0] MemAllocator::Allocation::check_out_of_memory
  [ 1] CollectedHeap::array_allocate
  [ 2] BacktraceBuilder::expand
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 50000000 ns (0.12%), 5 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<2383974ull, G1BarrierSet>, (AccessInternal::BarrierType)3, 2383974ull>::oop_access_barrier
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 50000000 ns (0.12%), 5 samples
  [ 0] CollectedHeap::array_allocate
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 50000000 ns (0.12%), 5 samples
  [ 0] MemAllocator::allocate
  [ 1] BacktraceBuilder::expand
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 50000000 ns (0.12%), 5 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<286822ull, G1BarrierSet>, (AccessInternal::BarrierType)1, 286822ull>::oop_access_barrier
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] frame::sender_for_compiled_frame
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 1] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 2] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 3] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [ 4] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [ 5] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 6] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 7] java.lang.reflect.Method.invoke
  [ 8] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.Executors$RunnableAdapter.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.ThreadPoolExecutor.runWorker
  [14] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [15] java.lang.Thread.runWith
  [16] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] java.lang.Throwable.<init>
  [ 1] java.lang.Exception.<init>
  [ 2] java.lang.RuntimeException.<init>
  [ 3] com.panfutov.Service$BusinessException.<init>
  [ 4] com.panfutov.Service.doWithException
  [ 5] com.panfutov.Benchmark.exceptions
  [ 6] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 7] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 8] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 9] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [10] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [11] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [12] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [13] java.lang.reflect.Method.invoke
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.Executors$RunnableAdapter.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.ThreadPoolExecutor.runWorker
  [20] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [21] java.lang.Thread.runWith
  [22] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] nmethod::scopes_pcs_end
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] oopDesc::release_obj_field_put
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] oopFactory::new_objectArray
  [ 1] BacktraceBuilder::expand
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] nmethod::scopes_pcs_begin
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] java.util.Random.next
  [ 1] java.util.Random.nextBoolean
  [ 2] com.panfutov.Service.doWithException
  [ 3] com.panfutov.Benchmark.exceptions
  [ 4] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 5] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 6] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 7] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [ 8] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [ 9] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [10] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.runWith
  [20] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] TypeArrayKlass::allocate_common
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] oopFactory::new_objectArray
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] MemAllocator::Allocation::notify_allocation
  [ 1] CollectedHeap::array_allocate
  [ 2] BacktraceBuilder::expand
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] PreserveExceptionMark::PreserveExceptionMark
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] java.lang.Throwable.getMessage
  [ 1] com.panfutov.Benchmark.exceptions
  [ 2] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 3] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 4] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 5] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [ 6] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [ 7] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 8] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.runWith
  [18] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] MemAllocator::Allocation::notify_allocation_jvmti_sampler
  [ 1] CollectedHeap::array_allocate
  [ 2] BacktraceBuilder::expand
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] methodHandle::~methodHandle
  [ 1] JVM_FillInStackTrace
  [ 2] Java_java_lang_Throwable_fillInStackTrace
  [ 3] java.lang.Throwable.fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.<init>
  [ 6] java.lang.Exception.<init>
  [ 7] java.lang.RuntimeException.<init>
  [ 8] com.panfutov.Service$BusinessException.<init>
  [ 9] com.panfutov.Service.doWithException
  [10] com.panfutov.Benchmark.exceptions
  [11] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [13] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [14] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [15] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [16] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.runWith
  [27] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] com.panfutov.Service.doWithException
  [ 1] com.panfutov.Benchmark.exceptions
  [ 2] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 3] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 4] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 5] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [ 6] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [ 7] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 8] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.runWith
  [18] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] JavaThread::pd_last_frame
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] com.panfutov.Benchmark.exceptions
  [ 1] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 2] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 3] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 4] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [ 5] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [ 6] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 7] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 8] java.lang.reflect.Method.invoke
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] java.util.concurrent.FutureTask.run
  [12] java.util.concurrent.Executors$RunnableAdapter.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.ThreadPoolExecutor.runWorker
  [15] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [16] java.lang.Thread.runWith
  [17] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] java.util.Random.next
  [ 1] java.util.Random.nextBoolean
  [ 2] com.panfutov.Service.doWithException
  [ 3] com.panfutov.Benchmark.exceptions
  [ 4] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 5] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 6] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 7] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [ 8] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [ 9] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [10] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.runWith
  [20] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] nmethod::scopes_pcs_end
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] JavaFrameAnchor::make_walkable
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] oopFactory::new_intArray
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] java.lang.Throwable.fillInStackTrace
  [ 1] java.lang.Throwable.<init>
  [ 2] java.lang.Exception.<init>
  [ 3] java.lang.RuntimeException.<init>
  [ 4] com.panfutov.Service$BusinessException.<init>
  [ 5] com.panfutov.Service.doWithException
  [ 6] com.panfutov.Benchmark.exceptions
  [ 7] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 8] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 9] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [10] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [11] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [12] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [13] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.runWith
  [23] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] nmethod::scopes_pcs_begin
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] JavaFrameAnchor::make_walkable
  [ 1] JVM_FillInStackTrace
  [ 2] Java_java_lang_Throwable_fillInStackTrace
  [ 3] java.lang.Throwable.fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.<init>
  [ 6] java.lang.Exception.<init>
  [ 7] java.lang.RuntimeException.<init>
  [ 8] com.panfutov.Service$BusinessException.<init>
  [ 9] com.panfutov.Service.doWithException
  [10] com.panfutov.Benchmark.exceptions
  [11] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [13] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [14] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [15] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [16] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.runWith
  [27] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] PcDescCache::find_pc_desc
  [ 1] PcDescContainer::find_pc_desc_internal
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] CodeCache::find_blob
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] com.panfutov.Service.doWithException
  [ 1] com.panfutov.Benchmark.exceptions
  [ 2] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 3] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 4] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 5] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [ 6] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [ 7] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 8] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.runWith
  [18] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] BacktraceBuilder::expand
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] semaphore_wait_trap
  [ 1] WorkerThread::run
  [ 2] Thread::call_run
  [ 3] thread_native_entry
  [ 4] _pthread_start
  [ 5] thread_start

--- 20000000 ns (0.05%), 2 samples
  [ 0] oopFactory::new_shortArray
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] com.panfutov.Service.doWithException
  [ 1] com.panfutov.Benchmark.exceptions
  [ 2] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 3] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 4] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 5] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [ 6] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [ 7] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 8] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.runWith
  [18] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] __psynch_cvwait
  [ 1] PlatformMonitor::wait
  [ 2] Monitor::wait_without_safepoint_check
  [ 3] MonitorDeflationThread::monitor_deflation_thread_entry
  [ 4] JavaThread::thread_main_inner
  [ 5] Thread::call_run
  [ 6] thread_native_entry
  [ 7] _pthread_start
  [ 8] thread_start

--- 20000000 ns (0.05%), 2 samples
  [ 0] oopFactory::new_intArray
  [ 1] BacktraceBuilder::expand
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] nmethod::metadata_at
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] JavaFrameAnchor::make_walkable
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] PcDescCache::find_pc_desc
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] java.lang.Throwable.fillInStackTrace
  [ 1] [unknown_Java]

--- 20000000 ns (0.05%), 2 samples
  [ 0] collapse
  [ 1] java.lang.Throwable.fillInStackTrace
  [ 2] java.lang.Throwable.fillInStackTrace
  [ 3] java.lang.Throwable.<init>
  [ 4] java.lang.Exception.<init>
  [ 5] java.lang.RuntimeException.<init>
  [ 6] com.panfutov.Service$BusinessException.<init>
  [ 7] com.panfutov.Service.doWithException
  [ 8] com.panfutov.Benchmark.exceptions
  [ 9] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [10] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [11] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [12] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [13] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [14] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [15] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.runWith
  [25] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] ZThread::~ZThread
  [ 1] MemAllocator::allocate
  [ 2] CollectedHeap::array_allocate
  [ 3] BacktraceBuilder::expand
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] java_lang_Throwable::fill_in_stack_trace
  [ 6] JVM_FillInStackTrace
  [ 7] Java_java_lang_Throwable_fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.fillInStackTrace
  [10] java.lang.Throwable.<init>
  [11] java.lang.Exception.<init>
  [12] java.lang.RuntimeException.<init>
  [13] com.panfutov.Service$BusinessException.<init>
  [14] com.panfutov.Service.doWithException
  [15] com.panfutov.Benchmark.exceptions
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [17] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [18] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [19] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [20] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [22] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.runWith
  [32] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] PreserveExceptionMark::~PreserveExceptionMark
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] ClassLoaderDataGraph::roots_cld_do
  [ 1] G1RootProcessor::process_java_roots
  [ 2] G1RootProcessor::evacuate_roots
  [ 3] G1EvacuateRegionsTask::scan_roots
  [ 4] G1EvacuateRegionsBaseTask::work
  [ 5] WorkerThread::run
  [ 6] Thread::call_run
  [ 7] thread_native_entry
  [ 8] _pthread_start
  [ 9] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] small_malloc_from_free_list
  [ 1] small_malloc_should_clear
  [ 2] szone_malloc_should_clear
  [ 3] os::malloc
  [ 4] AllocateHeap
  [ 5] G1RemSetScanState::prepare
  [ 6] G1YoungCollector::pre_evacuate_collection_set
  [ 7] G1YoungCollector::collect
  [ 8] G1CollectedHeap::do_collection_pause_at_safepoint_helper
  [ 9] G1CollectedHeap::do_collection_pause_at_safepoint
  [10] VM_G1CollectForAllocation::doit
  [11] VM_Operation::evaluate
  [12] VMThread::evaluate_operation
  [13] VMThread::inner_execute
  [14] VMThread::run
  [15] Thread::call_run
  [16] thread_native_entry
  [17] _pthread_start
  [18] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] semaphore_wait_trap
  [ 1] WorkerThreads::run_task
  [ 2] void WeakProcessor::weak_oops_do<G1STWIsAliveClosure, G1KeepAliveClosure>
  [ 3] G1YoungCollector::post_evacuate_collection_set
  [ 4] G1YoungCollector::collect
  [ 5] G1CollectedHeap::do_collection_pause_at_safepoint_helper
  [ 6] G1CollectedHeap::do_collection_pause_at_safepoint
  [ 7] VM_G1CollectForAllocation::doit
  [ 8] VM_Operation::evaluate
  [ 9] VMThread::evaluate_operation
  [10] VMThread::inner_execute
  [11] VMThread::run
  [12] Thread::call_run
  [13] thread_native_entry
  [14] _pthread_start
  [15] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] java_lang_Throwable::fill_in_stack_trace
  [ 1] Java_java_lang_Throwable_fillInStackTrace
  [ 2] java.lang.Throwable.fillInStackTrace
  [ 3] java.lang.Throwable.fillInStackTrace
  [ 4] java.lang.Throwable.<init>
  [ 5] java.lang.Exception.<init>
  [ 6] java.lang.RuntimeException.<init>
  [ 7] com.panfutov.Service$BusinessException.<init>
  [ 8] com.panfutov.Service.doWithException
  [ 9] com.panfutov.Benchmark.exceptions
  [10] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [11] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [12] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [13] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [14] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [15] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [16] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [17] java.lang.reflect.Method.invoke
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.Executors$RunnableAdapter.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.ThreadPoolExecutor.runWorker
  [24] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [25] java.lang.Thread.runWith
  [26] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] __psynch_cvwait
  [ 1] PlatformMonitor::wait
  [ 2] Monitor::wait_without_safepoint_check
  [ 3] TaskTerminator::offer_termination
  [ 4] G1ParEvacuateFollowersClosure::do_void
  [ 5] G1EvacuateRegionsBaseTask::evacuate_live_objects
  [ 6] G1EvacuateRegionsBaseTask::work
  [ 7] WorkerThread::run
  [ 8] Thread::call_run
  [ 9] thread_native_entry
  [10] _pthread_start
  [11] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] Java_java_lang_Throwable_fillInStackTrace
  [ 1] java.lang.Throwable.fillInStackTrace
  [ 2] java.lang.Throwable.fillInStackTrace
  [ 3] java.lang.Throwable.<init>
  [ 4] java.lang.Exception.<init>
  [ 5] java.lang.RuntimeException.<init>
  [ 6] com.panfutov.Service$BusinessException.<init>
  [ 7] com.panfutov.Service.doWithException
  [ 8] com.panfutov.Benchmark.exceptions
  [ 9] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [10] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [11] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [12] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [13] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [14] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [15] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.runWith
  [25] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] G1DirtyCardQueueSet::num_par_ids
  [ 1] G1RemSetTrackingPolicy::update_at_allocate
  [ 2] G1CollectedHeap::new_mutator_alloc_region
  [ 3] G1AllocRegion::new_alloc_region_and_allocate
  [ 4] G1CollectedHeap::attempt_allocation_slow
  [ 5] G1CollectedHeap::attempt_allocation
  [ 6] MemAllocator::mem_allocate_inside_tlab_slow
  [ 7] MemAllocator::allocate
  [ 8] CollectedHeap::array_allocate
  [ 9] BacktraceBuilder::expand
  [10] java_lang_Throwable::fill_in_stack_trace
  [11] java_lang_Throwable::fill_in_stack_trace
  [12] JVM_FillInStackTrace
  [13] Java_java_lang_Throwable_fillInStackTrace
  [14] java.lang.Throwable.fillInStackTrace
  [15] java.lang.Throwable.fillInStackTrace
  [16] java.lang.Throwable.<init>
  [17] java.lang.Exception.<init>
  [18] java.lang.RuntimeException.<init>
  [19] com.panfutov.Service$BusinessException.<init>
  [20] com.panfutov.Service.doWithException
  [21] com.panfutov.Benchmark.exceptions
  [22] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [23] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [24] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [25] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [26] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [27] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [28] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [29] java.lang.reflect.Method.invoke
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.Executors$RunnableAdapter.call
  [34] java.util.concurrent.FutureTask.run
  [35] java.util.concurrent.ThreadPoolExecutor.runWorker
  [36] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [37] java.lang.Thread.runWith
  [38] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] oopFactory::new_symbolArray
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] VMThread::wait_for_operation
  [ 1] VMThread::run
  [ 2] Thread::call_run
  [ 3] thread_native_entry
  [ 4] _pthread_start
  [ 5] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] tlv_get_addr
  [ 1] G1YoungCollector::process_discovered_references
  [ 2] G1YoungCollector::post_evacuate_collection_set
  [ 3] G1YoungCollector::collect
  [ 4] G1CollectedHeap::do_collection_pause_at_safepoint_helper
  [ 5] G1CollectedHeap::do_collection_pause_at_safepoint
  [ 6] VM_G1CollectForAllocation::doit
  [ 7] VM_Operation::evaluate
  [ 8] VMThread::evaluate_operation
  [ 9] VMThread::inner_execute
  [10] VMThread::run
  [11] Thread::call_run
  [12] thread_native_entry
  [13] _pthread_start
  [14] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] oopFactory::new_shortArray
  [ 1] BacktraceBuilder::expand
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] __psynch_mutexwait
  [ 1] _pthread_mutex_firstfit_lock_slow
  [ 2] Mutex::lock_without_safepoint_check
  [ 3] TaskTerminator::offer_termination
  [ 4] G1ParEvacuateFollowersClosure::do_void
  [ 5] G1EvacuateRegionsBaseTask::evacuate_live_objects
  [ 6] G1EvacuateRegionsBaseTask::work
  [ 7] WorkerThread::run
  [ 8] Thread::call_run
  [ 9] thread_native_entry
  [10] _pthread_start
  [11] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] __gettimeofday
  [ 1] PlatformMonitor::wait
  [ 2] Monitor::wait_without_safepoint_check
  [ 3] WatcherThread::sleep
  [ 4] WatcherThread::run
  [ 5] Thread::call_run
  [ 6] thread_native_entry
  [ 7] _pthread_start
  [ 8] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] PreserveExceptionMark::PreserveExceptionMark
  [ 1] JVM_FillInStackTrace
  [ 2] Java_java_lang_Throwable_fillInStackTrace
  [ 3] java.lang.Throwable.fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.<init>
  [ 6] java.lang.Exception.<init>
  [ 7] java.lang.RuntimeException.<init>
  [ 8] com.panfutov.Service$BusinessException.<init>
  [ 9] com.panfutov.Service.doWithException
  [10] com.panfutov.Benchmark.exceptions
  [11] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [13] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [14] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [15] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [16] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.runWith
  [27] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] G1CollectedHeap::unsafe_max_tlab_alloc
  [ 1] MemAllocator::allocate
  [ 2] CollectedHeap::array_allocate
  [ 3] BacktraceBuilder::expand
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] java_lang_Throwable::fill_in_stack_trace
  [ 6] JVM_FillInStackTrace
  [ 7] Java_java_lang_Throwable_fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.fillInStackTrace
  [10] java.lang.Throwable.<init>
  [11] java.lang.Exception.<init>
  [12] java.lang.RuntimeException.<init>
  [13] com.panfutov.Service$BusinessException.<init>
  [14] com.panfutov.Service.doWithException
  [15] com.panfutov.Benchmark.exceptions
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [17] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [18] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [19] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [20] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [22] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.runWith
  [32] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] CodeHeap::find_blob
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] com.panfutov.Benchmark.exceptions
  [ 1] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 2] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 3] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 4] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [ 5] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [ 6] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 7] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 8] java.lang.reflect.Method.invoke
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] java.util.concurrent.FutureTask.run
  [12] java.util.concurrent.Executors$RunnableAdapter.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.ThreadPoolExecutor.runWorker
  [15] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [16] java.lang.Thread.runWith
  [17] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] ReferenceProcessorPhaseTimes::set_ref_discovered
  [ 1] G1YoungCollector::process_discovered_references
  [ 2] G1YoungCollector::post_evacuate_collection_set
  [ 3] G1YoungCollector::collect
  [ 4] G1CollectedHeap::do_collection_pause_at_safepoint_helper
  [ 5] G1CollectedHeap::do_collection_pause_at_safepoint
  [ 6] VM_G1CollectForAllocation::doit
  [ 7] VM_Operation::evaluate
  [ 8] VMThread::evaluate_operation
  [ 9] VMThread::inner_execute
  [10] VMThread::run
  [11] Thread::call_run
  [12] thread_native_entry
  [13] _pthread_start
  [14] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] Method::mask_for
  [ 1] frame::oops_interpreted_do
  [ 2] JavaThread::oops_do_frames
  [ 3] Thread::oops_do
  [ 4] Threads::possibly_parallel_threads_do
  [ 5] Threads::possibly_parallel_oops_do
  [ 6] G1RootProcessor::process_java_roots
  [ 7] G1RootProcessor::evacuate_roots
  [ 8] G1EvacuateRegionsTask::scan_roots
  [ 9] G1EvacuateRegionsBaseTask::work
  [10] WorkerThread::run
  [11] Thread::call_run
  [12] thread_native_entry
  [13] _pthread_start
  [14] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.lang.Throwable.<init>
  [ 1] java.lang.Exception.<init>
  [ 2] java.lang.RuntimeException.<init>
  [ 3] com.panfutov.Service$BusinessException.<init>
  [ 4] com.panfutov.Service.doWithException
  [ 5] com.panfutov.Benchmark.exceptions
  [ 6] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 7] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 8] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 9] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [10] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [11] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [12] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [13] java.lang.reflect.Method.invoke
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.Executors$RunnableAdapter.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.ThreadPoolExecutor.runWorker
  [20] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [21] java.lang.Thread.runWith
  [22] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.lang.Throwable.fillInStackTrace
  [ 1] java.lang.Throwable.<init>
  [ 2] java.lang.Exception.<init>
  [ 3] java.lang.RuntimeException.<init>
  [ 4] com.panfutov.Service$BusinessException.<init>
  [ 5] com.panfutov.Service.doWithException
  [ 6] com.panfutov.Benchmark.exceptions
  [ 7] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 8] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 9] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [10] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [11] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [12] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [13] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.runWith
  [23] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] G1CollectedHeap::par_iterate_regions_array
  [ 1] G1MergeHeapRootsTask::work
  [ 2] WorkerThread::run
  [ 3] Thread::call_run
  [ 4] thread_native_entry
  [ 5] _pthread_start
  [ 6] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.lang.Throwable.<init>
  [ 1] java.lang.Exception.<init>
  [ 2] java.lang.RuntimeException.<init>
  [ 3] com.panfutov.Service$BusinessException.<init>
  [ 4] com.panfutov.Service.doWithException
  [ 5] com.panfutov.Benchmark.exceptions
  [ 6] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 7] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 8] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 9] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [10] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [11] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [12] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [13] java.lang.reflect.Method.invoke
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.Executors$RunnableAdapter.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.ThreadPoolExecutor.runWorker
  [20] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [21] java.lang.Thread.runWith
  [22] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 1] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 2] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 3] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [ 4] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [ 5] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 6] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 7] java.lang.reflect.Method.invoke
  [ 8] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.Executors$RunnableAdapter.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.ThreadPoolExecutor.runWorker
  [14] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [15] java.lang.Thread.runWith
  [16] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] ThreadShadow::clear_pending_exception
  [ 1] JVM_FillInStackTrace
  [ 2] Java_java_lang_Throwable_fillInStackTrace
  [ 3] java.lang.Throwable.fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.<init>
  [ 6] java.lang.Exception.<init>
  [ 7] java.lang.RuntimeException.<init>
  [ 8] com.panfutov.Service$BusinessException.<init>
  [ 9] com.panfutov.Service.doWithException
  [10] com.panfutov.Benchmark.exceptions
  [11] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [13] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [14] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [15] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [16] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.runWith
  [27] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] Monitor::wait_without_safepoint_check
  [ 1] G1ServiceThread::wait_for_task
  [ 2] G1ServiceThread::run_service
  [ 3] ConcurrentGCThread::run
  [ 4] Thread::call_run
  [ 5] thread_native_entry
  [ 6] _pthread_start
  [ 7] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.lang.Throwable.fillInStackTrace
  [ 1] java.lang.Throwable.<init>
  [ 2] java.lang.Exception.<init>
  [ 3] java.lang.RuntimeException.<init>
  [ 4] com.panfutov.Service$BusinessException.<init>
  [ 5] com.panfutov.Service.doWithException
  [ 6] com.panfutov.Benchmark.exceptions
  [ 7] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 8] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 9] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [10] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [11] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [12] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [13] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.runWith
  [23] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] __psynch_cvwait
  [ 1] PlatformMonitor::wait
  [ 2] Monitor::wait_without_safepoint_check
  [ 3] G1ServiceThread::wait_for_task
  [ 4] G1ServiceThread::run_service
  [ 5] ConcurrentGCThread::run
  [ 6] Thread::call_run
  [ 7] thread_native_entry
  [ 8] _pthread_start
  [ 9] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] oopDesc::release_obj_field_put
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] Mutex::lock
  [ 1] G1CollectedHeap::attempt_allocation_slow
  [ 2] G1CollectedHeap::attempt_allocation
  [ 3] MemAllocator::mem_allocate_inside_tlab_slow
  [ 4] MemAllocator::allocate
  [ 5] CollectedHeap::array_allocate
  [ 6] BacktraceBuilder::expand
  [ 7] java_lang_Throwable::fill_in_stack_trace
  [ 8] java_lang_Throwable::fill_in_stack_trace
  [ 9] JVM_FillInStackTrace
  [10] Java_java_lang_Throwable_fillInStackTrace
  [11] java.lang.Throwable.fillInStackTrace
  [12] java.lang.Throwable.fillInStackTrace
  [13] java.lang.Throwable.<init>
  [14] java.lang.Exception.<init>
  [15] java.lang.RuntimeException.<init>
  [16] com.panfutov.Service$BusinessException.<init>
  [17] com.panfutov.Service.doWithException
  [18] com.panfutov.Benchmark.exceptions
  [19] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [20] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [21] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [22] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [23] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [24] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [25] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.runWith
  [35] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] CompositeElapsedCounterSource::seconds
  [ 1] G1EvacuateRegionsTask::start_work
  [ 2] G1EvacuateRegionsBaseTask::work
  [ 3] WorkerThread::run
  [ 4] Thread::call_run
  [ 5] thread_native_entry
  [ 6] _pthread_start
  [ 7] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<286822ull, G1BarrierSet>, (AccessInternal::BarrierType)1, 286822ull>::oop_access_barrier
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] java_lang_Throwable::fill_in_stack_trace
  [ 1] JVM_FillInStackTrace
  [ 2] Java_java_lang_Throwable_fillInStackTrace
  [ 3] java.lang.Throwable.fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.<init>
  [ 6] java.lang.Exception.<init>
  [ 7] java.lang.RuntimeException.<init>
  [ 8] com.panfutov.Service$BusinessException.<init>
  [ 9] com.panfutov.Service.doWithException
  [10] com.panfutov.Benchmark.exceptions
  [11] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [13] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [14] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [15] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [16] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.runWith
  [27] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] VM_HandshakeAllThreads::doit
  [ 1] VM_Operation::evaluate
  [ 2] VMThread::evaluate_operation
  [ 3] VMThread::inner_execute
  [ 4] VMThread::run
  [ 5] Thread::call_run
  [ 6] thread_native_entry
  [ 7] _pthread_start
  [ 8] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] semaphore_signal_trap
  [ 1] WorkerThreads::run_task
  [ 2] G1YoungCollector::evacuate_initial_collection_set
  [ 3] G1YoungCollector::collect
  [ 4] G1CollectedHeap::do_collection_pause_at_safepoint_helper
  [ 5] G1CollectedHeap::do_collection_pause_at_safepoint
  [ 6] VM_G1CollectForAllocation::doit
  [ 7] VM_Operation::evaluate
  [ 8] VMThread::evaluate_operation
  [ 9] VMThread::inner_execute
  [10] VMThread::run
  [11] Thread::call_run
  [12] thread_native_entry
  [13] _pthread_start
  [14] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] ObjArrayKlass::allocate
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] _platform_strlen
  [ 1] VMThread::wait_until_executed
  [ 2] VMThread::execute
  [ 3] G1CollectedHeap::attempt_allocation_slow
  [ 4] G1CollectedHeap::attempt_allocation
  [ 5] MemAllocator::mem_allocate_inside_tlab_slow
  [ 6] MemAllocator::allocate
  [ 7] CollectedHeap::array_allocate
  [ 8] BacktraceBuilder::expand
  [ 9] java_lang_Throwable::fill_in_stack_trace
  [10] java_lang_Throwable::fill_in_stack_trace
  [11] JVM_FillInStackTrace
  [12] Java_java_lang_Throwable_fillInStackTrace
  [13] java.lang.Throwable.fillInStackTrace
  [14] java.lang.Throwable.fillInStackTrace
  [15] java.lang.Throwable.<init>
  [16] java.lang.Exception.<init>
  [17] java.lang.RuntimeException.<init>
  [18] com.panfutov.Service$BusinessException.<init>
  [19] com.panfutov.Service.doWithException
  [20] com.panfutov.Benchmark.exceptions
  [21] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [22] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [23] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [24] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [25] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [26] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [27] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [28] java.lang.reflect.Method.invoke
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.Executors$RunnableAdapter.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.ThreadPoolExecutor.runWorker
  [35] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [36] java.lang.Thread.runWith
  [37] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] CompositeElapsedCounterSource::seconds
  [ 1] G1GCParPhaseTimesTracker::~G1GCParPhaseTimesTracker
  [ 2] G1MergeHeapRootsTask::work
  [ 3] WorkerThread::run
  [ 4] Thread::call_run
  [ 5] thread_native_entry
  [ 6] _pthread_start
  [ 7] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] G1CodeRootSet::contains
  [ 1] HeapRegionRemSet::add_code_root
  [ 2] nmethod::oops_do
  [ 3] G1NmethodProcessor::do_regular_processing
  [ 4] nmethod::oops_do_process_weak
  [ 5] G1CodeBlobClosure::do_code_blob
  [ 6] JavaThread::oops_do_frames
  [ 7] Thread::oops_do
  [ 8] Threads::possibly_parallel_threads_do
  [ 9] Threads::possibly_parallel_oops_do
  [10] G1RootProcessor::process_java_roots
  [11] G1RootProcessor::evacuate_roots
  [12] G1EvacuateRegionsTask::scan_roots
  [13] G1EvacuateRegionsBaseTask::work
  [14] WorkerThread::run
  [15] Thread::call_run
  [16] thread_native_entry
  [17] _pthread_start
  [18] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] frame::oops_interpreted_do
  [ 1] JavaThread::oops_do_frames
  [ 2] Thread::oops_do
  [ 3] Threads::possibly_parallel_threads_do
  [ 4] Threads::possibly_parallel_oops_do
  [ 5] G1RootProcessor::process_java_roots
  [ 6] G1RootProcessor::evacuate_roots
  [ 7] G1EvacuateRegionsTask::scan_roots
  [ 8] G1EvacuateRegionsBaseTask::work
  [ 9] WorkerThread::run
  [10] Thread::call_run
  [11] thread_native_entry
  [12] _pthread_start
  [13] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] __gettimeofday
  [ 1] PlatformMonitor::wait
  [ 2] Monitor::wait_without_safepoint_check
  [ 3] TaskTerminator::offer_termination
  [ 4] G1ParEvacuateFollowersClosure::do_void
  [ 5] G1EvacuateRegionsBaseTask::evacuate_live_objects
  [ 6] G1EvacuateRegionsBaseTask::work
  [ 7] WorkerThread::run
  [ 8] Thread::call_run
  [ 9] thread_native_entry
  [10] _pthread_start
  [11] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<287270ull, G1BarrierSet>, (AccessInternal::BarrierType)1, 287270ull>::oop_access_barrier
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] org.openjdk.jmh.infra.Blackhole.consume
  [ 1] com.panfutov.Benchmark.exceptions
  [ 2] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 3] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 4] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 5] java.lang.invoke.LambdaForm$MH.0x000000012a02d800.invoke
  [ 6] java.lang.invoke.LambdaForm$MH.0x000000012a002800.invokeExact_MT
  [ 7] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 8] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.runWith
  [18] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] CHeapBitMap::~CHeapBitMap
  [ 1] G1CollectedHeap::do_collection_pause_at_safepoint
  [ 2] VM_G1CollectForAllocation::doit
  [ 3] VM_Operation::evaluate
  [ 4] VMThread::evaluate_operation
  [ 5] VMThread::inner_execute
  [ 6] VMThread::run
  [ 7] Thread::call_run
  [ 8] thread_native_entry
  [ 9] _pthread_start
  [10] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] __psynch_cvwait
  [ 1] PlatformMonitor::wait
  [ 2] Monitor::wait_without_safepoint_check
  [ 3] TaskTerminator::offer_termination
  [ 4] G1ParEvacuateFollowersClosure::do_void
  [ 5] G1EvacuateRegionsBaseTask::evacuate_live_objects
  [ 6] G1EvacuateRegionsBaseTask::work
  [ 7] WorkerThread::run
  [ 8] Thread::call_run
  [ 9] thread_native_entry
  [10] _pthread_start
  [11] thread_start

          ns  percent  samples  top
  ----------  -------  -------  ---
  9220000000   21.22%      922  java_lang_Throwable::fill_in_stack_trace
  3270000000    7.53%      327  CodeCache::find_blob
  3210000000    7.39%      321  BacktraceBuilder::push
  3100000000    7.14%      310  frame::sender_for_interpreter_frame
  3080000000    7.09%      308  CodeHeap::find_blob
  2050000000    4.72%      205  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<2383974ull, G1BarrierSet>, (AccessInternal::BarrierType)1, 2383974ull>::oop_access_barrier
  2050000000    4.72%      205  frame::sender_raw
  1440000000    3.31%      144  ObjArrayKlass::allocate
   930000000    2.14%       93  CodeBlob::is_upcall_stub
   760000000    1.75%       76  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ull, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ull>::oop_access_barrier
   720000000    1.66%       72  JVM_FillInStackTrace
   680000000    1.57%       68  MemAllocator::allocate
   640000000    1.47%       64  MemAllocator::Allocation::notify_allocation
   640000000    1.47%       64  Method::bci_from
   600000000    1.38%       60  ObjArrayAllocator::initialize
   590000000    1.36%       59  frame::interpreter_frame_bcp
   580000000    1.34%       58  java.lang.Throwable.fillInStackTrace
   540000000    1.24%       54  Continuation::is_continuation_enterSpecial
   520000000    1.20%       52  BacktraceBuilder::expand
   500000000    1.15%       50  frame::sender_for_compiled_frame
   500000000    1.15%       50  _platform_bzero$VARIANT$Haswell
   500000000    1.15%       50  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<2383974ull, G1BarrierSet>, (AccessInternal::BarrierType)3, 2383974ull>::oop_access_barrier
   480000000    1.10%       48  Method::bcp_from
   480000000    1.10%       48  Continuation::is_return_barrier_entry
   420000000    0.97%       42  frame::interpreter_frame_method
   410000000    0.94%       41  TypeArrayKlass::allocate_common
   370000000    0.85%       37  java.util.concurrent.atomic.AtomicLong.compareAndSet
   340000000    0.78%       34  java.lang.Throwable.<init>
   290000000    0.67%       29  Klass::check_array_allocation_length
   280000000    0.64%       28  tlv_get_addr
   270000000    0.62%       27  java.util.Random.next
   270000000    0.62%       27  MemAllocator::Allocation::notify_allocation_jvmti_sampler
   250000000    0.58%       25  CollectedHeap::array_allocate
   240000000    0.55%       24  MemAllocator::Allocation::check_out_of_memory
   240000000    0.55%       24  nmethod::metadata_addr_at
   220000000    0.51%       22  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<287270ull, G1BarrierSet>, (AccessInternal::BarrierType)1, 287270ull>::oop_access_barrier
   220000000    0.51%       22  Universe::should_fill_in_stack_trace
   220000000    0.51%       22  JavaThread::pd_last_frame
   170000000    0.39%       17  __psynch_cvwait
   170000000    0.39%       17  frame::entry_frame_is_first
   170000000    0.39%       17  semaphore_wait_trap
   170000000    0.39%       17  ThreadShadow::clear_pending_exception
   160000000    0.37%       16  com.panfutov.Service.doWithException
   130000000    0.30%       13  _os_semaphore_wait.cold.1
   130000000    0.30%       13  PcDescContainer::find_pc_desc_internal
   120000000    0.28%       12  nmethod::metadata_at
    90000000    0.21%        9  PreserveExceptionMark::~PreserveExceptionMark
    70000000    0.16%        7  RegisterMap::RegisterMap
    70000000    0.16%        7  oopFactory::new_objectArray
    60000000    0.14%        6  nmethod::scopes_pcs_end
    60000000    0.14%        6  nmethod::scopes_pcs_begin
    60000000    0.14%        6  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<286822ull, G1BarrierSet>, (AccessInternal::BarrierType)1, 286822ull>::oop_access_barrier
    60000000    0.14%        6  JavaFrameAnchor::make_walkable
    50000000    0.12%        5  oopDesc::release_obj_field_put
    50000000    0.12%        5  com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
    40000000    0.09%        4  PreserveExceptionMark::PreserveExceptionMark
    40000000    0.09%        4  com.panfutov.Benchmark.exceptions
    40000000    0.09%        4  PcDescCache::find_pc_desc
    40000000    0.09%        4  oopFactory::new_intArray
    30000000    0.07%        3  java.lang.Throwable.getMessage
    30000000    0.07%        3  methodHandle::~methodHandle
    30000000    0.07%        3  oopFactory::new_shortArray
    20000000    0.05%        2  CompositeElapsedCounterSource::seconds
    20000000    0.05%        2  __gettimeofday
    20000000    0.05%        2  ZThread::~ZThread
    20000000    0.05%        2  collapse
    10000000    0.02%        1  G1CollectedHeap::unsafe_max_tlab_alloc
    10000000    0.02%        1  Java_java_lang_Throwable_fillInStackTrace
    10000000    0.02%        1  G1DirtyCardQueueSet::num_par_ids
    10000000    0.02%        1  Mutex::lock
    10000000    0.02%        1  ReferenceProcessorPhaseTimes::set_ref_discovered
    10000000    0.02%        1  ClassLoaderDataGraph::roots_cld_do
    10000000    0.02%        1  Monitor::wait_without_safepoint_check
    10000000    0.02%        1  frame::oops_interpreted_do
    10000000    0.02%        1  G1CodeRootSet::contains
    10000000    0.02%        1  _platform_strlen
    10000000    0.02%        1  G1CollectedHeap::par_iterate_regions_array
    10000000    0.02%        1  __psynch_mutexwait
    10000000    0.02%        1  VM_HandshakeAllThreads::doit
    10000000    0.02%        1  VMThread::wait_for_operation
    10000000    0.02%        1  oopFactory::new_symbolArray
    10000000    0.02%        1  org.openjdk.jmh.infra.Blackhole.consume
    10000000    0.02%        1  semaphore_signal_trap
    10000000    0.02%        1  Method::mask_for
    10000000    0.02%        1  small_malloc_from_free_list
    10000000    0.02%        1  CHeapBitMap::~CHeapBitMap
Async profiler results:
  /Users/artyom/git/exceptions-vs-jresult-benchmark/exceptions-vs-jresult-benchmark/untitled/com.panfutov.Benchmark.exceptions-AverageTime/summary-cpu.txt
--- Execution profile ---
Total samples       : 4317
unknown_Java        : 3 (0.07%)

--- 9170000000 ns (21.24%), 917 samples
  [ 0] java_lang_Throwable::fill_in_stack_trace
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 3720000000 ns (8.62%), 372 samples
  [ 0] BacktraceBuilder::push
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 2810000000 ns (6.51%), 281 samples
  [ 0] frame::sender_for_interpreter_frame
  [ 1] frame::sender_raw
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 2180000000 ns (5.05%), 218 samples
  [ 0] CodeHeap::find_blob
  [ 1] frame::sender_for_interpreter_frame
  [ 2] frame::sender_raw
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 1850000000 ns (4.29%), 185 samples
  [ 0] frame::sender_raw
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 1520000000 ns (3.52%), 152 samples
  [ 0] ObjArrayKlass::allocate
  [ 1] BacktraceBuilder::expand
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 1430000000 ns (3.31%), 143 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<2383974ull, G1BarrierSet>, (AccessInternal::BarrierType)1, 2383974ull>::oop_access_barrier
  [ 1] BacktraceBuilder::push
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 1240000000 ns (2.87%), 124 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ull, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ull>::oop_access_barrier
  [ 1] BacktraceBuilder::push
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 860000000 ns (1.99%), 86 samples
  [ 0] CodeCache::find_blob
  [ 1] frame::sender_for_interpreter_frame
  [ 2] frame::sender_raw
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 690000000 ns (1.60%), 69 samples
  [ 0] Method::bci_from
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 620000000 ns (1.44%), 62 samples
  [ 0] MemAllocator::Allocation::notify_allocation
  [ 1] MemAllocator::allocate
  [ 2] CollectedHeap::array_allocate
  [ 3] BacktraceBuilder::expand
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] java_lang_Throwable::fill_in_stack_trace
  [ 6] JVM_FillInStackTrace
  [ 7] Java_java_lang_Throwable_fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.fillInStackTrace
  [10] java.lang.Throwable.<init>
  [11] java.lang.Exception.<init>
  [12] java.lang.RuntimeException.<init>
  [13] com.panfutov.Service$BusinessException.<init>
  [14] com.panfutov.Service.doWithException
  [15] com.panfutov.Benchmark.exceptions
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [17] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [18] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [19] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [20] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [22] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.runWith
  [32] java.lang.Thread.run

--- 590000000 ns (1.37%), 59 samples
  [ 0] MemAllocator::allocate
  [ 1] CollectedHeap::array_allocate
  [ 2] BacktraceBuilder::expand
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 590000000 ns (1.37%), 59 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<2383974ull, G1BarrierSet>, (AccessInternal::BarrierType)1, 2383974ull>::oop_access_barrier
  [ 1] BacktraceBuilder::expand
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 570000000 ns (1.32%), 57 samples
  [ 0] frame::sender_for_compiled_frame
  [ 1] frame::sender_raw
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 570000000 ns (1.32%), 57 samples
  [ 0] _platform_bzero$VARIANT$Haswell
  [ 1] ObjArrayAllocator::initialize
  [ 2] MemAllocator::allocate
  [ 3] CollectedHeap::array_allocate
  [ 4] BacktraceBuilder::expand
  [ 5] java_lang_Throwable::fill_in_stack_trace
  [ 6] java_lang_Throwable::fill_in_stack_trace
  [ 7] JVM_FillInStackTrace
  [ 8] Java_java_lang_Throwable_fillInStackTrace
  [ 9] java.lang.Throwable.fillInStackTrace
  [10] java.lang.Throwable.fillInStackTrace
  [11] java.lang.Throwable.<init>
  [12] java.lang.Exception.<init>
  [13] java.lang.RuntimeException.<init>
  [14] com.panfutov.Service$BusinessException.<init>
  [15] com.panfutov.Service.doWithException
  [16] com.panfutov.Benchmark.exceptions
  [17] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [18] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [19] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [20] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [21] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [22] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [23] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [24] java.lang.reflect.Method.invoke
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.Executors$RunnableAdapter.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.ThreadPoolExecutor.runWorker
  [31] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [32] java.lang.Thread.runWith
  [33] java.lang.Thread.run

--- 530000000 ns (1.23%), 53 samples
  [ 0] BacktraceBuilder::expand
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 500000000 ns (1.16%), 50 samples
  [ 0] JVM_FillInStackTrace
  [ 1] Java_java_lang_Throwable_fillInStackTrace
  [ 2] java.lang.Throwable.fillInStackTrace
  [ 3] java.lang.Throwable.fillInStackTrace
  [ 4] java.lang.Throwable.<init>
  [ 5] java.lang.Exception.<init>
  [ 6] java.lang.RuntimeException.<init>
  [ 7] com.panfutov.Service$BusinessException.<init>
  [ 8] com.panfutov.Service.doWithException
  [ 9] com.panfutov.Benchmark.exceptions
  [10] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [11] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [12] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [13] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [14] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [15] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [16] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [17] java.lang.reflect.Method.invoke
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.Executors$RunnableAdapter.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.ThreadPoolExecutor.runWorker
  [24] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [25] java.lang.Thread.runWith
  [26] java.lang.Thread.run

--- 490000000 ns (1.14%), 49 samples
  [ 0] TypeArrayKlass::allocate_common
  [ 1] BacktraceBuilder::expand
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 450000000 ns (1.04%), 45 samples
  [ 0] ObjArrayAllocator::initialize
  [ 1] MemAllocator::allocate
  [ 2] CollectedHeap::array_allocate
  [ 3] BacktraceBuilder::expand
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] java_lang_Throwable::fill_in_stack_trace
  [ 6] JVM_FillInStackTrace
  [ 7] Java_java_lang_Throwable_fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.fillInStackTrace
  [10] java.lang.Throwable.<init>
  [11] java.lang.Exception.<init>
  [12] java.lang.RuntimeException.<init>
  [13] com.panfutov.Service$BusinessException.<init>
  [14] com.panfutov.Service.doWithException
  [15] com.panfutov.Benchmark.exceptions
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [17] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [18] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [19] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [20] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [22] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.runWith
  [32] java.lang.Thread.run

--- 390000000 ns (0.90%), 39 samples
  [ 0] java.util.concurrent.atomic.AtomicLong.compareAndSet
  [ 1] java.util.Random.next
  [ 2] java.util.Random.nextBoolean
  [ 3] com.panfutov.Service.doWithException
  [ 4] com.panfutov.Benchmark.exceptions
  [ 5] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 6] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 7] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 8] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [ 9] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [10] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [11] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.runWith
  [21] java.lang.Thread.run

--- 380000000 ns (0.88%), 38 samples
  [ 0] CodeHeap::find_blob
  [ 1] JavaThread::pd_last_frame
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 370000000 ns (0.86%), 37 samples
  [ 0] CodeBlob::is_upcall_stub
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 340000000 ns (0.79%), 34 samples
  [ 0] frame::interpreter_frame_bcp
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 330000000 ns (0.76%), 33 samples
  [ 0] java.lang.Throwable.fillInStackTrace
  [ 1] java.lang.Throwable.fillInStackTrace
  [ 2] java.lang.Throwable.<init>
  [ 3] java.lang.Exception.<init>
  [ 4] java.lang.RuntimeException.<init>
  [ 5] com.panfutov.Service$BusinessException.<init>
  [ 6] com.panfutov.Service.doWithException
  [ 7] com.panfutov.Benchmark.exceptions
  [ 8] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 9] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [10] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [11] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [12] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [13] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [14] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.runWith
  [24] java.lang.Thread.run

--- 320000000 ns (0.74%), 32 samples
  [ 0] java.lang.Throwable.<init>
  [ 1] java.lang.Exception.<init>
  [ 2] java.lang.RuntimeException.<init>
  [ 3] com.panfutov.Service$BusinessException.<init>
  [ 4] com.panfutov.Service.doWithException
  [ 5] com.panfutov.Benchmark.exceptions
  [ 6] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 7] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 8] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 9] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [10] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [11] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [12] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [13] java.lang.reflect.Method.invoke
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.Executors$RunnableAdapter.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.ThreadPoolExecutor.runWorker
  [20] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [21] java.lang.Thread.runWith
  [22] java.lang.Thread.run

--- 300000000 ns (0.69%), 30 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<2383974ull, G1BarrierSet>, (AccessInternal::BarrierType)1, 2383974ull>::oop_access_barrier
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 300000000 ns (0.69%), 30 samples
  [ 0] Universe::should_fill_in_stack_trace
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 290000000 ns (0.67%), 29 samples
  [ 0] java_lang_Throwable::fill_in_stack_trace
  [ 1] JVM_FillInStackTrace
  [ 2] Java_java_lang_Throwable_fillInStackTrace
  [ 3] java.lang.Throwable.fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.<init>
  [ 6] java.lang.Exception.<init>
  [ 7] java.lang.RuntimeException.<init>
  [ 8] com.panfutov.Service$BusinessException.<init>
  [ 9] com.panfutov.Service.doWithException
  [10] com.panfutov.Benchmark.exceptions
  [11] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [13] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [14] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [15] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [16] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.runWith
  [27] java.lang.Thread.run

--- 290000000 ns (0.67%), 29 samples
  [ 0] Continuation::is_return_barrier_entry
  [ 1] frame::sender_for_interpreter_frame
  [ 2] frame::sender_raw
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 280000000 ns (0.65%), 28 samples
  [ 0] Continuation::is_continuation_enterSpecial
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 270000000 ns (0.63%), 27 samples
  [ 0] java.lang.Throwable.fillInStackTrace
  [ 1] java.lang.Throwable.<init>
  [ 2] java.lang.Exception.<init>
  [ 3] java.lang.RuntimeException.<init>
  [ 4] com.panfutov.Service$BusinessException.<init>
  [ 5] com.panfutov.Service.doWithException
  [ 6] com.panfutov.Benchmark.exceptions
  [ 7] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 8] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 9] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [10] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [11] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [12] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [13] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.runWith
  [23] java.lang.Thread.run

--- 250000000 ns (0.58%), 25 samples
  [ 0] CodeBlob::is_upcall_stub
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 240000000 ns (0.56%), 24 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<2383974ull, G1BarrierSet>, (AccessInternal::BarrierType)3, 2383974ull>::oop_access_barrier
  [ 1] Universe::should_fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 230000000 ns (0.53%), 23 samples
  [ 0] Method::bcp_from
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 220000000 ns (0.51%), 22 samples
  [ 0] MemAllocator::Allocation::check_out_of_memory
  [ 1] MemAllocator::allocate
  [ 2] CollectedHeap::array_allocate
  [ 3] BacktraceBuilder::expand
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] java_lang_Throwable::fill_in_stack_trace
  [ 6] JVM_FillInStackTrace
  [ 7] Java_java_lang_Throwable_fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.fillInStackTrace
  [10] java.lang.Throwable.<init>
  [11] java.lang.Exception.<init>
  [12] java.lang.RuntimeException.<init>
  [13] com.panfutov.Service$BusinessException.<init>
  [14] com.panfutov.Service.doWithException
  [15] com.panfutov.Benchmark.exceptions
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [17] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [18] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [19] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [20] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [22] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.runWith
  [32] java.lang.Thread.run

--- 210000000 ns (0.49%), 21 samples
  [ 0] CodeCache::find_blob
  [ 1] frame::sender_raw
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 200000000 ns (0.46%), 20 samples
  [ 0] _platform_bzero$VARIANT$Haswell
  [ 1] MemAllocator::allocate
  [ 2] CollectedHeap::array_allocate
  [ 3] BacktraceBuilder::expand
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] java_lang_Throwable::fill_in_stack_trace
  [ 6] JVM_FillInStackTrace
  [ 7] Java_java_lang_Throwable_fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.fillInStackTrace
  [10] java.lang.Throwable.<init>
  [11] java.lang.Exception.<init>
  [12] java.lang.RuntimeException.<init>
  [13] com.panfutov.Service$BusinessException.<init>
  [14] com.panfutov.Service.doWithException
  [15] com.panfutov.Benchmark.exceptions
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [17] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [18] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [19] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [20] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [22] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.runWith
  [32] java.lang.Thread.run

--- 190000000 ns (0.44%), 19 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<287270ull, G1BarrierSet>, (AccessInternal::BarrierType)1, 287270ull>::oop_access_barrier
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 190000000 ns (0.44%), 19 samples
  [ 0] CollectedHeap::array_allocate
  [ 1] BacktraceBuilder::expand
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 190000000 ns (0.44%), 19 samples
  [ 0] MemAllocator::Allocation::notify_allocation_jvmti_sampler
  [ 1] MemAllocator::allocate
  [ 2] CollectedHeap::array_allocate
  [ 3] BacktraceBuilder::expand
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] java_lang_Throwable::fill_in_stack_trace
  [ 6] JVM_FillInStackTrace
  [ 7] Java_java_lang_Throwable_fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.fillInStackTrace
  [10] java.lang.Throwable.<init>
  [11] java.lang.Exception.<init>
  [12] java.lang.RuntimeException.<init>
  [13] com.panfutov.Service$BusinessException.<init>
  [14] com.panfutov.Service.doWithException
  [15] com.panfutov.Benchmark.exceptions
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [17] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [18] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [19] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [20] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [22] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.runWith
  [32] java.lang.Thread.run

--- 180000000 ns (0.42%), 18 samples
  [ 0] JVM_FillInStackTrace
  [ 1] java.lang.Throwable.fillInStackTrace
  [ 2] java.lang.Throwable.fillInStackTrace
  [ 3] java.lang.Throwable.<init>
  [ 4] java.lang.Exception.<init>
  [ 5] java.lang.RuntimeException.<init>
  [ 6] com.panfutov.Service$BusinessException.<init>
  [ 7] com.panfutov.Service.doWithException
  [ 8] com.panfutov.Benchmark.exceptions
  [ 9] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [10] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [11] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [12] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [13] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [14] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [15] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.runWith
  [25] java.lang.Thread.run

--- 170000000 ns (0.39%), 17 samples
  [ 0] frame::sender_for_interpreter_frame
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 170000000 ns (0.39%), 17 samples
  [ 0] JavaThread::pd_last_frame
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 170000000 ns (0.39%), 17 samples
  [ 0] RegisterMap::RegisterMap
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 160000000 ns (0.37%), 16 samples
  [ 0] frame::interpreter_frame_method
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 160000000 ns (0.37%), 16 samples
  [ 0] frame::interpreter_frame_method
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 160000000 ns (0.37%), 16 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<2383974ull, G1BarrierSet>, (AccessInternal::BarrierType)3, 2383974ull>::oop_access_barrier
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 160000000 ns (0.37%), 16 samples
  [ 0] CodeHeap::find_blob
  [ 1] frame::sender_for_compiled_frame
  [ 2] frame::sender_raw
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 150000000 ns (0.35%), 15 samples
  [ 0] CodeCache::find_blob
  [ 1] JavaThread::pd_last_frame
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 150000000 ns (0.35%), 15 samples
  [ 0] ThreadShadow::clear_pending_exception
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 150000000 ns (0.35%), 15 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ull, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ull>::oop_access_barrier
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 140000000 ns (0.32%), 14 samples
  [ 0] Continuation::is_return_barrier_entry
  [ 1] frame::sender_raw
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 140000000 ns (0.32%), 14 samples
  [ 0] nmethod::metadata_at
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 130000000 ns (0.30%), 13 samples
  [ 0] Klass::check_array_allocation_length
  [ 1] TypeArrayKlass::allocate_common
  [ 2] BacktraceBuilder::expand
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 130000000 ns (0.30%), 13 samples
  [ 0] _os_semaphore_wait.cold.1
  [ 1] MemAllocator::allocate
  [ 2] CollectedHeap::array_allocate
  [ 3] BacktraceBuilder::expand
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] java_lang_Throwable::fill_in_stack_trace
  [ 6] JVM_FillInStackTrace
  [ 7] Java_java_lang_Throwable_fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.fillInStackTrace
  [10] java.lang.Throwable.<init>
  [11] java.lang.Exception.<init>
  [12] java.lang.RuntimeException.<init>
  [13] com.panfutov.Service$BusinessException.<init>
  [14] com.panfutov.Service.doWithException
  [15] com.panfutov.Benchmark.exceptions
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [17] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [18] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [19] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [20] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [22] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.runWith
  [32] java.lang.Thread.run

--- 130000000 ns (0.30%), 13 samples
  [ 0] frame::sender_raw
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 130000000 ns (0.30%), 13 samples
  [ 0] nmethod::metadata_addr_at
  [ 1] nmethod::metadata_at
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 130000000 ns (0.30%), 13 samples
  [ 0] Method::bci_from
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 120000000 ns (0.28%), 12 samples
  [ 0] Continuation::is_continuation_enterSpecial
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 120000000 ns (0.28%), 12 samples
  [ 0] frame::entry_frame_is_first
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 110000000 ns (0.25%), 11 samples
  [ 0] tlv_get_addr
  [ 1] CollectedHeap::array_allocate
  [ 2] BacktraceBuilder::expand
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 110000000 ns (0.25%), 11 samples
  [ 0] CodeBlob::is_upcall_stub
  [ 1] frame::sender_raw
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 110000000 ns (0.25%), 11 samples
  [ 0] com.panfutov.Service.doWithException
  [ 1] com.panfutov.Benchmark.exceptions
  [ 2] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 3] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 4] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 5] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [ 6] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [ 7] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 8] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.runWith
  [18] java.lang.Thread.run

--- 110000000 ns (0.25%), 11 samples
  [ 0] tlv_get_addr
  [ 1] JVM_FillInStackTrace
  [ 2] Java_java_lang_Throwable_fillInStackTrace
  [ 3] java.lang.Throwable.fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.<init>
  [ 6] java.lang.Exception.<init>
  [ 7] java.lang.RuntimeException.<init>
  [ 8] com.panfutov.Service$BusinessException.<init>
  [ 9] com.panfutov.Service.doWithException
  [10] com.panfutov.Benchmark.exceptions
  [11] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [13] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [14] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [15] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [16] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.runWith
  [27] java.lang.Thread.run

--- 110000000 ns (0.25%), 11 samples
  [ 0] Klass::check_array_allocation_length
  [ 1] ObjArrayKlass::allocate
  [ 2] BacktraceBuilder::expand
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 100000000 ns (0.23%), 10 samples
  [ 0] PreserveExceptionMark::PreserveExceptionMark
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 100000000 ns (0.23%), 10 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<286822ull, G1BarrierSet>, (AccessInternal::BarrierType)1, 286822ull>::oop_access_barrier
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 100000000 ns (0.23%), 10 samples
  [ 0] java.util.Random.next
  [ 1] java.util.Random.nextBoolean
  [ 2] com.panfutov.Service.doWithException
  [ 3] com.panfutov.Benchmark.exceptions
  [ 4] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 5] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 6] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 7] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [ 8] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [ 9] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [10] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.runWith
  [20] java.lang.Thread.run

--- 100000000 ns (0.23%), 10 samples
  [ 0] nmethod::metadata_at
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 100000000 ns (0.23%), 10 samples
  [ 0] __psynch_cvwait
  [ 1] PlatformMonitor::wait
  [ 2] Monitor::wait_without_safepoint_check
  [ 3] WatcherThread::sleep
  [ 4] WatcherThread::run
  [ 5] Thread::call_run
  [ 6] thread_native_entry
  [ 7] _pthread_start
  [ 8] thread_start

--- 100000000 ns (0.23%), 10 samples
  [ 0] ObjArrayAllocator::initialize
  [ 1] CollectedHeap::array_allocate
  [ 2] BacktraceBuilder::expand
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 90000000 ns (0.21%), 9 samples
  [ 0] frame::interpreter_frame_bcp
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 90000000 ns (0.21%), 9 samples
  [ 0] nmethod::metadata_addr_at
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 90000000 ns (0.21%), 9 samples
  [ 0] Method::bcp_from
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 90000000 ns (0.21%), 9 samples
  [ 0] Continuation::is_return_barrier_entry
  [ 1] frame::sender_for_compiled_frame
  [ 2] frame::sender_raw
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 90000000 ns (0.21%), 9 samples
  [ 0] TypeArrayKlass::allocate_common
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 80000000 ns (0.19%), 8 samples
  [ 0] PcDescContainer::find_pc_desc_internal
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 80000000 ns (0.19%), 8 samples
  [ 0] BacktraceBuilder::push
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 80000000 ns (0.19%), 8 samples
  [ 0] MemAllocator::Allocation::check_out_of_memory
  [ 1] CollectedHeap::array_allocate
  [ 2] BacktraceBuilder::expand
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 70000000 ns (0.16%), 7 samples
  [ 0] java.util.Random.next
  [ 1] java.util.Random.nextBoolean
  [ 2] com.panfutov.Service.doWithException
  [ 3] com.panfutov.Benchmark.exceptions
  [ 4] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 5] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 6] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 7] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [ 8] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [ 9] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [10] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.runWith
  [20] java.lang.Thread.run

--- 70000000 ns (0.16%), 7 samples
  [ 0] oopFactory::new_objectArray
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 60000000 ns (0.14%), 6 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ull, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ull>::oop_access_barrier
  [ 1] Universe::should_fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 60000000 ns (0.14%), 6 samples
  [ 0] CodeCache::find_blob
  [ 1] frame::sender_for_compiled_frame
  [ 2] frame::sender_raw
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 60000000 ns (0.14%), 6 samples
  [ 0] MemAllocator::Allocation::notify_allocation
  [ 1] CollectedHeap::array_allocate
  [ 2] BacktraceBuilder::expand
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 60000000 ns (0.14%), 6 samples
  [ 0] java.lang.Throwable.fillInStackTrace
  [ 1] java.lang.Throwable.<init>
  [ 2] java.lang.Exception.<init>
  [ 3] java.lang.RuntimeException.<init>
  [ 4] com.panfutov.Service$BusinessException.<init>
  [ 5] com.panfutov.Service.doWithException
  [ 6] com.panfutov.Benchmark.exceptions
  [ 7] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 8] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 9] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [10] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [11] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [12] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [13] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.runWith
  [23] java.lang.Thread.run

--- 50000000 ns (0.12%), 5 samples
  [ 0] oopDesc::release_obj_field_put
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 50000000 ns (0.12%), 5 samples
  [ 0] semaphore_wait_trap
  [ 1] WorkerThread::run
  [ 2] Thread::call_run
  [ 3] thread_native_entry
  [ 4] _pthread_start
  [ 5] thread_start

--- 50000000 ns (0.12%), 5 samples
  [ 0] frame::entry_frame_is_first
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 50000000 ns (0.12%), 5 samples
  [ 0] Klass::check_array_allocation_length
  [ 1] BacktraceBuilder::expand
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 50000000 ns (0.12%), 5 samples
  [ 0] nmethod::scopes_pcs_begin
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 50000000 ns (0.12%), 5 samples
  [ 0] semaphore_wait_trap
  [ 1] WorkerThread::run
  [ 2] Thread::call_run
  [ 3] thread_native_entry
  [ 4] _pthread_start
  [ 5] thread_start

--- 40000000 ns (0.09%), 4 samples
  [ 0] ObjArrayKlass::allocate
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] MemAllocator::allocate
  [ 1] BacktraceBuilder::expand
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] java.lang.Throwable.fillInStackTrace
  [ 1] java.lang.Throwable.<init>
  [ 2] java.lang.Exception.<init>
  [ 3] java.lang.RuntimeException.<init>
  [ 4] com.panfutov.Service$BusinessException.<init>
  [ 5] com.panfutov.Service.doWithException
  [ 6] com.panfutov.Benchmark.exceptions
  [ 7] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 8] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 9] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [10] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [11] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [12] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [13] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.runWith
  [23] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] oopFactory::new_symbolArray
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] methodHandle::~methodHandle
  [ 1] Java_java_lang_Throwable_fillInStackTrace
  [ 2] java.lang.Throwable.fillInStackTrace
  [ 3] java.lang.Throwable.fillInStackTrace
  [ 4] java.lang.Throwable.<init>
  [ 5] java.lang.Exception.<init>
  [ 6] java.lang.RuntimeException.<init>
  [ 7] com.panfutov.Service$BusinessException.<init>
  [ 8] com.panfutov.Service.doWithException
  [ 9] com.panfutov.Benchmark.exceptions
  [10] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [11] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [12] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [13] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [14] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [15] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [16] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [17] java.lang.reflect.Method.invoke
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.Executors$RunnableAdapter.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.ThreadPoolExecutor.runWorker
  [24] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [25] java.lang.Thread.runWith
  [26] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] oopFactory::new_intArray
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] __psynch_cvwait
  [ 1] PlatformMonitor::wait
  [ 2] Monitor::wait_without_safepoint_check
  [ 3] MonitorDeflationThread::monitor_deflation_thread_entry
  [ 4] JavaThread::thread_main_inner
  [ 5] Thread::call_run
  [ 6] thread_native_entry
  [ 7] _pthread_start
  [ 8] thread_start

--- 40000000 ns (0.09%), 4 samples
  [ 0] com.panfutov.Service$BusinessException.<init>
  [ 1] com.panfutov.Service.doWithException
  [ 2] com.panfutov.Benchmark.exceptions
  [ 3] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 4] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 5] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 6] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [ 7] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [ 8] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 9] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [10] java.lang.reflect.Method.invoke
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.Executors$RunnableAdapter.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.ThreadPoolExecutor.runWorker
  [17] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [18] java.lang.Thread.runWith
  [19] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] collapse
  [ 1] java.lang.Throwable.fillInStackTrace
  [ 2] java.lang.Throwable.fillInStackTrace
  [ 3] java.lang.Throwable.<init>
  [ 4] java.lang.Exception.<init>
  [ 5] java.lang.RuntimeException.<init>
  [ 6] com.panfutov.Service$BusinessException.<init>
  [ 7] com.panfutov.Service.doWithException
  [ 8] com.panfutov.Benchmark.exceptions
  [ 9] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [10] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [11] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [12] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [13] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [14] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [15] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.runWith
  [25] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] java.lang.Throwable.fillInStackTrace
  [ 1] java.lang.Throwable.fillInStackTrace
  [ 2] java.lang.Throwable.<init>
  [ 3] java.lang.Exception.<init>
  [ 4] java.lang.RuntimeException.<init>
  [ 5] com.panfutov.Service$BusinessException.<init>
  [ 6] com.panfutov.Service.doWithException
  [ 7] com.panfutov.Benchmark.exceptions
  [ 8] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 9] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [10] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [11] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [12] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [13] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [14] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.runWith
  [24] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] nmethod::scopes_pcs_begin
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] java.lang.Throwable.getMessage
  [ 1] com.panfutov.Benchmark.exceptions
  [ 2] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 3] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 4] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 5] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [ 6] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [ 7] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 8] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.runWith
  [18] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] MemAllocator::Allocation::notify_allocation_jvmti_sampler
  [ 1] CollectedHeap::array_allocate
  [ 2] BacktraceBuilder::expand
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] JavaThread::pd_last_frame
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 1] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 2] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 3] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [ 4] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [ 5] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 6] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 7] java.lang.reflect.Method.invoke
  [ 8] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.Executors$RunnableAdapter.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.ThreadPoolExecutor.runWorker
  [14] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [15] java.lang.Thread.runWith
  [16] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] java.lang.Throwable.<init>
  [ 1] java.lang.Exception.<init>
  [ 2] java.lang.RuntimeException.<init>
  [ 3] com.panfutov.Service$BusinessException.<init>
  [ 4] com.panfutov.Service.doWithException
  [ 5] com.panfutov.Benchmark.exceptions
  [ 6] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 7] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 8] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 9] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [10] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [11] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [12] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [13] java.lang.reflect.Method.invoke
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.Executors$RunnableAdapter.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.ThreadPoolExecutor.runWorker
  [20] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [21] java.lang.Thread.runWith
  [22] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] Java_java_lang_Throwable_fillInStackTrace
  [ 1] java.lang.Throwable.fillInStackTrace
  [ 2] java.lang.Throwable.fillInStackTrace
  [ 3] java.lang.Throwable.<init>
  [ 4] java.lang.Exception.<init>
  [ 5] java.lang.RuntimeException.<init>
  [ 6] com.panfutov.Service$BusinessException.<init>
  [ 7] com.panfutov.Service.doWithException
  [ 8] com.panfutov.Benchmark.exceptions
  [ 9] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [10] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [11] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [12] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [13] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [14] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [15] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.runWith
  [25] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] frame::sender_for_compiled_frame
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] PcDescCache::find_pc_desc
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] com.panfutov.Service.doWithException
  [ 1] com.panfutov.Benchmark.exceptions
  [ 2] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 3] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 4] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 5] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [ 6] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [ 7] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 8] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.runWith
  [18] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] oopFactory::new_intArray
  [ 1] BacktraceBuilder::expand
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] PcDescContainer::find_pc_desc_internal
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] nmethod::scopes_pcs_end
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] java.lang.Throwable.fillInStackTrace
  [ 1] [unknown_Java]

--- 20000000 ns (0.05%), 2 samples
  [ 0] oopDesc::release_obj_field_put
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] PreserveExceptionMark::~PreserveExceptionMark
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] JavaFrameAnchor::make_walkable
  [ 1] Java_java_lang_Throwable_fillInStackTrace
  [ 2] java.lang.Throwable.fillInStackTrace
  [ 3] java.lang.Throwable.fillInStackTrace
  [ 4] java.lang.Throwable.<init>
  [ 5] java.lang.Exception.<init>
  [ 6] java.lang.RuntimeException.<init>
  [ 7] com.panfutov.Service$BusinessException.<init>
  [ 8] com.panfutov.Service.doWithException
  [ 9] com.panfutov.Benchmark.exceptions
  [10] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [11] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [12] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [13] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [14] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [15] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [16] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [17] java.lang.reflect.Method.invoke
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.Executors$RunnableAdapter.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.ThreadPoolExecutor.runWorker
  [24] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [25] java.lang.Thread.runWith
  [26] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] JavaFrameAnchor::make_walkable
  [ 1] JVM_FillInStackTrace
  [ 2] Java_java_lang_Throwable_fillInStackTrace
  [ 3] java.lang.Throwable.fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.<init>
  [ 6] java.lang.Exception.<init>
  [ 7] java.lang.RuntimeException.<init>
  [ 8] com.panfutov.Service$BusinessException.<init>
  [ 9] com.panfutov.Service.doWithException
  [10] com.panfutov.Benchmark.exceptions
  [11] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [13] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [14] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [15] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [16] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.runWith
  [27] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] CodeHeap::find_blob
  [ 1] frame::sender_raw
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] semaphore_wait_trap
  [ 1] WorkerThreads::run_task
  [ 2] G1RemSet::merge_heap_roots
  [ 3] G1YoungCollector::evacuate_initial_collection_set
  [ 4] G1YoungCollector::collect
  [ 5] G1CollectedHeap::do_collection_pause_at_safepoint_helper
  [ 6] G1CollectedHeap::do_collection_pause_at_safepoint
  [ 7] VM_G1CollectForAllocation::doit
  [ 8] VM_Operation::evaluate
  [ 9] VMThread::evaluate_operation
  [10] VMThread::inner_execute
  [11] VMThread::run
  [12] Thread::call_run
  [13] thread_native_entry
  [14] _pthread_start
  [15] thread_start

--- 20000000 ns (0.05%), 2 samples
  [ 0] __psynch_mutexwait
  [ 1] _pthread_mutex_firstfit_lock_slow
  [ 2] Mutex::lock_without_safepoint_check
  [ 3] TaskTerminator::offer_termination
  [ 4] G1ParEvacuateFollowersClosure::do_void
  [ 5] G1EvacuateRegionsBaseTask::evacuate_live_objects
  [ 6] G1EvacuateRegionsBaseTask::work
  [ 7] WorkerThread::run
  [ 8] Thread::call_run
  [ 9] thread_native_entry
  [10] _pthread_start
  [11] thread_start

--- 20000000 ns (0.05%), 2 samples
  [ 0] nmethod::scopes_pcs_end
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] JavaFrameAnchor::make_walkable
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] java.lang.Throwable.<init>
  [ 1] java.lang.Exception.<init>
  [ 2] java.lang.RuntimeException.<init>
  [ 3] com.panfutov.Service$BusinessException.<init>
  [ 4] com.panfutov.Service.doWithException
  [ 5] com.panfutov.Benchmark.exceptions
  [ 6] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 7] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 8] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 9] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [10] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [11] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [12] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [13] java.lang.reflect.Method.invoke
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.Executors$RunnableAdapter.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.ThreadPoolExecutor.runWorker
  [20] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [21] java.lang.Thread.runWith
  [22] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] ZThread::~ZThread
  [ 1] MemAllocator::allocate
  [ 2] CollectedHeap::array_allocate
  [ 3] BacktraceBuilder::expand
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] java_lang_Throwable::fill_in_stack_trace
  [ 6] JVM_FillInStackTrace
  [ 7] Java_java_lang_Throwable_fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.fillInStackTrace
  [10] java.lang.Throwable.<init>
  [11] java.lang.Exception.<init>
  [12] java.lang.RuntimeException.<init>
  [13] com.panfutov.Service$BusinessException.<init>
  [14] com.panfutov.Service.doWithException
  [15] com.panfutov.Benchmark.exceptions
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [17] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [18] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [19] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [20] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [22] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.runWith
  [32] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] CodeHeap::find_blob
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] java.lang.Throwable.<init>
  [ 1] java.lang.Exception.<init>
  [ 2] java.lang.RuntimeException.<init>
  [ 3] com.panfutov.Service$BusinessException.<init>
  [ 4] com.panfutov.Service.doWithException
  [ 5] com.panfutov.Benchmark.exceptions
  [ 6] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 7] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 8] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 9] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [10] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [11] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [12] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [13] java.lang.reflect.Method.invoke
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.Executors$RunnableAdapter.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.ThreadPoolExecutor.runWorker
  [20] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [21] java.lang.Thread.runWith
  [22] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] CollectedHeap::array_allocate
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] PreserveExceptionMark::~PreserveExceptionMark
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] HeapRegionType::get_trace_type
  [ 1] HeapRegion::set_eden
  [ 2] G1CollectedHeap::new_mutator_alloc_region
  [ 3] G1AllocRegion::new_alloc_region_and_allocate
  [ 4] G1CollectedHeap::attempt_allocation_slow
  [ 5] G1CollectedHeap::attempt_allocation
  [ 6] MemAllocator::mem_allocate_inside_tlab_slow
  [ 7] MemAllocator::allocate
  [ 8] CollectedHeap::array_allocate
  [ 9] BacktraceBuilder::expand
  [10] java_lang_Throwable::fill_in_stack_trace
  [11] java_lang_Throwable::fill_in_stack_trace
  [12] JVM_FillInStackTrace
  [13] Java_java_lang_Throwable_fillInStackTrace
  [14] java.lang.Throwable.fillInStackTrace
  [15] java.lang.Throwable.fillInStackTrace
  [16] java.lang.Throwable.<init>
  [17] java.lang.Exception.<init>
  [18] java.lang.RuntimeException.<init>
  [19] com.panfutov.Service$BusinessException.<init>
  [20] com.panfutov.Service.doWithException
  [21] com.panfutov.Benchmark.exceptions
  [22] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [23] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [24] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [25] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [26] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [27] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [28] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [29] java.lang.reflect.Method.invoke
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.Executors$RunnableAdapter.call
  [34] java.util.concurrent.FutureTask.run
  [35] java.util.concurrent.ThreadPoolExecutor.runWorker
  [36] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [37] java.lang.Thread.runWith
  [38] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] com.panfutov.Service.doWithException
  [ 1] com.panfutov.Benchmark.exceptions
  [ 2] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 3] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 4] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 5] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [ 6] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [ 7] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 8] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.runWith
  [18] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] __psynch_cvwait
  [ 1] PlatformMonitor::wait
  [ 2] Monitor::wait_without_safepoint_check
  [ 3] SuspendibleThreadSet::join
  [ 4] G1MonotonicArenaFreeMemoryTask::execute
  [ 5] G1ServiceThread::run_task
  [ 6] G1ServiceThread::run_service
  [ 7] ConcurrentGCThread::run
  [ 8] Thread::call_run
  [ 9] thread_native_entry
  [10] _pthread_start
  [11] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] Universe::should_fill_in_stack_trace
  [ 1] JVM_FillInStackTrace
  [ 2] Java_java_lang_Throwable_fillInStackTrace
  [ 3] java.lang.Throwable.fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.<init>
  [ 6] java.lang.Exception.<init>
  [ 7] java.lang.RuntimeException.<init>
  [ 8] com.panfutov.Service$BusinessException.<init>
  [ 9] com.panfutov.Service.doWithException
  [10] com.panfutov.Benchmark.exceptions
  [11] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [13] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [14] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [15] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [16] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.runWith
  [27] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<287270ull, G1BarrierSet>, (AccessInternal::BarrierType)1, 287270ull>::oop_access_barrier
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] ThreadShadow::clear_pending_exception
  [ 1] JVM_FillInStackTrace
  [ 2] Java_java_lang_Throwable_fillInStackTrace
  [ 3] java.lang.Throwable.fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.<init>
  [ 6] java.lang.Exception.<init>
  [ 7] java.lang.RuntimeException.<init>
  [ 8] com.panfutov.Service$BusinessException.<init>
  [ 9] com.panfutov.Service.doWithException
  [10] com.panfutov.Benchmark.exceptions
  [11] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [13] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [14] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [15] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [16] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.runWith
  [27] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] GenericWaitBarrier::disarm
  [ 1] SafepointSynchronize::disarm_safepoint
  [ 2] SafepointSynchronize::end
  [ 3] VMThread::inner_execute
  [ 4] VMThread::run
  [ 5] Thread::call_run
  [ 6] thread_native_entry
  [ 7] _pthread_start
  [ 8] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ull, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ull>::oop_access_barrier
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] compare_region_idx
  [ 1] G1CollectionSet::finalize_old_part
  [ 2] G1YoungCollector::pre_evacuate_collection_set
  [ 3] G1YoungCollector::collect
  [ 4] G1CollectedHeap::do_collection_pause_at_safepoint_helper
  [ 5] G1CollectedHeap::do_collection_pause_at_safepoint
  [ 6] VM_G1CollectForAllocation::doit
  [ 7] VM_Operation::evaluate
  [ 8] VMThread::evaluate_operation
  [ 9] VMThread::inner_execute
  [10] VMThread::run
  [11] Thread::call_run
  [12] thread_native_entry
  [13] _pthread_start
  [14] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] __gettimeofday
  [ 1] PlatformMonitor::wait
  [ 2] Monitor::wait_without_safepoint_check
  [ 3] WatcherThread::sleep
  [ 4] WatcherThread::run
  [ 5] Thread::call_run
  [ 6] thread_native_entry
  [ 7] _pthread_start
  [ 8] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] void OopMapDo<OopClosure, DerivedOopClosure, SkipNullValue>::iterate_oops_do<RegisterMap>
  [ 1] ImmutableOopMap::oops_do
  [ 2] frame::oops_code_blob_do
  [ 3] JavaThread::oops_do_frames
  [ 4] Thread::oops_do
  [ 5] Threads::possibly_parallel_threads_do
  [ 6] Threads::possibly_parallel_oops_do
  [ 7] G1RootProcessor::process_java_roots
  [ 8] G1RootProcessor::evacuate_roots
  [ 9] G1EvacuateRegionsTask::scan_roots
  [10] G1EvacuateRegionsBaseTask::work
  [11] WorkerThread::run
  [12] Thread::call_run
  [13] thread_native_entry
  [14] _pthread_start
  [15] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] PcDescCache::find_pc_desc
  [ 1] PcDescContainer::find_pc_desc_internal
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] G1CollectedHeap::unsafe_max_tlab_alloc
  [ 1] MemAllocator::allocate
  [ 2] CollectedHeap::array_allocate
  [ 3] BacktraceBuilder::expand
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] java_lang_Throwable::fill_in_stack_trace
  [ 6] JVM_FillInStackTrace
  [ 7] Java_java_lang_Throwable_fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.fillInStackTrace
  [10] java.lang.Throwable.<init>
  [11] java.lang.Exception.<init>
  [12] java.lang.RuntimeException.<init>
  [13] com.panfutov.Service$BusinessException.<init>
  [14] com.panfutov.Service.doWithException
  [15] com.panfutov.Benchmark.exceptions
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [17] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [18] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [19] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [20] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [22] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.runWith
  [32] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] ConstantPool::name_and_type_ref_index_at
  [ 1] Bytecode_member_ref::signature
  [ 2] frame::oops_interpreted_do
  [ 3] JavaThread::oops_do_frames
  [ 4] Thread::oops_do
  [ 5] Threads::possibly_parallel_threads_do
  [ 6] Threads::possibly_parallel_oops_do
  [ 7] G1RootProcessor::process_java_roots
  [ 8] G1RootProcessor::evacuate_roots
  [ 9] G1EvacuateRegionsTask::scan_roots
  [10] G1EvacuateRegionsBaseTask::work
  [11] WorkerThread::run
  [12] Thread::call_run
  [13] thread_native_entry
  [14] _pthread_start
  [15] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] os::javaTimeNanos
  [ 1] os::elapsed_counter
  [ 2] CompositeElapsedCounterSource::now
  [ 3] G1EvacPhaseWithTrimTimeTracker::~G1EvacPhaseWithTrimTimeTracker
  [ 4] G1ScanCollectionSetRegionClosure::do_heap_region
  [ 5] G1CollectedHeap::par_iterate_regions_array
  [ 6] G1RemSet::scan_collection_set_regions
  [ 7] G1EvacuateRegionsBaseTask::work
  [ 8] WorkerThread::run
  [ 9] Thread::call_run
  [10] thread_native_entry
  [11] _pthread_start
  [12] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] oopFactory::new_objectArray
  [ 1] BacktraceBuilder::expand
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] Java_java_lang_Throwable_fillInStackTrace
  [ 1] java.lang.Throwable.fillInStackTrace
  [ 2] java.lang.Throwable.fillInStackTrace
  [ 3] java.lang.Throwable.<init>
  [ 4] java.lang.Exception.<init>
  [ 5] java.lang.RuntimeException.<init>
  [ 6] com.panfutov.Service$BusinessException.<init>
  [ 7] com.panfutov.Service.doWithException
  [ 8] com.panfutov.Benchmark.exceptions
  [ 9] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [10] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [11] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [12] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [13] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [14] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [15] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.runWith
  [25] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] SpinPause
  [ 1] G1ParEvacuateFollowersClosure::do_void
  [ 2] G1EvacuateRegionsBaseTask::evacuate_live_objects
  [ 3] G1EvacuateRegionsBaseTask::work
  [ 4] WorkerThread::run
  [ 5] Thread::call_run
  [ 6] thread_native_entry
  [ 7] _pthread_start
  [ 8] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 1] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 2] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 3] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [ 4] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [ 5] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 6] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 7] java.lang.reflect.Method.invoke
  [ 8] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.Executors$RunnableAdapter.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.ThreadPoolExecutor.runWorker
  [14] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [15] java.lang.Thread.runWith
  [16] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] CompositeElapsedCounterSource::seconds
  [ 1] G1GCParPhaseTimesTracker::~G1GCParPhaseTimesTracker
  [ 2] G1MergeHeapRootsTask::work
  [ 3] WorkerThread::run
  [ 4] Thread::call_run
  [ 5] thread_native_entry
  [ 6] _pthread_start
  [ 7] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] G1RemSetScanState::prepare
  [ 1] G1YoungCollector::pre_evacuate_collection_set
  [ 2] G1YoungCollector::collect
  [ 3] G1CollectedHeap::do_collection_pause_at_safepoint_helper
  [ 4] G1CollectedHeap::do_collection_pause_at_safepoint
  [ 5] VM_G1CollectForAllocation::doit
  [ 6] VM_Operation::evaluate
  [ 7] VMThread::evaluate_operation
  [ 8] VMThread::inner_execute
  [ 9] VMThread::run
  [10] Thread::call_run
  [11] thread_native_entry
  [12] _pthread_start
  [13] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] nanov2_find_block_and_allocate
  [ 1] nanov2_allocate_outlined
  [ 2] nanov2_malloc
  [ 3] os::malloc
  [ 4] AllocateHeap
  [ 5] G1RemSet::create_cleanup_after_scan_heap_roots_task
  [ 6] G1PostEvacuateCollectionSetCleanupTask1::G1PostEvacuateCollectionSetCleanupTask1
  [ 7] G1YoungCollector::post_evacuate_collection_set
  [ 8] G1YoungCollector::collect
  [ 9] G1CollectedHeap::do_collection_pause_at_safepoint_helper
  [10] G1CollectedHeap::do_collection_pause_at_safepoint
  [11] VM_G1CollectForAllocation::doit
  [12] VM_Operation::evaluate
  [13] VMThread::evaluate_operation
  [14] VMThread::inner_execute
  [15] VMThread::run
  [16] Thread::call_run
  [17] thread_native_entry
  [18] _pthread_start
  [19] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] __psynch_mutexwait
  [ 1] _pthread_mutex_firstfit_lock_slow
  [ 2] Mutex::lock_without_safepoint_check
  [ 3] TaskTerminator::offer_termination
  [ 4] G1ParEvacuateFollowersClosure::do_void
  [ 5] G1EvacuateRegionsBaseTask::evacuate_live_objects
  [ 6] G1EvacuateRegionsBaseTask::work
  [ 7] WorkerThread::run
  [ 8] Thread::call_run
  [ 9] thread_native_entry
  [10] _pthread_start
  [11] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] HeapRegionManager::par_iterate
  [ 1] G1PrepareEvacuationTask::work
  [ 2] WorkerThread::run
  [ 3] Thread::call_run
  [ 4] thread_native_entry
  [ 5] _pthread_start
  [ 6] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] semaphore_wait_trap
  [ 1] WorkerThread::run
  [ 2] Thread::call_run
  [ 3] thread_native_entry
  [ 4] _pthread_start
  [ 5] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.lang.reflect.Method.invoke
  [ 1] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 2] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 3] java.util.concurrent.FutureTask.run
  [ 4] java.util.concurrent.Executors$RunnableAdapter.call
  [ 5] java.util.concurrent.FutureTask.run
  [ 6] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 7] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 8] java.lang.Thread.runWith
  [ 9] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] SpinPause
  [ 1] G1ParEvacuateFollowersClosure::do_void
  [ 2] G1EvacuateRegionsBaseTask::evacuate_live_objects
  [ 3] G1EvacuateRegionsBaseTask::work
  [ 4] WorkerThread::run
  [ 5] Thread::call_run
  [ 6] thread_native_entry
  [ 7] _pthread_start
  [ 8] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] void G1ParCopyClosure<(G1Barrier)0, false>::do_oop_work<oopDesc*>
  [ 1] G1RootProcessor::process_vm_roots
  [ 2] G1RootProcessor::evacuate_roots
  [ 3] G1EvacuateRegionsTask::scan_roots
  [ 4] G1EvacuateRegionsBaseTask::work
  [ 5] WorkerThread::run
  [ 6] Thread::call_run
  [ 7] thread_native_entry
  [ 8] _pthread_start
  [ 9] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] CodeCache::find_blob
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] oopFactory::new_shortArray
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] __psynch_cvwait
  [ 1] PlatformMonitor::wait
  [ 2] Monitor::wait_without_safepoint_check
  [ 3] VMThread::wait_for_operation
  [ 4] VMThread::run
  [ 5] Thread::call_run
  [ 6] thread_native_entry
  [ 7] _pthread_start
  [ 8] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] semaphore_wait_trap
  [ 1] WorkerThreads::run_task
  [ 2] G1YoungCollector::pre_evacuate_collection_set
  [ 3] G1YoungCollector::collect
  [ 4] G1CollectedHeap::do_collection_pause_at_safepoint_helper
  [ 5] G1CollectedHeap::do_collection_pause_at_safepoint
  [ 6] VM_G1CollectForAllocation::doit
  [ 7] VM_Operation::evaluate
  [ 8] VMThread::evaluate_operation
  [ 9] VMThread::inner_execute
  [10] VMThread::run
  [11] Thread::call_run
  [12] thread_native_entry
  [13] _pthread_start
  [14] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] Mutex::owned_by_self
  [ 1] HeapRegionManager::allocate_free_region
  [ 2] G1CollectedHeap::new_mutator_alloc_region
  [ 3] G1AllocRegion::new_alloc_region_and_allocate
  [ 4] G1CollectedHeap::attempt_allocation_slow
  [ 5] G1CollectedHeap::attempt_allocation
  [ 6] MemAllocator::mem_allocate_inside_tlab_slow
  [ 7] MemAllocator::allocate
  [ 8] CollectedHeap::array_allocate
  [ 9] BacktraceBuilder::expand
  [10] java_lang_Throwable::fill_in_stack_trace
  [11] java_lang_Throwable::fill_in_stack_trace
  [12] JVM_FillInStackTrace
  [13] Java_java_lang_Throwable_fillInStackTrace
  [14] java.lang.Throwable.fillInStackTrace
  [15] java.lang.Throwable.fillInStackTrace
  [16] java.lang.Throwable.<init>
  [17] java.lang.Exception.<init>
  [18] java.lang.RuntimeException.<init>
  [19] com.panfutov.Service$BusinessException.<init>
  [20] com.panfutov.Service.doWithException
  [21] com.panfutov.Benchmark.exceptions
  [22] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [23] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [24] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [25] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [26] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [27] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [28] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [29] java.lang.reflect.Method.invoke
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.Executors$RunnableAdapter.call
  [34] java.util.concurrent.FutureTask.run
  [35] java.util.concurrent.ThreadPoolExecutor.runWorker
  [36] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [37] java.lang.Thread.runWith
  [38] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] __psynch_cvwait
  [ 1] PlatformMonitor::wait
  [ 2] Monitor::wait_without_safepoint_check
  [ 3] G1ServiceThread::wait_for_task
  [ 4] G1ServiceThread::run_service
  [ 5] ConcurrentGCThread::run
  [ 6] Thread::call_run
  [ 7] thread_native_entry
  [ 8] _pthread_start
  [ 9] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] oopFactory::new_shortArray
  [ 1] BacktraceBuilder::expand
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] java_lang_Throwable::fill_in_stack_trace
  [ 1] JVM_FillInStackTrace
  [ 2] Java_java_lang_Throwable_fillInStackTrace
  [ 3] java.lang.Throwable.fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.<init>
  [ 6] java.lang.Exception.<init>
  [ 7] java.lang.RuntimeException.<init>
  [ 8] com.panfutov.Service$BusinessException.<init>
  [ 9] com.panfutov.Service.doWithException
  [10] com.panfutov.Benchmark.exceptions
  [11] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [13] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [14] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [15] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [16] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.runWith
  [27] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] org.openjdk.jmh.infra.Blackhole.consume
  [ 1] com.panfutov.Benchmark.exceptions
  [ 2] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 3] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 4] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 5] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [ 6] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [ 7] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 8] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.runWith
  [18] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] os::javaTimeNanos
  [ 1] WatcherThread::sleep
  [ 2] WatcherThread::run
  [ 3] Thread::call_run
  [ 4] thread_native_entry
  [ 5] _pthread_start
  [ 6] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] G1CardTable::g1_mark_as_young
  [ 1] MemAllocator::mem_allocate_inside_tlab_slow
  [ 2] MemAllocator::allocate
  [ 3] CollectedHeap::array_allocate
  [ 4] BacktraceBuilder::expand
  [ 5] java_lang_Throwable::fill_in_stack_trace
  [ 6] java_lang_Throwable::fill_in_stack_trace
  [ 7] JVM_FillInStackTrace
  [ 8] Java_java_lang_Throwable_fillInStackTrace
  [ 9] java.lang.Throwable.fillInStackTrace
  [10] java.lang.Throwable.fillInStackTrace
  [11] java.lang.Throwable.<init>
  [12] java.lang.Exception.<init>
  [13] java.lang.RuntimeException.<init>
  [14] com.panfutov.Service$BusinessException.<init>
  [15] com.panfutov.Service.doWithException
  [16] com.panfutov.Benchmark.exceptions
  [17] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [18] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [19] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [20] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [21] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [22] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [23] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [24] java.lang.reflect.Method.invoke
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.Executors$RunnableAdapter.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.ThreadPoolExecutor.runWorker
  [31] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [32] java.lang.Thread.runWith
  [33] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] com.panfutov.Service$BusinessException.<init>
  [ 1] [unknown_Java]

--- 10000000 ns (0.02%), 1 sample
  [ 0] G1MonitoringSupport::recalculate_sizes
  [ 1] G1MonitoringSupport::update_eden_size
  [ 2] G1AllocRegion::retire_internal
  [ 3] MutatorAllocRegion::retire
  [ 4] G1CollectedHeap::attempt_allocation_slow
  [ 5] G1CollectedHeap::attempt_allocation
  [ 6] MemAllocator::mem_allocate_inside_tlab_slow
  [ 7] MemAllocator::allocate
  [ 8] CollectedHeap::array_allocate
  [ 9] BacktraceBuilder::expand
  [10] java_lang_Throwable::fill_in_stack_trace
  [11] java_lang_Throwable::fill_in_stack_trace
  [12] JVM_FillInStackTrace
  [13] Java_java_lang_Throwable_fillInStackTrace
  [14] java.lang.Throwable.fillInStackTrace
  [15] java.lang.Throwable.fillInStackTrace
  [16] java.lang.Throwable.<init>
  [17] java.lang.Exception.<init>
  [18] java.lang.RuntimeException.<init>
  [19] com.panfutov.Service$BusinessException.<init>
  [20] com.panfutov.Service.doWithException
  [21] com.panfutov.Benchmark.exceptions
  [22] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [23] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [24] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [25] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [26] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [27] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [28] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [29] java.lang.reflect.Method.invoke
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.Executors$RunnableAdapter.call
  [34] java.util.concurrent.FutureTask.run
  [35] java.util.concurrent.ThreadPoolExecutor.runWorker
  [36] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [37] java.lang.Thread.runWith
  [38] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] PreserveExceptionMark::~PreserveExceptionMark
  [ 1] JVM_FillInStackTrace
  [ 2] Java_java_lang_Throwable_fillInStackTrace
  [ 3] java.lang.Throwable.fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.<init>
  [ 6] java.lang.Exception.<init>
  [ 7] java.lang.RuntimeException.<init>
  [ 8] com.panfutov.Service$BusinessException.<init>
  [ 9] com.panfutov.Service.doWithException
  [10] com.panfutov.Benchmark.exceptions
  [11] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [13] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [14] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [15] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [16] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.runWith
  [27] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<286822ull, G1BarrierSet>, (AccessInternal::BarrierType)1, 286822ull>::oop_access_barrier
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] Thread::claim_par_threads_do
  [ 1] Threads::possibly_parallel_threads_do
  [ 2] Threads::possibly_parallel_oops_do
  [ 3] G1RootProcessor::process_java_roots
  [ 4] G1RootProcessor::evacuate_roots
  [ 5] G1EvacuateRegionsTask::scan_roots
  [ 6] G1EvacuateRegionsBaseTask::work
  [ 7] WorkerThread::run
  [ 8] Thread::call_run
  [ 9] thread_native_entry
  [10] _pthread_start
  [11] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] com.panfutov.Benchmark.exceptions
  [ 1] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 2] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 3] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 4] java.lang.invoke.LambdaForm$MH.0x000000012702d800.invoke
  [ 5] java.lang.invoke.LambdaForm$MH.0x0000000127002800.invokeExact_MT
  [ 6] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 7] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 8] java.lang.reflect.Method.invoke
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] java.util.concurrent.FutureTask.run
  [12] java.util.concurrent.Executors$RunnableAdapter.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.ThreadPoolExecutor.runWorker
  [15] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [16] java.lang.Thread.runWith
  [17] java.lang.Thread.run

          ns  percent  samples  top
  ----------  -------  -------  ---
  9470000000   21.94%      947  java_lang_Throwable::fill_in_stack_trace
  3800000000    8.80%      380  BacktraceBuilder::push
  2980000000    6.90%      298  frame::sender_for_interpreter_frame
  2760000000    6.39%      276  CodeHeap::find_blob
  2320000000    5.37%      232  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<2383974ull, G1BarrierSet>, (AccessInternal::BarrierType)1, 2383974ull>::oop_access_barrier
  1980000000    4.59%      198  frame::sender_raw
  1560000000    3.61%      156  ObjArrayKlass::allocate
  1460000000    3.38%      146  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ull, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ull>::oop_access_barrier
  1290000000    2.99%      129  CodeCache::find_blob
   820000000    1.90%       82  Method::bci_from
   770000000    1.78%       77  _platform_bzero$VARIANT$Haswell
   760000000    1.76%       76  java.lang.Throwable.fillInStackTrace
   730000000    1.69%       73  CodeBlob::is_upcall_stub
   680000000    1.58%       68  MemAllocator::Allocation::notify_allocation
   680000000    1.58%       68  JVM_FillInStackTrace
   630000000    1.46%       63  MemAllocator::allocate
   600000000    1.39%       60  frame::sender_for_compiled_frame
   580000000    1.34%       58  TypeArrayKlass::allocate_common
   550000000    1.27%       55  ObjArrayAllocator::initialize
   530000000    1.23%       53  BacktraceBuilder::expand
   520000000    1.20%       52  Continuation::is_return_barrier_entry
   430000000    1.00%       43  frame::interpreter_frame_bcp
   400000000    0.93%       40  Continuation::is_continuation_enterSpecial
   400000000    0.93%       40  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<2383974ull, G1BarrierSet>, (AccessInternal::BarrierType)3, 2383974ull>::oop_access_barrier
   390000000    0.90%       39  java.util.concurrent.atomic.AtomicLong.compareAndSet
   390000000    0.90%       39  java.lang.Throwable.<init>
   320000000    0.74%       32  Method::bcp_from
   320000000    0.74%       32  frame::interpreter_frame_method
   310000000    0.72%       31  Universe::should_fill_in_stack_trace
   300000000    0.69%       30  MemAllocator::Allocation::check_out_of_memory
   290000000    0.67%       29  Klass::check_array_allocation_length
   240000000    0.56%       24  nmethod::metadata_at
   220000000    0.51%       22  tlv_get_addr
   220000000    0.51%       22  nmethod::metadata_addr_at
   220000000    0.51%       22  MemAllocator::Allocation::notify_allocation_jvmti_sampler
   210000000    0.49%       21  CollectedHeap::array_allocate
   200000000    0.46%       20  JavaThread::pd_last_frame
   200000000    0.46%       20  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<287270ull, G1BarrierSet>, (AccessInternal::BarrierType)1, 287270ull>::oop_access_barrier
   170000000    0.39%       17  java.util.Random.next
   170000000    0.39%       17  RegisterMap::RegisterMap
   170000000    0.39%       17  frame::entry_frame_is_first
   170000000    0.39%       17  __psynch_cvwait
   160000000    0.37%       16  ThreadShadow::clear_pending_exception
   150000000    0.35%       15  com.panfutov.Service.doWithException
   140000000    0.32%       14  semaphore_wait_trap
   130000000    0.30%       13  _os_semaphore_wait.cold.1
   110000000    0.25%       11  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<286822ull, G1BarrierSet>, (AccessInternal::BarrierType)1, 286822ull>::oop_access_barrier
   100000000    0.23%       10  PcDescContainer::find_pc_desc_internal
   100000000    0.23%       10  PreserveExceptionMark::PreserveExceptionMark
    90000000    0.21%        9  nmethod::scopes_pcs_begin
    80000000    0.19%        8  oopFactory::new_objectArray
    70000000    0.16%        7  oopDesc::release_obj_field_put
    60000000    0.14%        6  oopFactory::new_intArray
    60000000    0.14%        6  JavaFrameAnchor::make_walkable
    50000000    0.12%        5  PreserveExceptionMark::~PreserveExceptionMark
    50000000    0.12%        5  com.panfutov.Service$BusinessException.<init>
    40000000    0.09%        4  com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
    40000000    0.09%        4  collapse
    40000000    0.09%        4  nmethod::scopes_pcs_end
    40000000    0.09%        4  PcDescCache::find_pc_desc
    40000000    0.09%        4  Java_java_lang_Throwable_fillInStackTrace
    40000000    0.09%        4  oopFactory::new_symbolArray
    40000000    0.09%        4  methodHandle::~methodHandle
    30000000    0.07%        3  __psynch_mutexwait
    30000000    0.07%        3  java.lang.Throwable.getMessage
    20000000    0.05%        2  ZThread::~ZThread
    20000000    0.05%        2  os::javaTimeNanos
    20000000    0.05%        2  SpinPause
    20000000    0.05%        2  oopFactory::new_shortArray
    10000000    0.02%        1  java.lang.reflect.Method.invoke
    10000000    0.02%        1  compare_region_idx
    10000000    0.02%        1  com.panfutov.Benchmark.exceptions
    10000000    0.02%        1  nanov2_find_block_and_allocate
    10000000    0.02%        1  CompositeElapsedCounterSource::seconds
    10000000    0.02%        1  __gettimeofday
    10000000    0.02%        1  G1MonitoringSupport::recalculate_sizes
    10000000    0.02%        1  Thread::claim_par_threads_do
    10000000    0.02%        1  ConstantPool::name_and_type_ref_index_at
    10000000    0.02%        1  Mutex::owned_by_self
    10000000    0.02%        1  G1CardTable::g1_mark_as_young
    10000000    0.02%        1  G1CollectedHeap::unsafe_max_tlab_alloc
    10000000    0.02%        1  HeapRegionType::get_trace_type
    10000000    0.02%        1  org.openjdk.jmh.infra.Blackhole.consume
    10000000    0.02%        1  HeapRegionManager::par_iterate
    10000000    0.02%        1  GenericWaitBarrier::disarm
    10000000    0.02%        1  G1RemSetScanState::prepare
    10000000    0.02%        1  void G1ParCopyClosure<(G1Barrier)0, false>::do_oop_work<oopDesc*>
    10000000    0.02%        1  void OopMapDo<OopClosure, DerivedOopClosure, SkipNullValue>::iterate_oops_do<RegisterMap>
Async profiler results:
  /Users/artyom/git/exceptions-vs-jresult-benchmark/exceptions-vs-jresult-benchmark/untitled/com.panfutov.Benchmark.exceptions-AverageTime/summary-cpu.txt
--- Execution profile ---
Total samples       : 4344
unknown_Java        : 1 (0.02%)

--- 9930000000 ns (22.86%), 993 samples
  [ 0] java_lang_Throwable::fill_in_stack_trace
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 3940000000 ns (9.07%), 394 samples
  [ 0] BacktraceBuilder::push
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 2790000000 ns (6.42%), 279 samples
  [ 0] frame::sender_for_interpreter_frame
  [ 1] frame::sender_raw
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 2150000000 ns (4.95%), 215 samples
  [ 0] CodeHeap::find_blob
  [ 1] frame::sender_for_interpreter_frame
  [ 2] frame::sender_raw
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 1760000000 ns (4.05%), 176 samples
  [ 0] frame::sender_raw
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 1660000000 ns (3.82%), 166 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<2383974ull, G1BarrierSet>, (AccessInternal::BarrierType)1, 2383974ull>::oop_access_barrier
  [ 1] BacktraceBuilder::push
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 1350000000 ns (3.11%), 135 samples
  [ 0] ObjArrayKlass::allocate
  [ 1] BacktraceBuilder::expand
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 1200000000 ns (2.76%), 120 samples
  [ 0] CodeCache::find_blob
  [ 1] frame::sender_for_interpreter_frame
  [ 2] frame::sender_raw
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 950000000 ns (2.19%), 95 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ull, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ull>::oop_access_barrier
  [ 1] BacktraceBuilder::push
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 690000000 ns (1.59%), 69 samples
  [ 0] BacktraceBuilder::expand
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 690000000 ns (1.59%), 69 samples
  [ 0] MemAllocator::allocate
  [ 1] CollectedHeap::array_allocate
  [ 2] BacktraceBuilder::expand
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 650000000 ns (1.50%), 65 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<2383974ull, G1BarrierSet>, (AccessInternal::BarrierType)1, 2383974ull>::oop_access_barrier
  [ 1] BacktraceBuilder::expand
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 600000000 ns (1.38%), 60 samples
  [ 0] frame::sender_for_compiled_frame
  [ 1] frame::sender_raw
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 580000000 ns (1.34%), 58 samples
  [ 0] Method::bci_from
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 520000000 ns (1.20%), 52 samples
  [ 0] MemAllocator::Allocation::notify_allocation
  [ 1] MemAllocator::allocate
  [ 2] CollectedHeap::array_allocate
  [ 3] BacktraceBuilder::expand
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] java_lang_Throwable::fill_in_stack_trace
  [ 6] JVM_FillInStackTrace
  [ 7] Java_java_lang_Throwable_fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.fillInStackTrace
  [10] java.lang.Throwable.<init>
  [11] java.lang.Exception.<init>
  [12] java.lang.RuntimeException.<init>
  [13] com.panfutov.Service$BusinessException.<init>
  [14] com.panfutov.Service.doWithException
  [15] com.panfutov.Benchmark.exceptions
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [17] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [18] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [19] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [20] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [22] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.runWith
  [32] java.lang.Thread.run

--- 480000000 ns (1.10%), 48 samples
  [ 0] TypeArrayKlass::allocate_common
  [ 1] BacktraceBuilder::expand
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 480000000 ns (1.10%), 48 samples
  [ 0] _platform_bzero$VARIANT$Haswell
  [ 1] ObjArrayAllocator::initialize
  [ 2] MemAllocator::allocate
  [ 3] CollectedHeap::array_allocate
  [ 4] BacktraceBuilder::expand
  [ 5] java_lang_Throwable::fill_in_stack_trace
  [ 6] java_lang_Throwable::fill_in_stack_trace
  [ 7] JVM_FillInStackTrace
  [ 8] Java_java_lang_Throwable_fillInStackTrace
  [ 9] java.lang.Throwable.fillInStackTrace
  [10] java.lang.Throwable.fillInStackTrace
  [11] java.lang.Throwable.<init>
  [12] java.lang.Exception.<init>
  [13] java.lang.RuntimeException.<init>
  [14] com.panfutov.Service$BusinessException.<init>
  [15] com.panfutov.Service.doWithException
  [16] com.panfutov.Benchmark.exceptions
  [17] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [18] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [19] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [20] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [21] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [22] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [23] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [24] java.lang.reflect.Method.invoke
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.Executors$RunnableAdapter.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.ThreadPoolExecutor.runWorker
  [31] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [32] java.lang.Thread.runWith
  [33] java.lang.Thread.run

--- 480000000 ns (1.10%), 48 samples
  [ 0] JVM_FillInStackTrace
  [ 1] Java_java_lang_Throwable_fillInStackTrace
  [ 2] java.lang.Throwable.fillInStackTrace
  [ 3] java.lang.Throwable.fillInStackTrace
  [ 4] java.lang.Throwable.<init>
  [ 5] java.lang.Exception.<init>
  [ 6] java.lang.RuntimeException.<init>
  [ 7] com.panfutov.Service$BusinessException.<init>
  [ 8] com.panfutov.Service.doWithException
  [ 9] com.panfutov.Benchmark.exceptions
  [10] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [11] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [12] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [13] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [14] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [15] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [16] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [17] java.lang.reflect.Method.invoke
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.Executors$RunnableAdapter.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.ThreadPoolExecutor.runWorker
  [24] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [25] java.lang.Thread.runWith
  [26] java.lang.Thread.run

--- 400000000 ns (0.92%), 40 samples
  [ 0] java.lang.Throwable.fillInStackTrace
  [ 1] java.lang.Throwable.fillInStackTrace
  [ 2] java.lang.Throwable.<init>
  [ 3] java.lang.Exception.<init>
  [ 4] java.lang.RuntimeException.<init>
  [ 5] com.panfutov.Service$BusinessException.<init>
  [ 6] com.panfutov.Service.doWithException
  [ 7] com.panfutov.Benchmark.exceptions
  [ 8] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 9] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [10] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [11] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [12] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [13] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [14] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.runWith
  [24] java.lang.Thread.run

--- 390000000 ns (0.90%), 39 samples
  [ 0] Continuation::is_return_barrier_entry
  [ 1] frame::sender_for_interpreter_frame
  [ 2] frame::sender_raw
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 390000000 ns (0.90%), 39 samples
  [ 0] CodeHeap::find_blob
  [ 1] JavaThread::pd_last_frame
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 380000000 ns (0.87%), 38 samples
  [ 0] ObjArrayAllocator::initialize
  [ 1] MemAllocator::allocate
  [ 2] CollectedHeap::array_allocate
  [ 3] BacktraceBuilder::expand
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] java_lang_Throwable::fill_in_stack_trace
  [ 6] JVM_FillInStackTrace
  [ 7] Java_java_lang_Throwable_fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.fillInStackTrace
  [10] java.lang.Throwable.<init>
  [11] java.lang.Exception.<init>
  [12] java.lang.RuntimeException.<init>
  [13] com.panfutov.Service$BusinessException.<init>
  [14] com.panfutov.Service.doWithException
  [15] com.panfutov.Benchmark.exceptions
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [17] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [18] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [19] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [20] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [22] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.runWith
  [32] java.lang.Thread.run

--- 370000000 ns (0.85%), 37 samples
  [ 0] frame::interpreter_frame_bcp
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 370000000 ns (0.85%), 37 samples
  [ 0] CodeBlob::is_upcall_stub
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 340000000 ns (0.78%), 34 samples
  [ 0] JavaThread::pd_last_frame
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 340000000 ns (0.78%), 34 samples
  [ 0] CodeBlob::is_upcall_stub
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 300000000 ns (0.69%), 30 samples
  [ 0] java.lang.Throwable.fillInStackTrace
  [ 1] java.lang.Throwable.<init>
  [ 2] java.lang.Exception.<init>
  [ 3] java.lang.RuntimeException.<init>
  [ 4] com.panfutov.Service$BusinessException.<init>
  [ 5] com.panfutov.Service.doWithException
  [ 6] com.panfutov.Benchmark.exceptions
  [ 7] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 8] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 9] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [10] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [11] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [12] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [13] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.runWith
  [23] java.lang.Thread.run

--- 290000000 ns (0.67%), 29 samples
  [ 0] Universe::should_fill_in_stack_trace
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 290000000 ns (0.67%), 29 samples
  [ 0] java.util.concurrent.atomic.AtomicLong.compareAndSet
  [ 1] java.util.Random.next
  [ 2] java.util.Random.nextBoolean
  [ 3] com.panfutov.Service.doWithException
  [ 4] com.panfutov.Benchmark.exceptions
  [ 5] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 6] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 7] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 8] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [ 9] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [10] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [11] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.runWith
  [21] java.lang.Thread.run

--- 270000000 ns (0.62%), 27 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<287270ull, G1BarrierSet>, (AccessInternal::BarrierType)1, 287270ull>::oop_access_barrier
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 260000000 ns (0.60%), 26 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<2383974ull, G1BarrierSet>, (AccessInternal::BarrierType)3, 2383974ull>::oop_access_barrier
  [ 1] Universe::should_fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 250000000 ns (0.58%), 25 samples
  [ 0] Continuation::is_continuation_enterSpecial
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 240000000 ns (0.55%), 24 samples
  [ 0] Method::bcp_from
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 230000000 ns (0.53%), 23 samples
  [ 0] java.lang.Throwable.<init>
  [ 1] java.lang.Exception.<init>
  [ 2] java.lang.RuntimeException.<init>
  [ 3] com.panfutov.Service$BusinessException.<init>
  [ 4] com.panfutov.Service.doWithException
  [ 5] com.panfutov.Benchmark.exceptions
  [ 6] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 7] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 8] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 9] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [10] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [11] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [12] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [13] java.lang.reflect.Method.invoke
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.Executors$RunnableAdapter.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.ThreadPoolExecutor.runWorker
  [20] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [21] java.lang.Thread.runWith
  [22] java.lang.Thread.run

--- 210000000 ns (0.48%), 21 samples
  [ 0] frame::sender_for_interpreter_frame
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 210000000 ns (0.48%), 21 samples
  [ 0] MemAllocator::Allocation::notify_allocation_jvmti_sampler
  [ 1] MemAllocator::allocate
  [ 2] CollectedHeap::array_allocate
  [ 3] BacktraceBuilder::expand
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] java_lang_Throwable::fill_in_stack_trace
  [ 6] JVM_FillInStackTrace
  [ 7] Java_java_lang_Throwable_fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.fillInStackTrace
  [10] java.lang.Throwable.<init>
  [11] java.lang.Exception.<init>
  [12] java.lang.RuntimeException.<init>
  [13] com.panfutov.Service$BusinessException.<init>
  [14] com.panfutov.Service.doWithException
  [15] com.panfutov.Benchmark.exceptions
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [17] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [18] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [19] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [20] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [22] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.runWith
  [32] java.lang.Thread.run

--- 210000000 ns (0.48%), 21 samples
  [ 0] CodeCache::find_blob
  [ 1] JavaThread::pd_last_frame
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 210000000 ns (0.48%), 21 samples
  [ 0] BacktraceBuilder::push
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 200000000 ns (0.46%), 20 samples
  [ 0] java_lang_Throwable::fill_in_stack_trace
  [ 1] JVM_FillInStackTrace
  [ 2] Java_java_lang_Throwable_fillInStackTrace
  [ 3] java.lang.Throwable.fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.<init>
  [ 6] java.lang.Exception.<init>
  [ 7] java.lang.RuntimeException.<init>
  [ 8] com.panfutov.Service$BusinessException.<init>
  [ 9] com.panfutov.Service.doWithException
  [10] com.panfutov.Benchmark.exceptions
  [11] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [13] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [14] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [16] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.runWith
  [27] java.lang.Thread.run

--- 200000000 ns (0.46%), 20 samples
  [ 0] frame::interpreter_frame_method
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 180000000 ns (0.41%), 18 samples
  [ 0] CodeCache::find_blob
  [ 1] frame::sender_raw
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 180000000 ns (0.41%), 18 samples
  [ 0] nmethod::metadata_at
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 180000000 ns (0.41%), 18 samples
  [ 0] Method::bci_from
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 180000000 ns (0.41%), 18 samples
  [ 0] nmethod::metadata_addr_at
  [ 1] nmethod::metadata_at
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 170000000 ns (0.39%), 17 samples
  [ 0] MemAllocator::Allocation::check_out_of_memory
  [ 1] MemAllocator::allocate
  [ 2] CollectedHeap::array_allocate
  [ 3] BacktraceBuilder::expand
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] java_lang_Throwable::fill_in_stack_trace
  [ 6] JVM_FillInStackTrace
  [ 7] Java_java_lang_Throwable_fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.fillInStackTrace
  [10] java.lang.Throwable.<init>
  [11] java.lang.Exception.<init>
  [12] java.lang.RuntimeException.<init>
  [13] com.panfutov.Service$BusinessException.<init>
  [14] com.panfutov.Service.doWithException
  [15] com.panfutov.Benchmark.exceptions
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [17] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [18] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [19] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [20] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [22] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.runWith
  [32] java.lang.Thread.run

--- 170000000 ns (0.39%), 17 samples
  [ 0] Continuation::is_continuation_enterSpecial
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 170000000 ns (0.39%), 17 samples
  [ 0] frame::interpreter_frame_method
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 160000000 ns (0.37%), 16 samples
  [ 0] _platform_bzero$VARIANT$Haswell
  [ 1] MemAllocator::allocate
  [ 2] CollectedHeap::array_allocate
  [ 3] BacktraceBuilder::expand
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] java_lang_Throwable::fill_in_stack_trace
  [ 6] JVM_FillInStackTrace
  [ 7] Java_java_lang_Throwable_fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.fillInStackTrace
  [10] java.lang.Throwable.<init>
  [11] java.lang.Exception.<init>
  [12] java.lang.RuntimeException.<init>
  [13] com.panfutov.Service$BusinessException.<init>
  [14] com.panfutov.Service.doWithException
  [15] com.panfutov.Benchmark.exceptions
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [17] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [18] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [19] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [20] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [22] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.runWith
  [32] java.lang.Thread.run

--- 160000000 ns (0.37%), 16 samples
  [ 0] Method::bcp_from
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 150000000 ns (0.35%), 15 samples
  [ 0] CodeBlob::is_upcall_stub
  [ 1] frame::sender_raw
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 150000000 ns (0.35%), 15 samples
  [ 0] Klass::check_array_allocation_length
  [ 1] TypeArrayKlass::allocate_common
  [ 2] BacktraceBuilder::expand
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 150000000 ns (0.35%), 15 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<2383974ull, G1BarrierSet>, (AccessInternal::BarrierType)1, 2383974ull>::oop_access_barrier
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 150000000 ns (0.35%), 15 samples
  [ 0] ThreadShadow::clear_pending_exception
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 140000000 ns (0.32%), 14 samples
  [ 0] CollectedHeap::array_allocate
  [ 1] BacktraceBuilder::expand
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 140000000 ns (0.32%), 14 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ull, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ull>::oop_access_barrier
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 130000000 ns (0.30%), 13 samples
  [ 0] semaphore_wait_trap
  [ 1] WorkerThread::run
  [ 2] Thread::call_run
  [ 3] thread_native_entry
  [ 4] _pthread_start
  [ 5] thread_start

--- 130000000 ns (0.30%), 13 samples
  [ 0] Continuation::is_return_barrier_entry
  [ 1] frame::sender_raw
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 120000000 ns (0.28%), 12 samples
  [ 0] java.util.Random.next
  [ 1] java.util.Random.nextBoolean
  [ 2] com.panfutov.Service.doWithException
  [ 3] com.panfutov.Benchmark.exceptions
  [ 4] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 5] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 6] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 7] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [ 8] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [ 9] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [10] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.runWith
  [20] java.lang.Thread.run

--- 120000000 ns (0.28%), 12 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<286822ull, G1BarrierSet>, (AccessInternal::BarrierType)1, 286822ull>::oop_access_barrier
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 120000000 ns (0.28%), 12 samples
  [ 0] nmethod::metadata_at
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 110000000 ns (0.25%), 11 samples
  [ 0] CodeHeap::find_blob
  [ 1] frame::sender_for_compiled_frame
  [ 2] frame::sender_raw
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 110000000 ns (0.25%), 11 samples
  [ 0] tlv_get_addr
  [ 1] CollectedHeap::array_allocate
  [ 2] BacktraceBuilder::expand
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 110000000 ns (0.25%), 11 samples
  [ 0] com.panfutov.Service.doWithException
  [ 1] com.panfutov.Benchmark.exceptions
  [ 2] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 3] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 4] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 5] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [ 6] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [ 7] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 8] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.runWith
  [18] java.lang.Thread.run

--- 100000000 ns (0.23%), 10 samples
  [ 0] nmethod::metadata_addr_at
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 90000000 ns (0.21%), 9 samples
  [ 0] Klass::check_array_allocation_length
  [ 1] ObjArrayKlass::allocate
  [ 2] BacktraceBuilder::expand
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 80000000 ns (0.18%), 8 samples
  [ 0] frame::sender_raw
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 80000000 ns (0.18%), 8 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<2383974ull, G1BarrierSet>, (AccessInternal::BarrierType)3, 2383974ull>::oop_access_barrier
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 80000000 ns (0.18%), 8 samples
  [ 0] Continuation::is_return_barrier_entry
  [ 1] frame::sender_for_compiled_frame
  [ 2] frame::sender_raw
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 70000000 ns (0.16%), 7 samples
  [ 0] frame::entry_frame_is_first
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 70000000 ns (0.16%), 7 samples
  [ 0] RegisterMap::RegisterMap
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 60000000 ns (0.14%), 6 samples
  [ 0] java.util.Random.next
  [ 1] java.util.Random.nextBoolean
  [ 2] com.panfutov.Service.doWithException
  [ 3] com.panfutov.Benchmark.exceptions
  [ 4] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 5] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 6] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 7] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [ 8] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [ 9] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [10] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.runWith
  [20] java.lang.Thread.run

--- 60000000 ns (0.14%), 6 samples
  [ 0] nmethod::scopes_pcs_begin
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 60000000 ns (0.14%), 6 samples
  [ 0] MemAllocator::allocate
  [ 1] BacktraceBuilder::expand
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 60000000 ns (0.14%), 6 samples
  [ 0] ObjArrayAllocator::initialize
  [ 1] CollectedHeap::array_allocate
  [ 2] BacktraceBuilder::expand
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 60000000 ns (0.14%), 6 samples
  [ 0] java.lang.Throwable.<init>
  [ 1] java.lang.Exception.<init>
  [ 2] java.lang.RuntimeException.<init>
  [ 3] com.panfutov.Service$BusinessException.<init>
  [ 4] com.panfutov.Service.doWithException
  [ 5] com.panfutov.Benchmark.exceptions
  [ 6] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 7] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 8] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 9] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [10] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [11] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [12] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [13] java.lang.reflect.Method.invoke
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.Executors$RunnableAdapter.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.ThreadPoolExecutor.runWorker
  [20] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [21] java.lang.Thread.runWith
  [22] java.lang.Thread.run

--- 60000000 ns (0.14%), 6 samples
  [ 0] Klass::check_array_allocation_length
  [ 1] BacktraceBuilder::expand
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 60000000 ns (0.14%), 6 samples
  [ 0] PreserveExceptionMark::PreserveExceptionMark
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 50000000 ns (0.12%), 5 samples
  [ 0] oopDesc::release_obj_field_put
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 50000000 ns (0.12%), 5 samples
  [ 0] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 1] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 2] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 3] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [ 4] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [ 5] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 6] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 7] java.lang.reflect.Method.invoke
  [ 8] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.Executors$RunnableAdapter.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.ThreadPoolExecutor.runWorker
  [14] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [15] java.lang.Thread.runWith
  [16] java.lang.Thread.run

--- 50000000 ns (0.12%), 5 samples
  [ 0] frame::sender_for_compiled_frame
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 50000000 ns (0.12%), 5 samples
  [ 0] ThreadShadow::clear_pending_exception
  [ 1] JVM_FillInStackTrace
  [ 2] Java_java_lang_Throwable_fillInStackTrace
  [ 3] java.lang.Throwable.fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.<init>
  [ 6] java.lang.Exception.<init>
  [ 7] java.lang.RuntimeException.<init>
  [ 8] com.panfutov.Service$BusinessException.<init>
  [ 9] com.panfutov.Service.doWithException
  [10] com.panfutov.Benchmark.exceptions
  [11] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [13] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [14] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [16] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.runWith
  [27] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] java.lang.Throwable.<init>
  [ 1] java.lang.Exception.<init>
  [ 2] java.lang.RuntimeException.<init>
  [ 3] com.panfutov.Service$BusinessException.<init>
  [ 4] com.panfutov.Service.doWithException
  [ 5] com.panfutov.Benchmark.exceptions
  [ 6] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 7] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 8] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 9] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [10] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [11] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [12] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [13] java.lang.reflect.Method.invoke
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.Executors$RunnableAdapter.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.ThreadPoolExecutor.runWorker
  [20] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [21] java.lang.Thread.runWith
  [22] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<287270ull, G1BarrierSet>, (AccessInternal::BarrierType)1, 287270ull>::oop_access_barrier
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] CodeHeap::find_blob
  [ 1] frame::sender_raw
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] tlv_get_addr
  [ 1] JVM_FillInStackTrace
  [ 2] Java_java_lang_Throwable_fillInStackTrace
  [ 3] java.lang.Throwable.fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.<init>
  [ 6] java.lang.Exception.<init>
  [ 7] java.lang.RuntimeException.<init>
  [ 8] com.panfutov.Service$BusinessException.<init>
  [ 9] com.panfutov.Service.doWithException
  [10] com.panfutov.Benchmark.exceptions
  [11] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [13] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [14] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [16] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.runWith
  [27] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] PreserveExceptionMark::~PreserveExceptionMark
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] PcDescCache::find_pc_desc
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] JVM_FillInStackTrace
  [ 1] java.lang.Throwable.fillInStackTrace
  [ 2] java.lang.Throwable.fillInStackTrace
  [ 3] java.lang.Throwable.<init>
  [ 4] java.lang.Exception.<init>
  [ 5] java.lang.RuntimeException.<init>
  [ 6] com.panfutov.Service$BusinessException.<init>
  [ 7] com.panfutov.Service.doWithException
  [ 8] com.panfutov.Benchmark.exceptions
  [ 9] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [10] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [11] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [12] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [13] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [14] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [15] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.runWith
  [25] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] ObjArrayKlass::allocate
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] MemAllocator::Allocation::check_out_of_memory
  [ 1] CollectedHeap::array_allocate
  [ 2] BacktraceBuilder::expand
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] __psynch_cvwait
  [ 1] PlatformMonitor::wait
  [ 2] Monitor::wait_without_safepoint_check
  [ 3] WatcherThread::sleep
  [ 4] WatcherThread::run
  [ 5] Thread::call_run
  [ 6] thread_native_entry
  [ 7] _pthread_start
  [ 8] thread_start

--- 30000000 ns (0.07%), 3 samples
  [ 0] CodeCache::find_blob
  [ 1] frame::sender_for_compiled_frame
  [ 2] frame::sender_raw
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] CodeCache::find_blob
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] nmethod::scopes_pcs_end
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] JavaFrameAnchor::make_walkable
  [ 1] Java_java_lang_Throwable_fillInStackTrace
  [ 2] java.lang.Throwable.fillInStackTrace
  [ 3] java.lang.Throwable.fillInStackTrace
  [ 4] java.lang.Throwable.<init>
  [ 5] java.lang.Exception.<init>
  [ 6] java.lang.RuntimeException.<init>
  [ 7] com.panfutov.Service$BusinessException.<init>
  [ 8] com.panfutov.Service.doWithException
  [ 9] com.panfutov.Benchmark.exceptions
  [10] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [11] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [12] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [13] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [14] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [15] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [16] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [17] java.lang.reflect.Method.invoke
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.Executors$RunnableAdapter.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.ThreadPoolExecutor.runWorker
  [24] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [25] java.lang.Thread.runWith
  [26] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] frame::entry_frame_is_first
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] MemAllocator::Allocation::notify_allocation
  [ 1] CollectedHeap::array_allocate
  [ 2] BacktraceBuilder::expand
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] frame::interpreter_frame_bcp
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] com.panfutov.Service.doWithException
  [ 1] com.panfutov.Benchmark.exceptions
  [ 2] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 3] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 4] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 5] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [ 6] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [ 7] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 8] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.runWith
  [18] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] JavaFrameAnchor::make_walkable
  [ 1] JVM_FillInStackTrace
  [ 2] Java_java_lang_Throwable_fillInStackTrace
  [ 3] java.lang.Throwable.fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.<init>
  [ 6] java.lang.Exception.<init>
  [ 7] java.lang.RuntimeException.<init>
  [ 8] com.panfutov.Service$BusinessException.<init>
  [ 9] com.panfutov.Service.doWithException
  [10] com.panfutov.Benchmark.exceptions
  [11] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [13] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [14] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [16] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.runWith
  [27] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 1] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 2] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 3] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [ 4] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [ 5] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 6] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 7] java.lang.reflect.Method.invoke
  [ 8] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.Executors$RunnableAdapter.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.ThreadPoolExecutor.runWorker
  [14] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [15] java.lang.Thread.runWith
  [16] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ull, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ull>::oop_access_barrier
  [ 1] Universe::should_fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] PcDescCache::find_pc_desc
  [ 1] PcDescContainer::find_pc_desc_internal
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] java.lang.Throwable.getMessage
  [ 1] com.panfutov.Benchmark.exceptions
  [ 2] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 3] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 4] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 5] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [ 6] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [ 7] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 8] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.runWith
  [18] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] semaphore_wait_trap
  [ 1] WorkerThread::run
  [ 2] Thread::call_run
  [ 3] thread_native_entry
  [ 4] _pthread_start
  [ 5] thread_start

--- 30000000 ns (0.07%), 3 samples
  [ 0] java.lang.Throwable.getMessage
  [ 1] com.panfutov.Benchmark.exceptions
  [ 2] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 3] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 4] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 5] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [ 6] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [ 7] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 8] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.runWith
  [18] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] nmethod::scopes_pcs_end
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] com.panfutov.Service$BusinessException.<init>
  [ 1] com.panfutov.Service.doWithException
  [ 2] com.panfutov.Benchmark.exceptions
  [ 3] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 4] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 5] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 6] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [ 7] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [ 8] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 9] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [10] java.lang.reflect.Method.invoke
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.Executors$RunnableAdapter.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.ThreadPoolExecutor.runWorker
  [17] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [18] java.lang.Thread.runWith
  [19] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] _os_semaphore_wait.cold.1
  [ 1] MemAllocator::allocate
  [ 2] CollectedHeap::array_allocate
  [ 3] BacktraceBuilder::expand
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] java_lang_Throwable::fill_in_stack_trace
  [ 6] JVM_FillInStackTrace
  [ 7] Java_java_lang_Throwable_fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.fillInStackTrace
  [10] java.lang.Throwable.<init>
  [11] java.lang.Exception.<init>
  [12] java.lang.RuntimeException.<init>
  [13] com.panfutov.Service$BusinessException.<init>
  [14] com.panfutov.Service.doWithException
  [15] com.panfutov.Benchmark.exceptions
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [17] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [18] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [19] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [20] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [22] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.runWith
  [32] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] oopFactory::new_objectArray
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] methodHandle::~methodHandle
  [ 1] Java_java_lang_Throwable_fillInStackTrace
  [ 2] java.lang.Throwable.fillInStackTrace
  [ 3] java.lang.Throwable.fillInStackTrace
  [ 4] java.lang.Throwable.<init>
  [ 5] java.lang.Exception.<init>
  [ 6] java.lang.RuntimeException.<init>
  [ 7] com.panfutov.Service$BusinessException.<init>
  [ 8] com.panfutov.Service.doWithException
  [ 9] com.panfutov.Benchmark.exceptions
  [10] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [11] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [12] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [13] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [14] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [15] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [16] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [17] java.lang.reflect.Method.invoke
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.Executors$RunnableAdapter.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.ThreadPoolExecutor.runWorker
  [24] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [25] java.lang.Thread.runWith
  [26] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] BacktraceBuilder::expand
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] CollectedHeap::array_allocate
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] PcDescContainer::find_pc_desc_internal
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] methodHandle::~methodHandle
  [ 1] JVM_FillInStackTrace
  [ 2] Java_java_lang_Throwable_fillInStackTrace
  [ 3] java.lang.Throwable.fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.<init>
  [ 6] java.lang.Exception.<init>
  [ 7] java.lang.RuntimeException.<init>
  [ 8] com.panfutov.Service$BusinessException.<init>
  [ 9] com.panfutov.Service.doWithException
  [10] com.panfutov.Benchmark.exceptions
  [11] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [13] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [14] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [16] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.runWith
  [27] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ull, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ull>::oop_access_barrier
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] oopFactory::new_intArray
  [ 1] BacktraceBuilder::expand
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] pthread_mutex_lock
  [ 1] _pthread_cond_wait
  [ 2] PlatformMonitor::wait
  [ 3] Monitor::wait_without_safepoint_check
  [ 4] WatcherThread::sleep
  [ 5] WatcherThread::run
  [ 6] Thread::call_run
  [ 7] thread_native_entry
  [ 8] _pthread_start
  [ 9] thread_start

--- 20000000 ns (0.05%), 2 samples
  [ 0] oopFactory::new_symbolArray
  [ 1] BacktraceBuilder::expand
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<286822ull, G1BarrierSet>, (AccessInternal::BarrierType)1, 286822ull>::oop_access_barrier
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] com.panfutov.Benchmark.exceptions
  [ 1] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 2] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 3] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 4] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [ 5] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [ 6] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 7] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 8] java.lang.reflect.Method.invoke
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] java.util.concurrent.FutureTask.run
  [12] java.util.concurrent.Executors$RunnableAdapter.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.ThreadPoolExecutor.runWorker
  [15] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [16] java.lang.Thread.runWith
  [17] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] com.panfutov.Service.doWithException
  [ 1] com.panfutov.Benchmark.exceptions
  [ 2] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 3] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 4] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 5] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [ 6] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [ 7] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 8] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.runWith
  [18] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] pthread_mutex_trylock
  [ 1] G1CollectedHeap::attempt_allocation_slow
  [ 2] G1CollectedHeap::attempt_allocation
  [ 3] MemAllocator::mem_allocate_inside_tlab_slow
  [ 4] MemAllocator::allocate
  [ 5] CollectedHeap::array_allocate
  [ 6] BacktraceBuilder::expand
  [ 7] java_lang_Throwable::fill_in_stack_trace
  [ 8] java_lang_Throwable::fill_in_stack_trace
  [ 9] JVM_FillInStackTrace
  [10] Java_java_lang_Throwable_fillInStackTrace
  [11] java.lang.Throwable.fillInStackTrace
  [12] java.lang.Throwable.fillInStackTrace
  [13] java.lang.Throwable.<init>
  [14] java.lang.Exception.<init>
  [15] java.lang.RuntimeException.<init>
  [16] com.panfutov.Service$BusinessException.<init>
  [17] com.panfutov.Service.doWithException
  [18] com.panfutov.Benchmark.exceptions
  [19] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [20] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [21] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [22] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [23] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [24] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [25] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.runWith
  [35] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] JavaFrameAnchor::make_walkable
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 20000000 ns (0.05%), 2 samples
  [ 0] java_lang_Throwable::fill_in_stack_trace
  [ 1] JVM_FillInStackTrace
  [ 2] Java_java_lang_Throwable_fillInStackTrace
  [ 3] java.lang.Throwable.fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.<init>
  [ 6] java.lang.Exception.<init>
  [ 7] java.lang.RuntimeException.<init>
  [ 8] com.panfutov.Service$BusinessException.<init>
  [ 9] com.panfutov.Service.doWithException
  [10] com.panfutov.Benchmark.exceptions
  [11] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [13] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [14] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [16] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.runWith
  [27] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] nmethod::scopes_pcs_begin
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] oopFactory::new_shortArray
  [ 1] BacktraceBuilder::expand
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] MasterFreeRegionListChecker::check_mt_safety
  [ 1] G1CollectedHeap::new_mutator_alloc_region
  [ 2] G1AllocRegion::new_alloc_region_and_allocate
  [ 3] G1CollectedHeap::attempt_allocation_slow
  [ 4] G1CollectedHeap::attempt_allocation
  [ 5] MemAllocator::mem_allocate_inside_tlab_slow
  [ 6] MemAllocator::allocate
  [ 7] CollectedHeap::array_allocate
  [ 8] BacktraceBuilder::expand
  [ 9] java_lang_Throwable::fill_in_stack_trace
  [10] java_lang_Throwable::fill_in_stack_trace
  [11] JVM_FillInStackTrace
  [12] Java_java_lang_Throwable_fillInStackTrace
  [13] java.lang.Throwable.fillInStackTrace
  [14] java.lang.Throwable.fillInStackTrace
  [15] java.lang.Throwable.<init>
  [16] java.lang.Exception.<init>
  [17] java.lang.RuntimeException.<init>
  [18] com.panfutov.Service$BusinessException.<init>
  [19] com.panfutov.Service.doWithException
  [20] com.panfutov.Benchmark.exceptions
  [21] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [22] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [23] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [24] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [25] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [26] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [27] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [28] java.lang.reflect.Method.invoke
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.Executors$RunnableAdapter.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.ThreadPoolExecutor.runWorker
  [35] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [36] java.lang.Thread.runWith
  [37] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.util.concurrent.ConcurrentHashMap.replaceNode
  [ 1] java.util.concurrent.ConcurrentHashMap.remove
  [ 2] org.openjdk.jmh.runner.BenchmarkHandler.getWorkerData
  [ 3] org.openjdk.jmh.runner.BenchmarkHandler.access$300
  [ 4] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 5] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 6] java.util.concurrent.FutureTask.run
  [ 7] java.util.concurrent.Executors$RunnableAdapter.call
  [ 8] java.util.concurrent.FutureTask.run
  [ 9] java.util.concurrent.ThreadPoolExecutor.runWorker
  [10] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [11] java.lang.Thread.runWith
  [12] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] HeapRegionManager::allocate_free_region
  [ 1] G1CollectedHeap::new_mutator_alloc_region
  [ 2] G1AllocRegion::new_alloc_region_and_allocate
  [ 3] G1CollectedHeap::attempt_allocation_slow
  [ 4] G1CollectedHeap::attempt_allocation
  [ 5] MemAllocator::mem_allocate_inside_tlab_slow
  [ 6] MemAllocator::allocate
  [ 7] CollectedHeap::array_allocate
  [ 8] BacktraceBuilder::expand
  [ 9] java_lang_Throwable::fill_in_stack_trace
  [10] java_lang_Throwable::fill_in_stack_trace
  [11] JVM_FillInStackTrace
  [12] Java_java_lang_Throwable_fillInStackTrace
  [13] java.lang.Throwable.fillInStackTrace
  [14] java.lang.Throwable.fillInStackTrace
  [15] java.lang.Throwable.<init>
  [16] java.lang.Exception.<init>
  [17] java.lang.RuntimeException.<init>
  [18] com.panfutov.Service$BusinessException.<init>
  [19] com.panfutov.Service.doWithException
  [20] com.panfutov.Benchmark.exceptions
  [21] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [22] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [23] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [24] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [25] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [26] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [27] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [28] java.lang.reflect.Method.invoke
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.Executors$RunnableAdapter.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.ThreadPoolExecutor.runWorker
  [35] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [36] java.lang.Thread.runWith
  [37] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] com.panfutov.Service.doWithException
  [ 1] com.panfutov.Benchmark.exceptions
  [ 2] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 3] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 4] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 5] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [ 6] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [ 7] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 8] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.runWith
  [18] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] SpinPause
  [ 1] G1ParEvacuateFollowersClosure::do_void
  [ 2] G1EvacuateRegionsBaseTask::evacuate_live_objects
  [ 3] G1EvacuateRegionsBaseTask::work
  [ 4] WorkerThread::run
  [ 5] Thread::call_run
  [ 6] thread_native_entry
  [ 7] _pthread_start
  [ 8] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] semaphore_signal_trap
  [ 1] WorkerThreads::run_task
  [ 2] void WeakProcessor::weak_oops_do<G1STWIsAliveClosure, G1KeepAliveClosure>
  [ 3] G1YoungCollector::post_evacuate_collection_set
  [ 4] G1YoungCollector::collect
  [ 5] G1CollectedHeap::do_collection_pause_at_safepoint_helper
  [ 6] G1CollectedHeap::do_collection_pause_at_safepoint
  [ 7] VM_G1CollectForAllocation::doit
  [ 8] VM_Operation::evaluate
  [ 9] VMThread::evaluate_operation
  [10] VMThread::inner_execute
  [11] VMThread::run
  [12] Thread::call_run
  [13] thread_native_entry
  [14] _pthread_start
  [15] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] oopFactory::new_intArray
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] JavaThread::pd_last_frame
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] collapse
  [ 1] java.lang.Throwable.fillInStackTrace
  [ 2] java.lang.Throwable.fillInStackTrace
  [ 3] java.lang.Throwable.<init>
  [ 4] java.lang.Exception.<init>
  [ 5] java.lang.RuntimeException.<init>
  [ 6] com.panfutov.Service$BusinessException.<init>
  [ 7] com.panfutov.Service.doWithException
  [ 8] com.panfutov.Benchmark.exceptions
  [ 9] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [10] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [11] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [12] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [13] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [14] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [15] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.runWith
  [25] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.util.Random.next
  [ 1] java.util.Random.nextBoolean
  [ 2] com.panfutov.Service.doWithException
  [ 3] com.panfutov.Benchmark.exceptions
  [ 4] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [ 5] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [ 6] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 7] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [ 8] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [ 9] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [10] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.runWith
  [20] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] G1MonitoringSupport::recalculate_sizes
  [ 1] G1AllocRegion::retire_internal
  [ 2] MutatorAllocRegion::retire
  [ 3] G1CollectedHeap::attempt_allocation_slow
  [ 4] G1CollectedHeap::attempt_allocation
  [ 5] MemAllocator::mem_allocate_inside_tlab_slow
  [ 6] MemAllocator::allocate
  [ 7] CollectedHeap::array_allocate
  [ 8] BacktraceBuilder::expand
  [ 9] java_lang_Throwable::fill_in_stack_trace
  [10] java_lang_Throwable::fill_in_stack_trace
  [11] JVM_FillInStackTrace
  [12] Java_java_lang_Throwable_fillInStackTrace
  [13] java.lang.Throwable.fillInStackTrace
  [14] java.lang.Throwable.fillInStackTrace
  [15] java.lang.Throwable.<init>
  [16] java.lang.Exception.<init>
  [17] java.lang.RuntimeException.<init>
  [18] com.panfutov.Service$BusinessException.<init>
  [19] com.panfutov.Service.doWithException
  [20] com.panfutov.Benchmark.exceptions
  [21] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [22] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [23] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [24] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [25] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [26] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [27] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [28] java.lang.reflect.Method.invoke
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.Executors$RunnableAdapter.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.ThreadPoolExecutor.runWorker
  [35] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [36] java.lang.Thread.runWith
  [37] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] MemAllocator::Allocation::notify_allocation_jvmti_sampler
  [ 1] CollectedHeap::array_allocate
  [ 2] BacktraceBuilder::expand
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] com.panfutov.Service$BusinessException.<init>
  [13] com.panfutov.Service.doWithException
  [14] com.panfutov.Benchmark.exceptions
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [17] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [19] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.runWith
  [31] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] oopDesc::release_obj_field_put
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] com.panfutov.Service$BusinessException.<init>
  [10] com.panfutov.Service.doWithException
  [11] com.panfutov.Benchmark.exceptions
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.runWith
  [28] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] G1MergeHeapRootsTask::G1ClearBitmapClosure::do_heap_region
  [ 1] G1CollectedHeap::par_iterate_regions_array
  [ 2] G1MergeHeapRootsTask::work
  [ 3] WorkerThread::run
  [ 4] Thread::call_run
  [ 5] thread_native_entry
  [ 6] _pthread_start
  [ 7] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] pthread_mutex_lock
  [ 1] Mutex::lock_without_safepoint_check
  [ 2] OopStorage::trigger_cleanup_if_needed
  [ 3] ParallelCleanupTask::work
  [ 4] SafepointSynchronize::do_cleanup_tasks
  [ 5] SafepointSynchronize::begin
  [ 6] VMThread::inner_execute
  [ 7] VMThread::run
  [ 8] Thread::call_run
  [ 9] thread_native_entry
  [10] _pthread_start
  [11] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] Universe::should_fill_in_stack_trace
  [ 1] JVM_FillInStackTrace
  [ 2] Java_java_lang_Throwable_fillInStackTrace
  [ 3] java.lang.Throwable.fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.<init>
  [ 6] java.lang.Exception.<init>
  [ 7] java.lang.RuntimeException.<init>
  [ 8] com.panfutov.Service$BusinessException.<init>
  [ 9] com.panfutov.Service.doWithException
  [10] com.panfutov.Benchmark.exceptions
  [11] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [12] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [13] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [14] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [15] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [16] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [17] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.runWith
  [27] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] Java_java_lang_Throwable_fillInStackTrace
  [ 1] java.lang.Throwable.fillInStackTrace
  [ 2] java.lang.Throwable.fillInStackTrace
  [ 3] java.lang.Throwable.<init>
  [ 4] java.lang.Exception.<init>
  [ 5] java.lang.RuntimeException.<init>
  [ 6] com.panfutov.Service$BusinessException.<init>
  [ 7] com.panfutov.Service.doWithException
  [ 8] com.panfutov.Benchmark.exceptions
  [ 9] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [10] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [11] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [12] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [13] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [14] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [15] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.runWith
  [25] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] __psynch_cvwait
  [ 1] Parker::park
  [ 2] Unsafe_Park
  [ 3] jdk.internal.misc.Unsafe.park
  [ 4] java.util.concurrent.locks.LockSupport.park
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire
  [ 6] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly
  [ 7] java.util.concurrent.CountDownLatch.await
  [ 8] org.openjdk.jmh.runner.InfraControlL2.awaitWarmupReady
  [ 9] org.openjdk.jmh.runner.InfraControl.awaitWarmupReady
  [10] org.openjdk.jmh.runner.BenchmarkHandler.runIteration
  [11] org.openjdk.jmh.runner.BaseRunner.runBenchmark
  [12] org.openjdk.jmh.runner.BaseRunner.runBenchmark
  [13] org.openjdk.jmh.runner.BaseRunner.doSingle
  [14] org.openjdk.jmh.runner.BaseRunner.runBenchmarksForked
  [15] org.openjdk.jmh.runner.ForkedRunner.run
  [16] org.openjdk.jmh.runner.ForkedMain.main

--- 10000000 ns (0.02%), 1 sample
  [ 0] oopFactory::new_objectArray
  [ 1] BacktraceBuilder::expand
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] java_lang_Throwable::fill_in_stack_trace
  [ 4] JVM_FillInStackTrace
  [ 5] Java_java_lang_Throwable_fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.<init>
  [ 9] java.lang.Exception.<init>
  [10] java.lang.RuntimeException.<init>
  [11] com.panfutov.Service$BusinessException.<init>
  [12] com.panfutov.Service.doWithException
  [13] com.panfutov.Benchmark.exceptions
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [15] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [16] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [18] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [20] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.runWith
  [30] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] G1YoungGCTraceTime::G1YoungGCTraceTime
  [ 1] G1YoungCollector::collect
  [ 2] G1CollectedHeap::do_collection_pause_at_safepoint_helper
  [ 3] G1CollectedHeap::do_collection_pause_at_safepoint
  [ 4] VM_G1CollectForAllocation::doit
  [ 5] VM_Operation::evaluate
  [ 6] VMThread::evaluate_operation
  [ 7] VMThread::inner_execute
  [ 8] VMThread::run
  [ 9] Thread::call_run
  [10] thread_native_entry
  [11] _pthread_start
  [12] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] OopMapCache::lookup
  [ 1] Method::mask_for
  [ 2] frame::oops_interpreted_do
  [ 3] JavaThread::oops_do_frames
  [ 4] Thread::oops_do
  [ 5] Threads::possibly_parallel_threads_do
  [ 6] Threads::possibly_parallel_oops_do
  [ 7] G1RootProcessor::process_java_roots
  [ 8] G1RootProcessor::evacuate_roots
  [ 9] G1EvacuateRegionsTask::scan_roots
  [10] G1EvacuateRegionsBaseTask::work
  [11] WorkerThread::run
  [12] Thread::call_run
  [13] thread_native_entry
  [14] _pthread_start
  [15] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] CodeHeap::find_blob
  [ 1] java_lang_Throwable::fill_in_stack_trace
  [ 2] java_lang_Throwable::fill_in_stack_trace
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] com.panfutov.Service$BusinessException.<init>
  [11] com.panfutov.Service.doWithException
  [12] com.panfutov.Benchmark.exceptions
  [13] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [14] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [15] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [16] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [17] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [18] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [19] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.runWith
  [29] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] __gettimeofday
  [ 1] PlatformMonitor::wait
  [ 2] Monitor::wait_without_safepoint_check
  [ 3] TaskTerminator::offer_termination
  [ 4] G1ParEvacuateFollowersClosure::do_void
  [ 5] G1EvacuateRegionsBaseTask::evacuate_live_objects
  [ 6] G1EvacuateRegionsBaseTask::work
  [ 7] WorkerThread::run
  [ 8] Thread::call_run
  [ 9] thread_native_entry
  [10] _pthread_start
  [11] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] OopStorage::BasicParState::BasicParState
  [ 1] G1RootProcessor::G1RootProcessor
  [ 2] G1YoungCollector::evacuate_initial_collection_set
  [ 3] G1YoungCollector::collect
  [ 4] G1CollectedHeap::do_collection_pause_at_safepoint_helper
  [ 5] G1CollectedHeap::do_collection_pause_at_safepoint
  [ 6] VM_G1CollectForAllocation::doit
  [ 7] VM_Operation::evaluate
  [ 8] VMThread::evaluate_operation
  [ 9] VMThread::inner_execute
  [10] VMThread::run
  [11] Thread::call_run
  [12] thread_native_entry
  [13] _pthread_start
  [14] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] _nanov2_free
  [ 1] G1RemSetScanState::G1ClearCardTableTask::~G1ClearCardTableTask
  [ 2] G1BatchedTask::~G1BatchedTask
  [ 3] G1YoungCollector::post_evacuate_collection_set
  [ 4] G1YoungCollector::collect
  [ 5] G1CollectedHeap::do_collection_pause_at_safepoint_helper
  [ 6] G1CollectedHeap::do_collection_pause_at_safepoint
  [ 7] VM_G1CollectForAllocation::doit
  [ 8] VM_Operation::evaluate
  [ 9] VMThread::evaluate_operation
  [10] VMThread::inner_execute
  [11] VMThread::run
  [12] Thread::call_run
  [13] thread_native_entry
  [14] _pthread_start
  [15] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] szone_try_free_default
  [ 1] G1YoungCollector::collect
  [ 2] G1CollectedHeap::do_collection_pause_at_safepoint_helper
  [ 3] G1CollectedHeap::do_collection_pause_at_safepoint
  [ 4] VM_G1CollectForAllocation::doit
  [ 5] VM_Operation::evaluate
  [ 6] VMThread::evaluate_operation
  [ 7] VMThread::inner_execute
  [ 8] VMThread::run
  [ 9] Thread::call_run
  [10] thread_native_entry
  [11] _pthread_start
  [12] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] HeapRegionManager::par_iterate
  [ 1] G1PrepareEvacuationTask::work
  [ 2] WorkerThread::run
  [ 3] Thread::call_run
  [ 4] thread_native_entry
  [ 5] _pthread_start
  [ 6] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] LIR_List::branch
  [ 1] LIRGenerator::increment_event_counter_impl
  [ 2] LIRGenerator::do_ProfileInvoke
  [ 3] LIRGenerator::block_do
  [ 4] BlockList::iterate_forward
  [ 5] Compilation::emit_lir
  [ 6] Compilation::compile_java_method
  [ 7] Compilation::compile_method
  [ 8] Compilation::Compilation
  [ 9] Compiler::compile_method
  [10] CompileBroker::invoke_compiler_on_method
  [11] CompileBroker::compiler_thread_loop
  [12] JavaThread::thread_main_inner
  [13] Thread::call_run
  [14] thread_native_entry
  [15] _pthread_start
  [16] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.lang.Throwable.fillInStackTrace
  [ 1] [unknown_Java]

--- 10000000 ns (0.02%), 1 sample
  [ 0] MemAllocator::mem_allocate_inside_tlab_slow
  [ 1] MemAllocator::allocate
  [ 2] CollectedHeap::array_allocate
  [ 3] BacktraceBuilder::expand
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] java_lang_Throwable::fill_in_stack_trace
  [ 6] JVM_FillInStackTrace
  [ 7] Java_java_lang_Throwable_fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.fillInStackTrace
  [10] java.lang.Throwable.<init>
  [11] java.lang.Exception.<init>
  [12] java.lang.RuntimeException.<init>
  [13] com.panfutov.Service$BusinessException.<init>
  [14] com.panfutov.Service.doWithException
  [15] com.panfutov.Benchmark.exceptions
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [17] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [18] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [19] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [20] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [22] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.runWith
  [32] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] ZThread::~ZThread
  [ 1] MemAllocator::allocate
  [ 2] CollectedHeap::array_allocate
  [ 3] BacktraceBuilder::expand
  [ 4] java_lang_Throwable::fill_in_stack_trace
  [ 5] java_lang_Throwable::fill_in_stack_trace
  [ 6] JVM_FillInStackTrace
  [ 7] Java_java_lang_Throwable_fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.fillInStackTrace
  [10] java.lang.Throwable.<init>
  [11] java.lang.Exception.<init>
  [12] java.lang.RuntimeException.<init>
  [13] com.panfutov.Service$BusinessException.<init>
  [14] com.panfutov.Service.doWithException
  [15] com.panfutov.Benchmark.exceptions
  [16] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
  [17] com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_AverageTime
  [18] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [19] java.lang.invoke.LambdaForm$MH.0x000000012e02d800.invoke
  [20] java.lang.invoke.LambdaForm$MH.0x000000012e002800.invokeExact_MT
  [21] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [22] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.runWith
  [32] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] HeapRegionClaimer::claim_region
  [ 1] G1CollectedHeap::par_iterate_regions_array
  [ 2] G1PostEvacuateCollectionSetCleanupTask2::FreeCollectionSetTask::do_work
  [ 3] G1BatchedTask::work
  [ 4] WorkerThread::run
  [ 5] Thread::call_run
  [ 6] thread_native_entry
  [ 7] _pthread_start
  [ 8] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] G1MergeHeapRootsTask::G1MergeLogBufferCardsClosure::do_card_ptr
  [ 1] G1MergeHeapRootsTask::work
  [ 2] WorkerThread::run
  [ 3] Thread::call_run
  [ 4] thread_native_entry
  [ 5] _pthread_start
  [ 6] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] PhaseChaitin::build_ifg_virtual
  [ 1] PhaseChaitin::Register_Allocate
  [ 2] Compile::Code_Gen
  [ 3] Compile::Compile
  [ 4] C2Compiler::compile_method
  [ 5] CompileBroker::invoke_compiler_on_method
  [ 6] CompileBroker::compiler_thread_loop
  [ 7] JavaThread::thread_main_inner
  [ 8] Thread::call_run
  [ 9] thread_native_entry
  [10] _pthread_start
  [11] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] __gettimeofday
  [ 1] PlatformMonitor::wait
  [ 2] Monitor::wait_without_safepoint_check
  [ 3] WatcherThread::sleep
  [ 4] WatcherThread::run
  [ 5] Thread::call_run
  [ 6] thread_native_entry
  [ 7] _pthread_start
  [ 8] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] semaphore_wait_trap
  [ 1] WorkerThreads::run_task
  [ 2] HeapRegionManager::rebuild_free_list
  [ 3] G1CollectedHeap::rebuild_free_region_list
  [ 4] G1YoungCollector::post_evacuate_collection_set
  [ 5] G1YoungCollector::collect
  [ 6] G1CollectedHeap::do_collection_pause_at_safepoint_helper
  [ 7] G1CollectedHeap::do_collection_pause_at_safepoint
  [ 8] VM_G1CollectForAllocation::doit
  [ 9] VM_Operation::evaluate
  [10] VMThread::evaluate_operation
  [11] VMThread::inner_execute
  [12] VMThread::run
  [13] Thread::call_run
  [14] thread_native_entry
  [15] _pthread_start
  [16] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] semaphore_wait_trap
  [ 1] WorkerThreads::run_task
  [ 2] G1YoungCollector::evacuate_initial_collection_set
  [ 3] G1YoungCollector::collect
  [ 4] G1CollectedHeap::do_collection_pause_at_safepoint_helper
  [ 5] G1CollectedHeap::do_collection_pause_at_safepoint
  [ 6] VM_G1CollectForAllocation::doit
  [ 7] VM_Operation::evaluate
  [ 8] VMThread::evaluate_operation
  [ 9] VMThread::inner_execute
  [10] VMThread::run
  [11] Thread::call_run
  [12] thread_native_entry
  [13] _pthread_start
  [14] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] CompositeElapsedCounterSource::now
  [ 1] G1RootProcessor::process_vm_roots
  [ 2] G1RootProcessor::evacuate_roots
  [ 3] G1EvacuateRegionsTask::scan_roots
  [ 4] G1EvacuateRegionsBaseTask::work
  [ 5] WorkerThread::run
  [ 6] Thread::call_run
  [ 7] thread_native_entry
  [ 8] _pthread_start
  [ 9] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] semaphore_signal_trap
  [ 1] WorkerThreads::run_task
  [ 2] G1YoungCollector::pre_evacuate_collection_set
  [ 3] G1YoungCollector::collect
  [ 4] G1CollectedHeap::do_collection_pause_at_safepoint_helper
  [ 5] G1CollectedHeap::do_collection_pause_at_safepoint
  [ 6] VM_G1CollectForAllocation::doit
  [ 7] VM_Operation::evaluate
  [ 8] VMThread::evaluate_operation
  [ 9] VMThread::inner_execute
  [10] VMThread::run
  [11] Thread::call_run
  [12] thread_native_entry
  [13] _pthread_start
  [14] thread_start

          ns  percent  samples  top
  ----------  -------  -------  ---
 10150000000   23.37%     1015  java_lang_Throwable::fill_in_stack_trace
  4150000000    9.55%      415  BacktraceBuilder::push
  3000000000    6.91%      300  frame::sender_for_interpreter_frame
  2700000000    6.22%      270  CodeHeap::find_blob
  2460000000    5.66%      246  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<2383974ull, G1BarrierSet>, (AccessInternal::BarrierType)1, 2383974ull>::oop_access_barrier
  1840000000    4.24%      184  frame::sender_raw
  1650000000    3.80%      165  CodeCache::find_blob
  1390000000    3.20%      139  ObjArrayKlass::allocate
  1140000000    2.62%      114  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ull, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ull>::oop_access_barrier
   860000000    1.98%       86  CodeBlob::is_upcall_stub
   760000000    1.75%       76  Method::bci_from
   750000000    1.73%       75  MemAllocator::allocate
   710000000    1.63%       71  BacktraceBuilder::expand
   710000000    1.63%       71  java.lang.Throwable.fillInStackTrace
   650000000    1.50%       65  frame::sender_for_compiled_frame
   640000000    1.47%       64  _platform_bzero$VARIANT$Haswell
   600000000    1.38%       60  Continuation::is_return_barrier_entry
   550000000    1.27%       55  MemAllocator::Allocation::notify_allocation
   520000000    1.20%       52  JVM_FillInStackTrace
   480000000    1.10%       48  TypeArrayKlass::allocate_common
   440000000    1.01%       44  ObjArrayAllocator::initialize
   420000000    0.97%       42  Continuation::is_continuation_enterSpecial
   400000000    0.92%       40  frame::interpreter_frame_bcp
   400000000    0.92%       40  Method::bcp_from
   370000000    0.85%       37  frame::interpreter_frame_method
   350000000    0.81%       35  JavaThread::pd_last_frame
   340000000    0.78%       34  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<2383974ull, G1BarrierSet>, (AccessInternal::BarrierType)3, 2383974ull>::oop_access_barrier
   330000000    0.76%       33  java.lang.Throwable.<init>
   310000000    0.71%       31  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<287270ull, G1BarrierSet>, (AccessInternal::BarrierType)1, 287270ull>::oop_access_barrier
   300000000    0.69%       30  Klass::check_array_allocation_length
   300000000    0.69%       30  Universe::should_fill_in_stack_trace
   300000000    0.69%       30  nmethod::metadata_at
   290000000    0.67%       29  java.util.concurrent.atomic.AtomicLong.compareAndSet
   280000000    0.64%       28  nmethod::metadata_addr_at
   220000000    0.51%       22  MemAllocator::Allocation::notify_allocation_jvmti_sampler
   200000000    0.46%       20  ThreadShadow::clear_pending_exception
   200000000    0.46%       20  MemAllocator::Allocation::check_out_of_memory
   190000000    0.44%       19  java.util.Random.next
   180000000    0.41%       18  semaphore_wait_trap
   170000000    0.39%       17  com.panfutov.Service.doWithException
   160000000    0.37%       16  CollectedHeap::array_allocate
   150000000    0.35%       15  tlv_get_addr
   140000000    0.32%       14  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<286822ull, G1BarrierSet>, (AccessInternal::BarrierType)1, 286822ull>::oop_access_barrier
   100000000    0.23%       10  frame::entry_frame_is_first
    80000000    0.18%        8  com.panfutov.jmh_generated.Benchmark_exceptions_jmhTest.exceptions_avgt_jmhStub
    80000000    0.18%        8  JavaFrameAnchor::make_walkable
    70000000    0.16%        7  nmethod::scopes_pcs_begin
    70000000    0.16%        7  PcDescCache::find_pc_desc
    70000000    0.16%        7  RegisterMap::RegisterMap
    60000000    0.14%        6  PreserveExceptionMark::PreserveExceptionMark
    60000000    0.14%        6  java.lang.Throwable.getMessage
    60000000    0.14%        6  oopDesc::release_obj_field_put
    50000000    0.12%        5  nmethod::scopes_pcs_end
    40000000    0.09%        4  __psynch_cvwait
    40000000    0.09%        4  PreserveExceptionMark::~PreserveExceptionMark
    40000000    0.09%        4  methodHandle::~methodHandle
    30000000    0.07%        3  pthread_mutex_lock
    30000000    0.07%        3  oopFactory::new_intArray
    30000000    0.07%        3  oopFactory::new_objectArray
    20000000    0.05%        2  oopFactory::new_symbolArray
    20000000    0.05%        2  PcDescContainer::find_pc_desc_internal
    20000000    0.05%        2  com.panfutov.Benchmark.exceptions
    20000000    0.05%        2  com.panfutov.Service$BusinessException.<init>
    20000000    0.05%        2  pthread_mutex_trylock
    20000000    0.05%        2  semaphore_signal_trap
    20000000    0.05%        2  _os_semaphore_wait.cold.1
    20000000    0.05%        2  __gettimeofday
    10000000    0.02%        1  HeapRegionClaimer::claim_region
    10000000    0.02%        1  HeapRegionManager::allocate_free_region
    10000000    0.02%        1  G1YoungGCTraceTime::G1YoungGCTraceTime
    10000000    0.02%        1  java.util.concurrent.ConcurrentHashMap.replaceNode
    10000000    0.02%        1  G1MonitoringSupport::recalculate_sizes
    10000000    0.02%        1  G1MergeHeapRootsTask::G1MergeLogBufferCardsClosure::do_card_ptr
    10000000    0.02%        1  ZThread::~ZThread
    10000000    0.02%        1  G1MergeHeapRootsTask::G1ClearBitmapClosure::do_heap_region
    10000000    0.02%        1  CompositeElapsedCounterSource::now
    10000000    0.02%        1  PhaseChaitin::build_ifg_virtual
    10000000    0.02%        1  SpinPause
    10000000    0.02%        1  Java_java_lang_Throwable_fillInStackTrace
    10000000    0.02%        1  LIR_List::branch
    10000000    0.02%        1  MasterFreeRegionListChecker::check_mt_safety
    10000000    0.02%        1  oopFactory::new_shortArray
    10000000    0.02%        1  OopStorage::BasicParState::BasicParState
    10000000    0.02%        1  MemAllocator::mem_allocate_inside_tlab_slow
    10000000    0.02%        1  collapse
    10000000    0.02%        1  OopMapCache::lookup
    10000000    0.02%        1  _nanov2_free
    10000000    0.02%        1  szone_try_free_default
    10000000    0.02%        1  HeapRegionManager::par_iterate
Async profiler results:
  /Users/artyom/git/exceptions-vs-jresult-benchmark/exceptions-vs-jresult-benchmark/untitled/com.panfutov.Benchmark.exceptions-AverageTime/summary-cpu.txt


# JMH version: 1.37
# VM version: JDK 21.0.1, OpenJDK 64-Bit Server VM, 21.0.1+12-29
# VM invoker: /Users/artyom/Library/Java/JavaVirtualMachines/openjdk-21.0.1/Contents/Home/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA CE.app/Contents/lib/idea_rt.jar=60736:/Applications/IntelliJ IDEA CE.app/Contents/bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.panfutov.Benchmark.jresult

# Run progress: 50.00% complete, ETA 00:08:25
# Fork: 1 of 5
# Preparing profilers: AsyncProfiler
# Warmup Iteration   1: 13.888 ns/op
# Warmup Iteration   2: 13.886 ns/op
# Warmup Iteration   3: 13.845 ns/op
# Warmup Iteration   4: 13.864 ns/op
# Warmup Iteration   5: 13.744 ns/op
Iteration   1: 13.785 ns/op
Iteration   2: 14.010 ns/op
Iteration   3: 13.810 ns/op
Iteration   4: 13.972 ns/op
Iteration   5: 14.054 ns/op
                 async: (text only)

# Processing profiler results: AsyncProfiler

# Run progress: 60.00% complete, ETA 00:06:44
# Fork: 2 of 5
# Preparing profilers: AsyncProfiler
# Warmup Iteration   1: 13.813 ns/op
# Warmup Iteration   2: 13.825 ns/op
# Warmup Iteration   3: 13.793 ns/op
# Warmup Iteration   4: 13.707 ns/op
# Warmup Iteration   5: 13.817 ns/op
Iteration   1: 13.870 ns/op
Iteration   2: 13.809 ns/op
Iteration   3: 14.047 ns/op
Iteration   4: 13.742 ns/op
Iteration   5: 13.877 ns/op
                 async: (text only)

# Processing profiler results: AsyncProfiler

# Run progress: 70.00% complete, ETA 00:05:03
# Fork: 3 of 5
# Preparing profilers: AsyncProfiler
# Warmup Iteration   1: 13.871 ns/op
# Warmup Iteration   2: 13.769 ns/op
# Warmup Iteration   3: 13.779 ns/op
# Warmup Iteration   4: 13.695 ns/op
# Warmup Iteration   5: 13.952 ns/op
Iteration   1: 13.828 ns/op
Iteration   2: 13.817 ns/op
Iteration   3: 13.798 ns/op
Iteration   4: 13.777 ns/op
Iteration   5: 13.734 ns/op
                 async: (text only)

# Processing profiler results: AsyncProfiler

# Run progress: 80.00% complete, ETA 00:03:22
# Fork: 4 of 5
# Preparing profilers: AsyncProfiler
# Warmup Iteration   1: 13.776 ns/op
# Warmup Iteration   2: 13.748 ns/op
# Warmup Iteration   3: 13.934 ns/op
# Warmup Iteration   4: 13.884 ns/op
# Warmup Iteration   5: 13.883 ns/op
Iteration   1: 13.782 ns/op
Iteration   2: 13.864 ns/op
Iteration   3: 13.898 ns/op
Iteration   4: 13.635 ns/op
Iteration   5: 13.791 ns/op
                 async: (text only)

# Processing profiler results: AsyncProfiler

# Run progress: 90.00% complete, ETA 00:01:41
# Fork: 5 of 5
# Preparing profilers: AsyncProfiler
# Warmup Iteration   1: 13.754 ns/op
# Warmup Iteration   2: 13.785 ns/op
# Warmup Iteration   3: 13.629 ns/op
# Warmup Iteration   4: 13.532 ns/op
# Warmup Iteration   5: 13.888 ns/op
Iteration   1: 13.869 ns/op
Iteration   2: 13.783 ns/op
Iteration   3: 13.973 ns/op
Iteration   4: 13.965 ns/op
Iteration   5: 13.724 ns/op
                 async: (text only)

# Processing profiler results: AsyncProfiler


Result "com.panfutov.Benchmark.jresult":
  13.849 ±(99.9%) 0.080 ns/op [Average]
  (min, avg, max) = (13.635, 13.849, 14.054), stdev = 0.106
  CI (99.9%): [13.769, 13.928] (assumes normal distribution)

Secondary result "com.panfutov.Benchmark.jresult:async":
--- Execution profile ---
Total samples       : 4343

--- 21160000000 ns (48.72%), 2116 samples
  [ 0] java.util.concurrent.atomic.AtomicLong.compareAndSet
  [ 1] java.util.Random.next
  [ 2] java.util.Random.nextBoolean
  [ 3] com.panfutov.Service.doWithResult
  [ 4] com.panfutov.Benchmark.jresult
  [ 5] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 6] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 7] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 8] java.lang.invoke.LambdaForm$MH.0x000000012f02d800.invoke
  [ 9] java.lang.invoke.LambdaForm$MH.0x000000012f002800.invokeExact_MT
  [10] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [11] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.runWith
  [21] java.lang.Thread.run

--- 9290000000 ns (21.39%), 929 samples
  [ 0] java.util.Random.next
  [ 1] java.util.Random.nextBoolean
  [ 2] com.panfutov.Service.doWithResult
  [ 3] com.panfutov.Benchmark.jresult
  [ 4] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 5] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 6] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 7] java.lang.invoke.LambdaForm$MH.0x000000012f02d800.invoke
  [ 8] java.lang.invoke.LambdaForm$MH.0x000000012f002800.invokeExact_MT
  [ 9] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [10] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.runWith
  [20] java.lang.Thread.run

--- 3590000000 ns (8.27%), 359 samples
  [ 0] com.panfutov.Service.doWithResult
  [ 1] com.panfutov.Benchmark.jresult
  [ 2] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 3] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 4] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 5] java.lang.invoke.LambdaForm$MH.0x000000012f02d800.invoke
  [ 6] java.lang.invoke.LambdaForm$MH.0x000000012f002800.invokeExact_MT
  [ 7] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 8] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.runWith
  [18] java.lang.Thread.run

--- 2540000000 ns (5.85%), 254 samples
  [ 0] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 1] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 2] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 3] java.lang.invoke.LambdaForm$MH.0x000000012f02d800.invoke
  [ 4] java.lang.invoke.LambdaForm$MH.0x000000012f002800.invokeExact_MT
  [ 5] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 6] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 7] java.lang.reflect.Method.invoke
  [ 8] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.Executors$RunnableAdapter.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.ThreadPoolExecutor.runWorker
  [14] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [15] java.lang.Thread.runWith
  [16] java.lang.Thread.run

--- 1400000000 ns (3.22%), 140 samples
  [ 0] com.panfutov.result.Result.isFailure
  [ 1] com.panfutov.result.Result.ifFailure
  [ 2] com.panfutov.Benchmark.jresult
  [ 3] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 4] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 5] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 6] java.lang.invoke.LambdaForm$MH.0x000000012f02d800.invoke
  [ 7] java.lang.invoke.LambdaForm$MH.0x000000012f002800.invokeExact_MT
  [ 8] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 9] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [10] java.lang.reflect.Method.invoke
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.Executors$RunnableAdapter.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.ThreadPoolExecutor.runWorker
  [17] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [18] java.lang.Thread.runWith
  [19] java.lang.Thread.run

--- 1150000000 ns (2.65%), 115 samples
  [ 0] com.panfutov.result.Result.isSuccess
  [ 1] com.panfutov.result.Result.isFailure
  [ 2] com.panfutov.result.Result.ifFailure
  [ 3] com.panfutov.Benchmark.jresult
  [ 4] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 5] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 6] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 7] java.lang.invoke.LambdaForm$MH.0x000000012f02d800.invoke
  [ 8] java.lang.invoke.LambdaForm$MH.0x000000012f002800.invokeExact_MT
  [ 9] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [10] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.runWith
  [20] java.lang.Thread.run

--- 960000000 ns (2.21%), 96 samples
  [ 0] java.util.Random.next
  [ 1] java.util.Random.nextBoolean
  [ 2] com.panfutov.Service.doWithResult
  [ 3] com.panfutov.Benchmark.jresult
  [ 4] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 5] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 6] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 7] java.lang.invoke.LambdaForm$MH.0x000000012f02d800.invoke
  [ 8] java.lang.invoke.LambdaForm$MH.0x000000012f002800.invokeExact_MT
  [ 9] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [10] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.runWith
  [20] java.lang.Thread.run

--- 920000000 ns (2.12%), 92 samples
  [ 0] com.panfutov.Service.doWithResult
  [ 1] com.panfutov.Benchmark.jresult
  [ 2] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 3] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 4] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 5] java.lang.invoke.LambdaForm$MH.0x000000012f02d800.invoke
  [ 6] java.lang.invoke.LambdaForm$MH.0x000000012f002800.invokeExact_MT
  [ 7] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 8] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.runWith
  [18] java.lang.Thread.run

--- 710000000 ns (1.63%), 71 samples
  [ 0] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 1] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 2] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 3] java.lang.invoke.LambdaForm$MH.0x000000012f02d800.invoke
  [ 4] java.lang.invoke.LambdaForm$MH.0x000000012f002800.invokeExact_MT
  [ 5] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 6] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 7] java.lang.reflect.Method.invoke
  [ 8] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.Executors$RunnableAdapter.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.ThreadPoolExecutor.runWorker
  [14] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [15] java.lang.Thread.runWith
  [16] java.lang.Thread.run

--- 540000000 ns (1.24%), 54 samples
  [ 0] com.panfutov.Service.doWithResult
  [ 1] com.panfutov.Benchmark.jresult
  [ 2] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 3] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 4] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 5] java.lang.invoke.LambdaForm$MH.0x000000012f02d800.invoke
  [ 6] java.lang.invoke.LambdaForm$MH.0x000000012f002800.invokeExact_MT
  [ 7] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 8] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.runWith
  [18] java.lang.Thread.run

--- 510000000 ns (1.17%), 51 samples
  [ 0] java.util.Random.next
  [ 1] java.util.Random.nextBoolean
  [ 2] com.panfutov.Service.doWithResult
  [ 3] com.panfutov.Benchmark.jresult
  [ 4] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 5] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 6] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 7] java.lang.invoke.LambdaForm$MH.0x000000012f02d800.invoke
  [ 8] java.lang.invoke.LambdaForm$MH.0x000000012f002800.invokeExact_MT
  [ 9] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [10] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.runWith
  [20] java.lang.Thread.run

--- 480000000 ns (1.11%), 48 samples
  [ 0] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 1] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 2] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 3] java.lang.invoke.LambdaForm$MH.0x000000012f02d800.invoke
  [ 4] java.lang.invoke.LambdaForm$MH.0x000000012f002800.invokeExact_MT
  [ 5] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 6] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 7] java.lang.reflect.Method.invoke
  [ 8] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.Executors$RunnableAdapter.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.ThreadPoolExecutor.runWorker
  [14] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [15] java.lang.Thread.runWith
  [16] java.lang.Thread.run

--- 100000000 ns (0.23%), 10 samples
  [ 0] __psynch_cvwait
  [ 1] PlatformMonitor::wait
  [ 2] Monitor::wait_without_safepoint_check
  [ 3] WatcherThread::sleep
  [ 4] WatcherThread::run
  [ 5] Thread::call_run
  [ 6] thread_native_entry
  [ 7] _pthread_start
  [ 8] thread_start

--- 30000000 ns (0.07%), 3 samples
  [ 0] __psynch_cvwait
  [ 1] PlatformMonitor::wait
  [ 2] Monitor::wait_without_safepoint_check
  [ 3] VMThread::wait_for_operation
  [ 4] VMThread::run
  [ 5] Thread::call_run
  [ 6] thread_native_entry
  [ 7] _pthread_start
  [ 8] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] __psynch_cvsignal
  [ 1] Unsafe_Unpark
  [ 2] jdk.internal.misc.Unsafe.unpark
  [ 3] java.util.concurrent.locks.LockSupport.unpark
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer.release
  [ 6] java.util.concurrent.locks.ReentrantLock.unlock
  [ 7] java.util.concurrent.LinkedBlockingQueue.signalNotEmpty
  [ 8] java.util.concurrent.LinkedBlockingQueue.offer
  [ 9] java.util.AbstractQueue.add
  [10] java.util.concurrent.ExecutorCompletionService$QueueingFuture.done
  [11] java.util.concurrent.FutureTask.finishCompletion
  [12] java.util.concurrent.FutureTask.set
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.ThreadPoolExecutor.runWorker
  [15] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [16] java.lang.Thread.runWith
  [17] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] __gettimeofday
  [ 1] PlatformMonitor::wait
  [ 2] Monitor::wait_without_safepoint_check
  [ 3] MonitorDeflationThread::monitor_deflation_thread_entry
  [ 4] JavaThread::thread_main_inner
  [ 5] Thread::call_run
  [ 6] thread_native_entry
  [ 7] _pthread_start
  [ 8] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] StatSamplerTask::task
  [ 1] PeriodicTask::real_time_tick
  [ 2] WatcherThread::run
  [ 3] Thread::call_run
  [ 4] thread_native_entry
  [ 5] _pthread_start
  [ 6] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] com.panfutov.Benchmark.jresult
  [ 1] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 2] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 3] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 4] java.lang.invoke.LambdaForm$MH.0x000000012f02d800.invoke
  [ 5] java.lang.invoke.LambdaForm$MH.0x000000012f002800.invokeExact_MT
  [ 6] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 7] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 8] java.lang.reflect.Method.invoke
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] java.util.concurrent.FutureTask.run
  [12] java.util.concurrent.Executors$RunnableAdapter.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.ThreadPoolExecutor.runWorker
  [15] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [16] java.lang.Thread.runWith
  [17] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] __psynch_cvwait
  [ 1] PlatformMonitor::wait
  [ 2] Monitor::wait_without_safepoint_check
  [ 3] MonitorDeflationThread::monitor_deflation_thread_entry
  [ 4] JavaThread::thread_main_inner
  [ 5] Thread::call_run
  [ 6] thread_native_entry
  [ 7] _pthread_start
  [ 8] thread_start

          ns  percent  samples  top
  ----------  -------  -------  ---
 21160000000   48.72%     2116  java.util.concurrent.atomic.AtomicLong.compareAndSet
 10760000000   24.78%     1076  java.util.Random.next
  5050000000   11.63%      505  com.panfutov.Service.doWithResult
  3730000000    8.59%      373  com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  1400000000    3.22%      140  com.panfutov.result.Result.isFailure
  1150000000    2.65%      115  com.panfutov.result.Result.isSuccess
   140000000    0.32%       14  __psynch_cvwait
    10000000    0.02%        1  __psynch_cvsignal
    10000000    0.02%        1  com.panfutov.Benchmark.jresult
    10000000    0.02%        1  __gettimeofday
    10000000    0.02%        1  StatSamplerTask::task
Async profiler results:
  /Users/artyom/git/exceptions-vs-jresult-benchmark/exceptions-vs-jresult-benchmark/untitled/com.panfutov.Benchmark.jresult-AverageTime/summary-cpu.txt
--- Execution profile ---
Total samples       : 4323
unknown_Java        : 1 (0.02%)

--- 21320000000 ns (49.32%), 2132 samples
  [ 0] java.util.concurrent.atomic.AtomicLong.compareAndSet
  [ 1] java.util.Random.next
  [ 2] java.util.Random.nextBoolean
  [ 3] com.panfutov.Service.doWithResult
  [ 4] com.panfutov.Benchmark.jresult
  [ 5] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 6] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 7] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 8] java.lang.invoke.LambdaForm$MH.0x000000012302e400.invoke
  [ 9] java.lang.invoke.LambdaForm$MH.0x0000000123002800.invokeExact_MT
  [10] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [11] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.runWith
  [21] java.lang.Thread.run

--- 9050000000 ns (20.93%), 905 samples
  [ 0] java.util.Random.next
  [ 1] java.util.Random.nextBoolean
  [ 2] com.panfutov.Service.doWithResult
  [ 3] com.panfutov.Benchmark.jresult
  [ 4] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 5] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 6] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 7] java.lang.invoke.LambdaForm$MH.0x000000012302e400.invoke
  [ 8] java.lang.invoke.LambdaForm$MH.0x0000000123002800.invokeExact_MT
  [ 9] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [10] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.runWith
  [20] java.lang.Thread.run

--- 3730000000 ns (8.63%), 373 samples
  [ 0] com.panfutov.Service.doWithResult
  [ 1] com.panfutov.Benchmark.jresult
  [ 2] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 3] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 4] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 5] java.lang.invoke.LambdaForm$MH.0x000000012302e400.invoke
  [ 6] java.lang.invoke.LambdaForm$MH.0x0000000123002800.invokeExact_MT
  [ 7] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 8] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.runWith
  [18] java.lang.Thread.run

--- 2950000000 ns (6.82%), 295 samples
  [ 0] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 1] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 2] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 3] java.lang.invoke.LambdaForm$MH.0x000000012302e400.invoke
  [ 4] java.lang.invoke.LambdaForm$MH.0x0000000123002800.invokeExact_MT
  [ 5] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 6] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 7] java.lang.reflect.Method.invoke
  [ 8] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.Executors$RunnableAdapter.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.ThreadPoolExecutor.runWorker
  [14] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [15] java.lang.Thread.runWith
  [16] java.lang.Thread.run

--- 1830000000 ns (4.23%), 183 samples
  [ 0] com.panfutov.result.Result.isFailure
  [ 1] com.panfutov.result.Result.ifFailure
  [ 2] com.panfutov.Benchmark.jresult
  [ 3] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 4] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 5] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 6] java.lang.invoke.LambdaForm$MH.0x000000012302e400.invoke
  [ 7] java.lang.invoke.LambdaForm$MH.0x0000000123002800.invokeExact_MT
  [ 8] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 9] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [10] java.lang.reflect.Method.invoke
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.Executors$RunnableAdapter.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.ThreadPoolExecutor.runWorker
  [17] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [18] java.lang.Thread.runWith
  [19] java.lang.Thread.run

--- 1240000000 ns (2.87%), 124 samples
  [ 0] com.panfutov.Service.doWithResult
  [ 1] com.panfutov.Benchmark.jresult
  [ 2] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 3] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 4] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 5] java.lang.invoke.LambdaForm$MH.0x000000012302e400.invoke
  [ 6] java.lang.invoke.LambdaForm$MH.0x0000000123002800.invokeExact_MT
  [ 7] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 8] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.runWith
  [18] java.lang.Thread.run

--- 1030000000 ns (2.38%), 103 samples
  [ 0] java.util.Random.next
  [ 1] java.util.Random.nextBoolean
  [ 2] com.panfutov.Service.doWithResult
  [ 3] com.panfutov.Benchmark.jresult
  [ 4] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 5] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 6] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 7] java.lang.invoke.LambdaForm$MH.0x000000012302e400.invoke
  [ 8] java.lang.invoke.LambdaForm$MH.0x0000000123002800.invokeExact_MT
  [ 9] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [10] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.runWith
  [20] java.lang.Thread.run

--- 500000000 ns (1.16%), 50 samples
  [ 0] com.panfutov.result.Result.isSuccess
  [ 1] com.panfutov.result.Result.isFailure
  [ 2] com.panfutov.result.Result.ifFailure
  [ 3] com.panfutov.Benchmark.jresult
  [ 4] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 5] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 6] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 7] java.lang.invoke.LambdaForm$MH.0x000000012302e400.invoke
  [ 8] java.lang.invoke.LambdaForm$MH.0x0000000123002800.invokeExact_MT
  [ 9] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [10] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.runWith
  [20] java.lang.Thread.run

--- 490000000 ns (1.13%), 49 samples
  [ 0] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 1] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 2] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 3] java.lang.invoke.LambdaForm$MH.0x000000012302e400.invoke
  [ 4] java.lang.invoke.LambdaForm$MH.0x0000000123002800.invokeExact_MT
  [ 5] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 6] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 7] java.lang.reflect.Method.invoke
  [ 8] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.Executors$RunnableAdapter.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.ThreadPoolExecutor.runWorker
  [14] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [15] java.lang.Thread.runWith
  [16] java.lang.Thread.run

--- 340000000 ns (0.79%), 34 samples
  [ 0] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 1] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 2] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 3] java.lang.invoke.LambdaForm$MH.0x000000012302e400.invoke
  [ 4] java.lang.invoke.LambdaForm$MH.0x0000000123002800.invokeExact_MT
  [ 5] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 6] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 7] java.lang.reflect.Method.invoke
  [ 8] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.Executors$RunnableAdapter.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.ThreadPoolExecutor.runWorker
  [14] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [15] java.lang.Thread.runWith
  [16] java.lang.Thread.run

--- 320000000 ns (0.74%), 32 samples
  [ 0] java.util.Random.next
  [ 1] java.util.Random.nextBoolean
  [ 2] com.panfutov.Service.doWithResult
  [ 3] com.panfutov.Benchmark.jresult
  [ 4] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 5] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 6] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 7] java.lang.invoke.LambdaForm$MH.0x000000012302e400.invoke
  [ 8] java.lang.invoke.LambdaForm$MH.0x0000000123002800.invokeExact_MT
  [ 9] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [10] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.runWith
  [20] java.lang.Thread.run

--- 220000000 ns (0.51%), 22 samples
  [ 0] com.panfutov.Service.doWithResult
  [ 1] com.panfutov.Benchmark.jresult
  [ 2] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 3] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 4] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 5] java.lang.invoke.LambdaForm$MH.0x000000012302e400.invoke
  [ 6] java.lang.invoke.LambdaForm$MH.0x0000000123002800.invokeExact_MT
  [ 7] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 8] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.runWith
  [18] java.lang.Thread.run

--- 110000000 ns (0.25%), 11 samples
  [ 0] __psynch_cvwait
  [ 1] PlatformMonitor::wait
  [ 2] Monitor::wait_without_safepoint_check
  [ 3] WatcherThread::sleep
  [ 4] WatcherThread::run
  [ 5] Thread::call_run
  [ 6] thread_native_entry
  [ 7] _pthread_start
  [ 8] thread_start

--- 40000000 ns (0.09%), 4 samples
  [ 0] com.panfutov.Benchmark.jresult
  [ 1] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 2] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 3] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 4] java.lang.invoke.LambdaForm$MH.0x000000012302e400.invoke
  [ 5] java.lang.invoke.LambdaForm$MH.0x0000000123002800.invokeExact_MT
  [ 6] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 7] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 8] java.lang.reflect.Method.invoke
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] java.util.concurrent.FutureTask.run
  [12] java.util.concurrent.Executors$RunnableAdapter.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.ThreadPoolExecutor.runWorker
  [15] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [16] java.lang.Thread.runWith
  [17] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.util.concurrent.locks.LockSupport.parkNanos
  [ 1] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [ 2] java.util.concurrent.LinkedBlockingQueue.poll
  [ 3] java.util.concurrent.ExecutorCompletionService.poll
  [ 4] org.openjdk.jmh.runner.BenchmarkHandler.runIteration
  [ 5] org.openjdk.jmh.runner.BaseRunner.runBenchmark
  [ 6] org.openjdk.jmh.runner.BaseRunner.runBenchmark
  [ 7] org.openjdk.jmh.runner.BaseRunner.doSingle
  [ 8] org.openjdk.jmh.runner.BaseRunner.runBenchmarksForked
  [ 9] org.openjdk.jmh.runner.ForkedRunner.run
  [10] org.openjdk.jmh.runner.ForkedMain.main

--- 10000000 ns (0.02%), 1 sample
  [ 0] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 1] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 2] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 3] java.lang.invoke.LambdaForm$MH.0x000000012302e400.invoke
  [ 4] java.lang.invoke.LambdaForm$MH.0x0000000123002800.invokeExact_MT
  [ 5] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 6] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 7] java.lang.reflect.Method.invoke
  [ 8] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.Executors$RunnableAdapter.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.ThreadPoolExecutor.runWorker
  [14] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [15] java.lang.Thread.runWith
  [16] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] CodeCache::find_blob
  [ 1] BarrierSetNMethod::nmethod_stub_entry_barrier
  [ 2] nmethod_entry_barrier
  [ 3] [unknown_Java]

--- 10000000 ns (0.02%), 1 sample
  [ 0] mach_absolute_time
  [ 1] WatcherThread::sleep
  [ 2] WatcherThread::run
  [ 3] Thread::call_run
  [ 4] thread_native_entry
  [ 5] _pthread_start
  [ 6] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] __semwait_signal
  [ 1] os::naked_short_nanosleep
  [ 2] SafepointSynchronize::synchronize_threads
  [ 3] SafepointSynchronize::begin
  [ 4] VMThread::inner_execute
  [ 5] VMThread::run
  [ 6] Thread::call_run
  [ 7] thread_native_entry
  [ 8] _pthread_start
  [ 9] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] __psynch_cvwait
  [ 1] PlatformMonitor::wait
  [ 2] Monitor::wait_without_safepoint_check
  [ 3] MonitorDeflationThread::monitor_deflation_thread_entry
  [ 4] JavaThread::thread_main_inner
  [ 5] Thread::call_run
  [ 6] thread_native_entry
  [ 7] _pthread_start
  [ 8] thread_start

          ns  percent  samples  top
  ----------  -------  -------  ---
 21320000000   49.32%     2132  java.util.concurrent.atomic.AtomicLong.compareAndSet
 10400000000   24.06%     1040  java.util.Random.next
  5190000000   12.01%      519  com.panfutov.Service.doWithResult
  3790000000    8.77%      379  com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  1830000000    4.23%      183  com.panfutov.result.Result.isFailure
   500000000    1.16%       50  com.panfutov.result.Result.isSuccess
   120000000    0.28%       12  __psynch_cvwait
    40000000    0.09%        4  com.panfutov.Benchmark.jresult
    10000000    0.02%        1  CodeCache::find_blob
    10000000    0.02%        1  __semwait_signal
    10000000    0.02%        1  java.util.concurrent.locks.LockSupport.parkNanos
    10000000    0.02%        1  mach_absolute_time
Async profiler results:
  /Users/artyom/git/exceptions-vs-jresult-benchmark/exceptions-vs-jresult-benchmark/untitled/com.panfutov.Benchmark.jresult-AverageTime/summary-cpu.txt
--- Execution profile ---
Total samples       : 4338

--- 21570000000 ns (49.72%), 2157 samples
  [ 0] java.util.concurrent.atomic.AtomicLong.compareAndSet
  [ 1] java.util.Random.next
  [ 2] java.util.Random.nextBoolean
  [ 3] com.panfutov.Service.doWithResult
  [ 4] com.panfutov.Benchmark.jresult
  [ 5] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 6] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 7] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 8] java.lang.invoke.LambdaForm$MH.0x000000012802e400.invoke
  [ 9] java.lang.invoke.LambdaForm$MH.0x0000000128002800.invokeExact_MT
  [10] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [11] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.runWith
  [21] java.lang.Thread.run

--- 9000000000 ns (20.75%), 900 samples
  [ 0] java.util.Random.next
  [ 1] java.util.Random.nextBoolean
  [ 2] com.panfutov.Service.doWithResult
  [ 3] com.panfutov.Benchmark.jresult
  [ 4] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 5] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 6] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 7] java.lang.invoke.LambdaForm$MH.0x000000012802e400.invoke
  [ 8] java.lang.invoke.LambdaForm$MH.0x0000000128002800.invokeExact_MT
  [ 9] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [10] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.runWith
  [20] java.lang.Thread.run

--- 3780000000 ns (8.71%), 378 samples
  [ 0] com.panfutov.Service.doWithResult
  [ 1] com.panfutov.Benchmark.jresult
  [ 2] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 3] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 4] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 5] java.lang.invoke.LambdaForm$MH.0x000000012802e400.invoke
  [ 6] java.lang.invoke.LambdaForm$MH.0x0000000128002800.invokeExact_MT
  [ 7] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 8] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.runWith
  [18] java.lang.Thread.run

--- 2970000000 ns (6.85%), 297 samples
  [ 0] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 1] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 2] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 3] java.lang.invoke.LambdaForm$MH.0x000000012802e400.invoke
  [ 4] java.lang.invoke.LambdaForm$MH.0x0000000128002800.invokeExact_MT
  [ 5] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 6] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 7] java.lang.reflect.Method.invoke
  [ 8] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.Executors$RunnableAdapter.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.ThreadPoolExecutor.runWorker
  [14] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [15] java.lang.Thread.runWith
  [16] java.lang.Thread.run

--- 2210000000 ns (5.09%), 221 samples
  [ 0] com.panfutov.result.Result.isFailure
  [ 1] com.panfutov.result.Result.ifFailure
  [ 2] com.panfutov.Benchmark.jresult
  [ 3] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 4] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 5] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 6] java.lang.invoke.LambdaForm$MH.0x000000012802e400.invoke
  [ 7] java.lang.invoke.LambdaForm$MH.0x0000000128002800.invokeExact_MT
  [ 8] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 9] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [10] java.lang.reflect.Method.invoke
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.Executors$RunnableAdapter.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.ThreadPoolExecutor.runWorker
  [17] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [18] java.lang.Thread.runWith
  [19] java.lang.Thread.run

--- 850000000 ns (1.96%), 85 samples
  [ 0] java.util.Random.next
  [ 1] java.util.Random.nextBoolean
  [ 2] com.panfutov.Service.doWithResult
  [ 3] com.panfutov.Benchmark.jresult
  [ 4] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 5] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 6] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 7] java.lang.invoke.LambdaForm$MH.0x000000012802e400.invoke
  [ 8] java.lang.invoke.LambdaForm$MH.0x0000000128002800.invokeExact_MT
  [ 9] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [10] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.runWith
  [20] java.lang.Thread.run

--- 820000000 ns (1.89%), 82 samples
  [ 0] com.panfutov.Service.doWithResult
  [ 1] com.panfutov.Benchmark.jresult
  [ 2] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 3] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 4] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 5] java.lang.invoke.LambdaForm$MH.0x000000012802e400.invoke
  [ 6] java.lang.invoke.LambdaForm$MH.0x0000000128002800.invokeExact_MT
  [ 7] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 8] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.runWith
  [18] java.lang.Thread.run

--- 560000000 ns (1.29%), 56 samples
  [ 0] com.panfutov.result.Result.isSuccess
  [ 1] com.panfutov.result.Result.isFailure
  [ 2] com.panfutov.result.Result.ifFailure
  [ 3] com.panfutov.Benchmark.jresult
  [ 4] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 5] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 6] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 7] java.lang.invoke.LambdaForm$MH.0x000000012802e400.invoke
  [ 8] java.lang.invoke.LambdaForm$MH.0x0000000128002800.invokeExact_MT
  [ 9] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [10] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.runWith
  [20] java.lang.Thread.run

--- 500000000 ns (1.15%), 50 samples
  [ 0] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 1] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 2] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 3] java.lang.invoke.LambdaForm$MH.0x000000012802e400.invoke
  [ 4] java.lang.invoke.LambdaForm$MH.0x0000000128002800.invokeExact_MT
  [ 5] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 6] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 7] java.lang.reflect.Method.invoke
  [ 8] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.Executors$RunnableAdapter.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.ThreadPoolExecutor.runWorker
  [14] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [15] java.lang.Thread.runWith
  [16] java.lang.Thread.run

--- 400000000 ns (0.92%), 40 samples
  [ 0] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 1] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 2] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 3] java.lang.invoke.LambdaForm$MH.0x000000012802e400.invoke
  [ 4] java.lang.invoke.LambdaForm$MH.0x0000000128002800.invokeExact_MT
  [ 5] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 6] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 7] java.lang.reflect.Method.invoke
  [ 8] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.Executors$RunnableAdapter.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.ThreadPoolExecutor.runWorker
  [14] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [15] java.lang.Thread.runWith
  [16] java.lang.Thread.run

--- 270000000 ns (0.62%), 27 samples
  [ 0] com.panfutov.Service.doWithResult
  [ 1] com.panfutov.Benchmark.jresult
  [ 2] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 3] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 4] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 5] java.lang.invoke.LambdaForm$MH.0x000000012802e400.invoke
  [ 6] java.lang.invoke.LambdaForm$MH.0x0000000128002800.invokeExact_MT
  [ 7] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 8] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.runWith
  [18] java.lang.Thread.run

--- 240000000 ns (0.55%), 24 samples
  [ 0] java.util.Random.next
  [ 1] java.util.Random.nextBoolean
  [ 2] com.panfutov.Service.doWithResult
  [ 3] com.panfutov.Benchmark.jresult
  [ 4] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 5] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 6] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 7] java.lang.invoke.LambdaForm$MH.0x000000012802e400.invoke
  [ 8] java.lang.invoke.LambdaForm$MH.0x0000000128002800.invokeExact_MT
  [ 9] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [10] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.runWith
  [20] java.lang.Thread.run

--- 110000000 ns (0.25%), 11 samples
  [ 0] __psynch_cvwait
  [ 1] PlatformMonitor::wait
  [ 2] Monitor::wait_without_safepoint_check
  [ 3] WatcherThread::sleep
  [ 4] WatcherThread::run
  [ 5] Thread::call_run
  [ 6] thread_native_entry
  [ 7] _pthread_start
  [ 8] thread_start

--- 20000000 ns (0.05%), 2 samples
  [ 0] __psynch_cvwait
  [ 1] PlatformMonitor::wait
  [ 2] Monitor::wait_without_safepoint_check
  [ 3] MonitorDeflationThread::monitor_deflation_thread_entry
  [ 4] JavaThread::thread_main_inner
  [ 5] Thread::call_run
  [ 6] thread_native_entry
  [ 7] _pthread_start
  [ 8] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.util.concurrent.locks.ReentrantLock$Sync.isHeldExclusively
  [ 1] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.signal
  [ 2] java.util.concurrent.LinkedBlockingQueue.offer
  [ 3] java.util.AbstractQueue.add
  [ 4] java.util.concurrent.ExecutorCompletionService$QueueingFuture.done
  [ 5] java.util.concurrent.FutureTask.finishCompletion
  [ 6] java.util.concurrent.FutureTask.set
  [ 7] java.util.concurrent.FutureTask.run
  [ 8] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 9] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [10] java.lang.Thread.runWith
  [11] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] StatSamplerTask::task
  [ 1] PeriodicTask::real_time_tick
  [ 2] WatcherThread::run
  [ 3] Thread::call_run
  [ 4] thread_native_entry
  [ 5] _pthread_start
  [ 6] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] __gettimeofday
  [ 1] PlatformMonitor::wait
  [ 2] Monitor::wait_without_safepoint_check
  [ 3] WatcherThread::sleep
  [ 4] WatcherThread::run
  [ 5] Thread::call_run
  [ 6] thread_native_entry
  [ 7] _pthread_start
  [ 8] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] JVM_ReferenceRefersTo
  [ 1] java.lang.ref.Reference.refersTo0
  [ 2] java.lang.ref.Reference.refersToImpl
  [ 3] java.lang.ref.Reference.refersTo
  [ 4] java.lang.reflect.AccessibleObject.isAccessChecked
  [ 5] java.lang.reflect.AccessibleObject.verifyAccess
  [ 6] java.lang.reflect.AccessibleObject.checkAccess
  [ 7] java.lang.reflect.Method.invoke
  [ 8] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.Executors$RunnableAdapter.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.ThreadPoolExecutor.runWorker
  [14] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [15] java.lang.Thread.runWith
  [16] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] pthread_mutex_lock
  [ 1] _pthread_cond_wait
  [ 2] PlatformMonitor::wait
  [ 3] Monitor::wait_without_safepoint_check
  [ 4] WatcherThread::sleep
  [ 5] WatcherThread::run
  [ 6] Thread::call_run
  [ 7] thread_native_entry
  [ 8] _pthread_start
  [ 9] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.lang.System.nanoTime
  [ 1] org.openjdk.jmh.runner.BenchmarkHandler.runIteration
  [ 2] org.openjdk.jmh.runner.BaseRunner.runBenchmark
  [ 3] org.openjdk.jmh.runner.BaseRunner.runBenchmark
  [ 4] org.openjdk.jmh.runner.BaseRunner.doSingle
  [ 5] org.openjdk.jmh.runner.BaseRunner.runBenchmarksForked
  [ 6] org.openjdk.jmh.runner.ForkedRunner.run
  [ 7] org.openjdk.jmh.runner.ForkedMain.main

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.io.ObjectOutputStream.defaultWriteFields
  [ 1] java.io.ObjectOutputStream.writeSerialData
  [ 2] java.io.ObjectOutputStream.writeOrdinaryObject
  [ 3] java.io.ObjectOutputStream.writeObject0
  [ 4] java.io.ObjectOutputStream.writeObject
  [ 5] org.openjdk.jmh.runner.link.BinaryLinkClient.pushFrame
  [ 6] org.openjdk.jmh.runner.link.BinaryLinkClient.lambda$new$0
  [ 7] org.openjdk.jmh.runner.link.BinaryLinkClient$$Lambda.0x00000001280066b0.invoke
  [ 8] jdk.proxy1.$Proxy0.iterationResult
  [ 9] org.openjdk.jmh.runner.BaseRunner.runBenchmark
  [10] org.openjdk.jmh.runner.BaseRunner.runBenchmark
  [11] org.openjdk.jmh.runner.BaseRunner.doSingle
  [12] org.openjdk.jmh.runner.BaseRunner.runBenchmarksForked
  [13] org.openjdk.jmh.runner.ForkedRunner.run
  [14] org.openjdk.jmh.runner.ForkedMain.main

--- 10000000 ns (0.02%), 1 sample
  [ 0] com.panfutov.Benchmark.jresult
  [ 1] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 2] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 3] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 4] java.lang.invoke.LambdaForm$MH.0x000000012802e400.invoke
  [ 5] java.lang.invoke.LambdaForm$MH.0x0000000128002800.invokeExact_MT
  [ 6] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 7] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 8] java.lang.reflect.Method.invoke
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] java.util.concurrent.FutureTask.run
  [12] java.util.concurrent.Executors$RunnableAdapter.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.ThreadPoolExecutor.runWorker
  [15] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [16] java.lang.Thread.runWith
  [17] java.lang.Thread.run

          ns  percent  samples  top
  ----------  -------  -------  ---
 21570000000   49.72%     2157  java.util.concurrent.atomic.AtomicLong.compareAndSet
 10090000000   23.26%     1009  java.util.Random.next
  4870000000   11.23%      487  com.panfutov.Service.doWithResult
  3870000000    8.92%      387  com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  2210000000    5.09%      221  com.panfutov.result.Result.isFailure
   560000000    1.29%       56  com.panfutov.result.Result.isSuccess
   130000000    0.30%       13  __psynch_cvwait
    10000000    0.02%        1  JVM_ReferenceRefersTo
    10000000    0.02%        1  com.panfutov.Benchmark.jresult
    10000000    0.02%        1  java.io.ObjectOutputStream.defaultWriteFields
    10000000    0.02%        1  java.lang.System.nanoTime
    10000000    0.02%        1  __gettimeofday
    10000000    0.02%        1  StatSamplerTask::task
    10000000    0.02%        1  java.util.concurrent.locks.ReentrantLock$Sync.isHeldExclusively
    10000000    0.02%        1  pthread_mutex_lock
Async profiler results:
  /Users/artyom/git/exceptions-vs-jresult-benchmark/exceptions-vs-jresult-benchmark/untitled/com.panfutov.Benchmark.jresult-AverageTime/summary-cpu.txt
--- Execution profile ---
Total samples       : 4339

--- 21140000000 ns (48.72%), 2114 samples
  [ 0] java.util.concurrent.atomic.AtomicLong.compareAndSet
  [ 1] java.util.Random.next
  [ 2] java.util.Random.nextBoolean
  [ 3] com.panfutov.Service.doWithResult
  [ 4] com.panfutov.Benchmark.jresult
  [ 5] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 6] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 7] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 8] java.lang.invoke.LambdaForm$MH.0x000000012802d800.invoke
  [ 9] java.lang.invoke.LambdaForm$MH.0x0000000128002800.invokeExact_MT
  [10] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [11] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.runWith
  [21] java.lang.Thread.run

--- 9290000000 ns (21.41%), 929 samples
  [ 0] java.util.Random.next
  [ 1] java.util.Random.nextBoolean
  [ 2] com.panfutov.Service.doWithResult
  [ 3] com.panfutov.Benchmark.jresult
  [ 4] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 5] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 6] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 7] java.lang.invoke.LambdaForm$MH.0x000000012802d800.invoke
  [ 8] java.lang.invoke.LambdaForm$MH.0x0000000128002800.invokeExact_MT
  [ 9] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [10] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.runWith
  [20] java.lang.Thread.run

--- 4040000000 ns (9.31%), 404 samples
  [ 0] com.panfutov.Service.doWithResult
  [ 1] com.panfutov.Benchmark.jresult
  [ 2] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 3] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 4] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 5] java.lang.invoke.LambdaForm$MH.0x000000012802d800.invoke
  [ 6] java.lang.invoke.LambdaForm$MH.0x0000000128002800.invokeExact_MT
  [ 7] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 8] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.runWith
  [18] java.lang.Thread.run

--- 2760000000 ns (6.36%), 276 samples
  [ 0] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 1] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 2] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 3] java.lang.invoke.LambdaForm$MH.0x000000012802d800.invoke
  [ 4] java.lang.invoke.LambdaForm$MH.0x0000000128002800.invokeExact_MT
  [ 5] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 6] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 7] java.lang.reflect.Method.invoke
  [ 8] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.Executors$RunnableAdapter.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.ThreadPoolExecutor.runWorker
  [14] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [15] java.lang.Thread.runWith
  [16] java.lang.Thread.run

--- 2010000000 ns (4.63%), 201 samples
  [ 0] com.panfutov.result.Result.isFailure
  [ 1] com.panfutov.result.Result.ifFailure
  [ 2] com.panfutov.Benchmark.jresult
  [ 3] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 4] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 5] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 6] java.lang.invoke.LambdaForm$MH.0x000000012802d800.invoke
  [ 7] java.lang.invoke.LambdaForm$MH.0x0000000128002800.invokeExact_MT
  [ 8] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 9] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [10] java.lang.reflect.Method.invoke
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.Executors$RunnableAdapter.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.ThreadPoolExecutor.runWorker
  [17] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [18] java.lang.Thread.runWith
  [19] java.lang.Thread.run

--- 970000000 ns (2.24%), 97 samples
  [ 0] java.util.Random.next
  [ 1] java.util.Random.nextBoolean
  [ 2] com.panfutov.Service.doWithResult
  [ 3] com.panfutov.Benchmark.jresult
  [ 4] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 5] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 6] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 7] java.lang.invoke.LambdaForm$MH.0x000000012802d800.invoke
  [ 8] java.lang.invoke.LambdaForm$MH.0x0000000128002800.invokeExact_MT
  [ 9] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [10] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.runWith
  [20] java.lang.Thread.run

--- 940000000 ns (2.17%), 94 samples
  [ 0] com.panfutov.Service.doWithResult
  [ 1] com.panfutov.Benchmark.jresult
  [ 2] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 3] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 4] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 5] java.lang.invoke.LambdaForm$MH.0x000000012802d800.invoke
  [ 6] java.lang.invoke.LambdaForm$MH.0x0000000128002800.invokeExact_MT
  [ 7] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 8] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.runWith
  [18] java.lang.Thread.run

--- 600000000 ns (1.38%), 60 samples
  [ 0] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 1] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 2] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 3] java.lang.invoke.LambdaForm$MH.0x000000012802d800.invoke
  [ 4] java.lang.invoke.LambdaForm$MH.0x0000000128002800.invokeExact_MT
  [ 5] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 6] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 7] java.lang.reflect.Method.invoke
  [ 8] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.Executors$RunnableAdapter.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.ThreadPoolExecutor.runWorker
  [14] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [15] java.lang.Thread.runWith
  [16] java.lang.Thread.run

--- 550000000 ns (1.27%), 55 samples
  [ 0] com.panfutov.result.Result.isSuccess
  [ 1] com.panfutov.result.Result.isFailure
  [ 2] com.panfutov.result.Result.ifFailure
  [ 3] com.panfutov.Benchmark.jresult
  [ 4] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 5] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 6] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 7] java.lang.invoke.LambdaForm$MH.0x000000012802d800.invoke
  [ 8] java.lang.invoke.LambdaForm$MH.0x0000000128002800.invokeExact_MT
  [ 9] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [10] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.runWith
  [20] java.lang.Thread.run

--- 360000000 ns (0.83%), 36 samples
  [ 0] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 1] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 2] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 3] java.lang.invoke.LambdaForm$MH.0x000000012802d800.invoke
  [ 4] java.lang.invoke.LambdaForm$MH.0x0000000128002800.invokeExact_MT
  [ 5] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 6] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 7] java.lang.reflect.Method.invoke
  [ 8] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.Executors$RunnableAdapter.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.ThreadPoolExecutor.runWorker
  [14] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [15] java.lang.Thread.runWith
  [16] java.lang.Thread.run

--- 350000000 ns (0.81%), 35 samples
  [ 0] com.panfutov.Service.doWithResult
  [ 1] com.panfutov.Benchmark.jresult
  [ 2] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 3] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 4] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 5] java.lang.invoke.LambdaForm$MH.0x000000012802d800.invoke
  [ 6] java.lang.invoke.LambdaForm$MH.0x0000000128002800.invokeExact_MT
  [ 7] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 8] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.runWith
  [18] java.lang.Thread.run

--- 230000000 ns (0.53%), 23 samples
  [ 0] java.util.Random.next
  [ 1] java.util.Random.nextBoolean
  [ 2] com.panfutov.Service.doWithResult
  [ 3] com.panfutov.Benchmark.jresult
  [ 4] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 5] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 6] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 7] java.lang.invoke.LambdaForm$MH.0x000000012802d800.invoke
  [ 8] java.lang.invoke.LambdaForm$MH.0x0000000128002800.invokeExact_MT
  [ 9] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [10] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.runWith
  [20] java.lang.Thread.run

--- 50000000 ns (0.12%), 5 samples
  [ 0] __psynch_cvwait
  [ 1] PlatformMonitor::wait
  [ 2] Monitor::wait_without_safepoint_check
  [ 3] WatcherThread::sleep
  [ 4] WatcherThread::run
  [ 5] Thread::call_run
  [ 6] thread_native_entry
  [ 7] _pthread_start
  [ 8] thread_start

--- 20000000 ns (0.05%), 2 samples
  [ 0] __psynch_cvwait
  [ 1] PlatformMonitor::wait
  [ 2] Monitor::wait_without_safepoint_check
  [ 3] MonitorDeflationThread::monitor_deflation_thread_entry
  [ 4] JavaThread::thread_main_inner
  [ 5] Thread::call_run
  [ 6] thread_native_entry
  [ 7] _pthread_start
  [ 8] thread_start

--- 20000000 ns (0.05%), 2 samples
  [ 0] com.panfutov.Benchmark.jresult
  [ 1] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 2] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 3] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 4] java.lang.invoke.LambdaForm$MH.0x000000012802d800.invoke
  [ 5] java.lang.invoke.LambdaForm$MH.0x0000000128002800.invokeExact_MT
  [ 6] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 7] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 8] java.lang.reflect.Method.invoke
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] java.util.concurrent.FutureTask.run
  [12] java.util.concurrent.Executors$RunnableAdapter.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.ThreadPoolExecutor.runWorker
  [15] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [16] java.lang.Thread.runWith
  [17] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] __psynch_mutexwait
  [ 1] _pthread_mutex_firstfit_lock_slow
  [ 2] Mutex::lock
  [ 3] ciMethod::ciMethod
  [ 4] ciObjectFactory::create_new_metadata
  [ 5] ciObjectFactory::get_metadata
  [ 6] ciEnv::get_method_by_index_impl
  [ 7] ciBytecodeStream::get_method
  [ 8] ciTypeFlow::StateVector::do_invoke
  [ 9] ciTypeFlow::StateVector::apply_one_bytecode
  [10] ciTypeFlow::flow_block
  [11] ciTypeFlow::df_flow_types
  [12] ciTypeFlow::flow_types
  [13] ciTypeFlow::do_flow
  [14] ciMethod::get_flow_analysis
  [15] InlineTree::ok_to_inline
  [16] Compile::call_generator
  [17] Parse::do_call
  [18] Parse::do_one_block
  [19] Parse::do_all_blocks
  [20] Parse::Parse
  [21] ParseGenerator::generate
  [22] PredictedCallGenerator::generate
  [23] PredictedCallGenerator::generate
  [24] Parse::do_call
  [25] Parse::do_one_block
  [26] Parse::do_all_blocks
  [27] Parse::Parse
  [28] ParseGenerator::generate
  [29] PredictedCallGenerator::generate
  [30] Parse::do_call
  [31] Parse::do_one_block
  [32] Parse::do_all_blocks
  [33] Parse::Parse
  [34] ParseGenerator::generate
  [35] Compile::Compile
  [36] C2Compiler::compile_method
  [37] CompileBroker::invoke_compiler_on_method
  [38] CompileBroker::compiler_thread_loop
  [39] JavaThread::thread_main_inner
  [40] Thread::call_run
  [41] thread_native_entry
  [42] _pthread_start
  [43] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] clock_gettime
  [ 1] Monitor::wait_without_safepoint_check
  [ 2] WatcherThread::sleep
  [ 3] WatcherThread::run
  [ 4] Thread::call_run
  [ 5] thread_native_entry
  [ 6] _pthread_start
  [ 7] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] MethodLiveness::compute_liveness
  [ 1] ciMethod::bci_block_start
  [ 2] BlockListBuilder::set_leaders
  [ 3] BlockListBuilder::BlockListBuilder
  [ 4] GraphBuilder::GraphBuilder
  [ 5] IRScope::IRScope
  [ 6] IR::IR
  [ 7] Compilation::build_hir
  [ 8] Compilation::compile_java_method
  [ 9] Compilation::compile_method
  [10] Compilation::Compilation
  [11] Compiler::compile_method
  [12] CompileBroker::invoke_compiler_on_method
  [13] CompileBroker::compiler_thread_loop
  [14] JavaThread::thread_main_inner
  [15] Thread::call_run
  [16] thread_native_entry
  [17] _pthread_start
  [18] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] mach_absolute_time
  [ 1] WatcherThread::sleep
  [ 2] WatcherThread::run
  [ 3] Thread::call_run
  [ 4] thread_native_entry
  [ 5] _pthread_start
  [ 6] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] org.openjdk.jmh.runner.BenchmarkHandler.runIteration
  [ 1] org.openjdk.jmh.runner.BaseRunner.runBenchmark
  [ 2] org.openjdk.jmh.runner.BaseRunner.runBenchmark
  [ 3] org.openjdk.jmh.runner.BaseRunner.doSingle
  [ 4] org.openjdk.jmh.runner.BaseRunner.runBenchmarksForked
  [ 5] org.openjdk.jmh.runner.ForkedRunner.run
  [ 6] org.openjdk.jmh.runner.ForkedMain.main

--- 10000000 ns (0.02%), 1 sample
  [ 0] __psynch_cvwait
  [ 1] PlatformMonitor::wait
  [ 2] Monitor::wait_without_safepoint_check
  [ 3] G1ServiceThread::wait_for_task
  [ 4] G1ServiceThread::run_service
  [ 5] ConcurrentGCThread::run
  [ 6] Thread::call_run
  [ 7] thread_native_entry
  [ 8] _pthread_start
  [ 9] thread_start

          ns  percent  samples  top
  ----------  -------  -------  ---
 21140000000   48.72%     2114  java.util.concurrent.atomic.AtomicLong.compareAndSet
 10490000000   24.18%     1049  java.util.Random.next
  5330000000   12.28%      533  com.panfutov.Service.doWithResult
  3720000000    8.57%      372  com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  2010000000    4.63%      201  com.panfutov.result.Result.isFailure
   550000000    1.27%       55  com.panfutov.result.Result.isSuccess
    80000000    0.18%        8  __psynch_cvwait
    20000000    0.05%        2  com.panfutov.Benchmark.jresult
    10000000    0.02%        1  MethodLiveness::compute_liveness
    10000000    0.02%        1  clock_gettime
    10000000    0.02%        1  __psynch_mutexwait
    10000000    0.02%        1  mach_absolute_time
    10000000    0.02%        1  org.openjdk.jmh.runner.BenchmarkHandler.runIteration
Async profiler results:
  /Users/artyom/git/exceptions-vs-jresult-benchmark/exceptions-vs-jresult-benchmark/untitled/com.panfutov.Benchmark.jresult-AverageTime/summary-cpu.txt
--- Execution profile ---
Total samples       : 4115

--- 19970000000 ns (48.53%), 1997 samples
  [ 0] java.util.concurrent.atomic.AtomicLong.compareAndSet
  [ 1] java.util.Random.next
  [ 2] java.util.Random.nextBoolean
  [ 3] com.panfutov.Service.doWithResult
  [ 4] com.panfutov.Benchmark.jresult
  [ 5] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 6] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 7] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 8] java.lang.invoke.LambdaForm$MH.0x000000012502e400.invoke
  [ 9] java.lang.invoke.LambdaForm$MH.0x0000000125002800.invokeExact_MT
  [10] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [11] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.runWith
  [21] java.lang.Thread.run

--- 9060000000 ns (22.02%), 906 samples
  [ 0] java.util.Random.next
  [ 1] java.util.Random.nextBoolean
  [ 2] com.panfutov.Service.doWithResult
  [ 3] com.panfutov.Benchmark.jresult
  [ 4] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 5] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 6] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 7] java.lang.invoke.LambdaForm$MH.0x000000012502e400.invoke
  [ 8] java.lang.invoke.LambdaForm$MH.0x0000000125002800.invokeExact_MT
  [ 9] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [10] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.runWith
  [20] java.lang.Thread.run

--- 3250000000 ns (7.90%), 325 samples
  [ 0] com.panfutov.Service.doWithResult
  [ 1] com.panfutov.Benchmark.jresult
  [ 2] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 3] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 4] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 5] java.lang.invoke.LambdaForm$MH.0x000000012502e400.invoke
  [ 6] java.lang.invoke.LambdaForm$MH.0x0000000125002800.invokeExact_MT
  [ 7] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 8] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.runWith
  [18] java.lang.Thread.run

--- 2460000000 ns (5.98%), 246 samples
  [ 0] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 1] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 2] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 3] java.lang.invoke.LambdaForm$MH.0x000000012502e400.invoke
  [ 4] java.lang.invoke.LambdaForm$MH.0x0000000125002800.invokeExact_MT
  [ 5] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 6] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 7] java.lang.reflect.Method.invoke
  [ 8] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.Executors$RunnableAdapter.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.ThreadPoolExecutor.runWorker
  [14] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [15] java.lang.Thread.runWith
  [16] java.lang.Thread.run

--- 1160000000 ns (2.82%), 116 samples
  [ 0] com.panfutov.result.Result.isFailure
  [ 1] com.panfutov.result.Result.ifFailure
  [ 2] com.panfutov.Benchmark.jresult
  [ 3] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 4] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 5] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 6] java.lang.invoke.LambdaForm$MH.0x000000012502e400.invoke
  [ 7] java.lang.invoke.LambdaForm$MH.0x0000000125002800.invokeExact_MT
  [ 8] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 9] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [10] java.lang.reflect.Method.invoke
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.Executors$RunnableAdapter.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.ThreadPoolExecutor.runWorker
  [17] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [18] java.lang.Thread.runWith
  [19] java.lang.Thread.run

--- 1080000000 ns (2.62%), 108 samples
  [ 0] java.util.Random.next
  [ 1] java.util.Random.nextBoolean
  [ 2] com.panfutov.Service.doWithResult
  [ 3] com.panfutov.Benchmark.jresult
  [ 4] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 5] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 6] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 7] java.lang.invoke.LambdaForm$MH.0x000000012502e400.invoke
  [ 8] java.lang.invoke.LambdaForm$MH.0x0000000125002800.invokeExact_MT
  [ 9] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [10] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.runWith
  [20] java.lang.Thread.run

--- 1020000000 ns (2.48%), 102 samples
  [ 0] com.panfutov.result.Result.isSuccess
  [ 1] com.panfutov.result.Result.isFailure
  [ 2] com.panfutov.result.Result.ifFailure
  [ 3] com.panfutov.Benchmark.jresult
  [ 4] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 5] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 6] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 7] java.lang.invoke.LambdaForm$MH.0x000000012502e400.invoke
  [ 8] java.lang.invoke.LambdaForm$MH.0x0000000125002800.invokeExact_MT
  [ 9] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [10] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.runWith
  [20] java.lang.Thread.run

--- 1010000000 ns (2.45%), 101 samples
  [ 0] com.panfutov.Service.doWithResult
  [ 1] com.panfutov.Benchmark.jresult
  [ 2] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 3] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 4] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 5] java.lang.invoke.LambdaForm$MH.0x000000012502e400.invoke
  [ 6] java.lang.invoke.LambdaForm$MH.0x0000000125002800.invokeExact_MT
  [ 7] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 8] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.runWith
  [18] java.lang.Thread.run

--- 580000000 ns (1.41%), 58 samples
  [ 0] com.panfutov.Service.doWithResult
  [ 1] com.panfutov.Benchmark.jresult
  [ 2] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 3] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 4] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 5] java.lang.invoke.LambdaForm$MH.0x000000012502e400.invoke
  [ 6] java.lang.invoke.LambdaForm$MH.0x0000000125002800.invokeExact_MT
  [ 7] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 8] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.runWith
  [18] java.lang.Thread.run

--- 520000000 ns (1.26%), 52 samples
  [ 0] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 1] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 2] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 3] java.lang.invoke.LambdaForm$MH.0x000000012502e400.invoke
  [ 4] java.lang.invoke.LambdaForm$MH.0x0000000125002800.invokeExact_MT
  [ 5] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 6] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 7] java.lang.reflect.Method.invoke
  [ 8] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.Executors$RunnableAdapter.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.ThreadPoolExecutor.runWorker
  [14] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [15] java.lang.Thread.runWith
  [16] java.lang.Thread.run

--- 450000000 ns (1.09%), 45 samples
  [ 0] java.util.Random.next
  [ 1] java.util.Random.nextBoolean
  [ 2] com.panfutov.Service.doWithResult
  [ 3] com.panfutov.Benchmark.jresult
  [ 4] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 5] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 6] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 7] java.lang.invoke.LambdaForm$MH.0x000000012502e400.invoke
  [ 8] java.lang.invoke.LambdaForm$MH.0x0000000125002800.invokeExact_MT
  [ 9] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [10] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.runWith
  [20] java.lang.Thread.run

--- 440000000 ns (1.07%), 44 samples
  [ 0] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 1] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 2] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 3] java.lang.invoke.LambdaForm$MH.0x000000012502e400.invoke
  [ 4] java.lang.invoke.LambdaForm$MH.0x0000000125002800.invokeExact_MT
  [ 5] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 6] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 7] java.lang.reflect.Method.invoke
  [ 8] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.Executors$RunnableAdapter.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.ThreadPoolExecutor.runWorker
  [14] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [15] java.lang.Thread.runWith
  [16] java.lang.Thread.run

--- 80000000 ns (0.19%), 8 samples
  [ 0] __psynch_cvwait
  [ 1] PlatformMonitor::wait
  [ 2] Monitor::wait_without_safepoint_check
  [ 3] WatcherThread::sleep
  [ 4] WatcherThread::run
  [ 5] Thread::call_run
  [ 6] thread_native_entry
  [ 7] _pthread_start
  [ 8] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] WatcherThread::sleep
  [ 1] WatcherThread::run
  [ 2] Thread::call_run
  [ 3] thread_native_entry
  [ 4] _pthread_start
  [ 5] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.util.concurrent.ConcurrentHashMap.replaceNode
  [ 1] java.util.concurrent.ConcurrentHashMap.remove
  [ 2] org.openjdk.jmh.runner.BenchmarkHandler.getWorkerData
  [ 3] org.openjdk.jmh.runner.BenchmarkHandler.access$300
  [ 4] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 5] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 6] java.util.concurrent.FutureTask.run
  [ 7] java.util.concurrent.Executors$RunnableAdapter.call
  [ 8] java.util.concurrent.FutureTask.run
  [ 9] java.util.concurrent.ThreadPoolExecutor.runWorker
  [10] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [11] java.lang.Thread.runWith
  [12] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] I2C/C2I adapters
  [ 1] java.util.concurrent.locks.ReentrantLock$NonfairSync.tryAcquire
  [ 2] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire
  [ 3] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [ 4] java.util.concurrent.LinkedBlockingQueue.poll
  [ 5] java.util.concurrent.ExecutorCompletionService.poll
  [ 6] org.openjdk.jmh.runner.BenchmarkHandler.runIteration
  [ 7] org.openjdk.jmh.runner.BaseRunner.runBenchmark
  [ 8] org.openjdk.jmh.runner.BaseRunner.runBenchmark
  [ 9] org.openjdk.jmh.runner.BaseRunner.doSingle
  [10] org.openjdk.jmh.runner.BaseRunner.runBenchmarksForked
  [11] org.openjdk.jmh.runner.ForkedRunner.run
  [12] org.openjdk.jmh.runner.ForkedMain.main

--- 10000000 ns (0.02%), 1 sample
  [ 0] com.panfutov.Benchmark.jresult
  [ 1] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  [ 2] com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_AverageTime
  [ 3] java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial
  [ 4] java.lang.invoke.LambdaForm$MH.0x000000012502e400.invoke
  [ 5] java.lang.invoke.LambdaForm$MH.0x0000000125002800.invokeExact_MT
  [ 6] jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl
  [ 7] jdk.internal.reflect.DirectMethodHandleAccessor.invoke
  [ 8] java.lang.reflect.Method.invoke
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] java.util.concurrent.FutureTask.run
  [12] java.util.concurrent.Executors$RunnableAdapter.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.ThreadPoolExecutor.runWorker
  [15] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [16] java.lang.Thread.runWith
  [17] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.util.concurrent.locks.LockSupport.park
  [ 1] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire
  [ 2] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly
  [ 3] java.util.concurrent.CountDownLatch.await
  [ 4] org.openjdk.jmh.runner.InfraControlL2.awaitWarmupReady
  [ 5] org.openjdk.jmh.runner.InfraControl.awaitWarmupReady
  [ 6] org.openjdk.jmh.runner.BenchmarkHandler.runIteration
  [ 7] org.openjdk.jmh.runner.BaseRunner.runBenchmark
  [ 8] org.openjdk.jmh.runner.BaseRunner.runBenchmark
  [ 9] org.openjdk.jmh.runner.BaseRunner.doSingle
  [10] org.openjdk.jmh.runner.BaseRunner.runBenchmarksForked
  [11] org.openjdk.jmh.runner.ForkedRunner.run
  [12] org.openjdk.jmh.runner.ForkedMain.main

--- 10000000 ns (0.02%), 1 sample
  [ 0] VMError::is_error_reported
  [ 1] WatcherThread::run
  [ 2] Thread::call_run
  [ 3] thread_native_entry
  [ 4] _pthread_start
  [ 5] thread_start

--- 10000000 ns (0.02%), 1 sample
  [ 0] StubQueue::remove_all
  [ 1] ParallelCleanupTask::work
  [ 2] SafepointSynchronize::do_cleanup_tasks
  [ 3] SafepointSynchronize::begin
  [ 4] VMThread::inner_execute
  [ 5] VMThread::run
  [ 6] Thread::call_run
  [ 7] thread_native_entry
  [ 8] _pthread_start
  [ 9] thread_start

          ns  percent  samples  top
  ----------  -------  -------  ---
 19970000000   48.53%     1997  java.util.concurrent.atomic.AtomicLong.compareAndSet
 10590000000   25.74%     1059  java.util.Random.next
  4840000000   11.76%      484  com.panfutov.Service.doWithResult
  3420000000    8.31%      342  com.panfutov.jmh_generated.Benchmark_jresult_jmhTest.jresult_avgt_jmhStub
  1160000000    2.82%      116  com.panfutov.result.Result.isFailure
  1020000000    2.48%      102  com.panfutov.result.Result.isSuccess
    80000000    0.19%        8  __psynch_cvwait
    10000000    0.02%        1  I2C/C2I adapters
    10000000    0.02%        1  com.panfutov.Benchmark.jresult
    10000000    0.02%        1  WatcherThread::sleep
    10000000    0.02%        1  VMError::is_error_reported
    10000000    0.02%        1  java.util.concurrent.ConcurrentHashMap.replaceNode
    10000000    0.02%        1  StubQueue::remove_all
    10000000    0.02%        1  java.util.concurrent.locks.LockSupport.park
Async profiler results:
  /Users/artyom/git/exceptions-vs-jresult-benchmark/exceptions-vs-jresult-benchmark/untitled/com.panfutov.Benchmark.jresult-AverageTime/summary-cpu.txt


# Run complete. Total time: 00:16:51

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                   Mode  Cnt    Score    Error  Units
Benchmark.exceptions        avgt   25  674.597 ± 80.522  ns/op
Benchmark.exceptions:async  avgt           NaN             ---
Benchmark.jresult           avgt   25   13.849 ±  0.080  ns/op
Benchmark.jresult:async     avgt           NaN             ---

Process finished with exit code 0
